
Winder2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000090  00800100  00001b94  00001c28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800190  00800190  00001cb8  2**0
                  ALLOC
  3 .debug_aranges 00000080  00000000  00000000  00001cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000014f  00000000  00000000  00001d38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000776  00000000  00000000  00001e87  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000282  00000000  00000000  000025fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b89  00000000  00000000  0000287f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00003408  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039a  00000000  00000000  000034e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000492  00000000  00000000  00003882  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00003d14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
/*************************************************************************
Display string from flash
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts_P(const char *progmem_s)
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1790>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1788>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e4 e9       	ldi	r30, 0x94	; 148
     17e:	fb e1       	ldi	r31, 0x1B	; 27
     180:	02 c0       	rjmp	.+4      	; 0x186 <.do_copy_data_start>

00000182 <.do_copy_data_loop>:
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0

00000186 <.do_copy_data_start>:
     186:	a0 39       	cpi	r26, 0x90	; 144
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <.do_copy_data_loop>

0000018c <__do_clear_bss>:
     18c:	11 e0       	ldi	r17, 0x01	; 1
     18e:	a0 e9       	ldi	r26, 0x90	; 144
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a4 3c       	cpi	r26, 0xC4	; 196
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 95 02 	call	0x52a	; 0x52a <main>
     1a0:	0c 94 c8 0d 	jmp	0x1b90	; 0x1b90 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <_Z8read_adch>:
double Diametrul_sarmei=0.0012, Coef_deplasare=1, Nr_bobinarisecunda=0.5;

// Read the AD conversion result
unsigned int read_adc(unsigned char adc_input)
	{
		ADMUX=adc_input | ADC_VREF_TYPE;
     1a8:	80 64       	ori	r24, 0x40	; 64
     1aa:	80 93 7c 00 	sts	0x007C, r24
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     1ae:	85 e3       	ldi	r24, 0x35	; 53
     1b0:	8a 95       	dec	r24
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <_Z8read_adch+0x8>
		// Delay needed for the stabilization of the ADC input voltage
		_delay_us(10);
		// Start the AD conversion
		ADCSRA|=(1<<ADSC);
     1b4:	ea e7       	ldi	r30, 0x7A	; 122
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	80 81       	ld	r24, Z
     1ba:	80 64       	ori	r24, 0x40	; 64
     1bc:	80 83       	st	Z, r24
		// Wait for the AD conversion to complete
		while ((ADCSRA & (1<<ADIF))==0);
     1be:	80 81       	ld	r24, Z
     1c0:	84 ff       	sbrs	r24, 4
     1c2:	fd cf       	rjmp	.-6      	; 0x1be <_Z8read_adch+0x16>
		ADCSRA|=(1<<ADIF);
     1c4:	ea e7       	ldi	r30, 0x7A	; 122
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	80 61       	ori	r24, 0x10	; 16
     1cc:	80 83       	st	Z, r24
		return ADCW;
     1ce:	20 91 78 00 	lds	r18, 0x0078
     1d2:	30 91 79 00 	lds	r19, 0x0079
	}
     1d6:	82 2f       	mov	r24, r18
     1d8:	93 2f       	mov	r25, r19
     1da:	08 95       	ret

000001dc <_Z16read_LCD_buttonsv>:

// read the buttons
int read_LCD_buttons()
	{
		int adc_key_in  = 0;
		adc_key_in = read_adc(0);      // read the value from the sensor 
     1dc:	80 e0       	ldi	r24, 0x00	; 0
     1de:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_Z8read_adch>
		// my buttons when read are centered at these valies: 0, 144, 329, 504, 741
		// we add approx 50 to those values and check to see if we are close
		if (adc_key_in > 1000) return btnNONE; // We make this the 1st option for speed reasons since it will be the most likely result
     1e2:	23 e0       	ldi	r18, 0x03	; 3
     1e4:	89 3e       	cpi	r24, 0xE9	; 233
     1e6:	92 07       	cpc	r25, r18
     1e8:	04 f5       	brge	.+64     	; 0x22a <_Z16read_LCD_buttonsv+0x4e>
		// For V1.1 us this threshold
		if (adc_key_in < 50)   return btnRIGHT;  
     1ea:	82 33       	cpi	r24, 0x32	; 50
     1ec:	91 05       	cpc	r25, r1
     1ee:	1c f4       	brge	.+6      	; 0x1f6 <_Z16read_LCD_buttonsv+0x1a>
     1f0:	20 e0       	ldi	r18, 0x00	; 0
     1f2:	30 e0       	ldi	r19, 0x00	; 0
     1f4:	1c c0       	rjmp	.+56     	; 0x22e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 250)  return btnUP; 
     1f6:	8a 3f       	cpi	r24, 0xFA	; 250
     1f8:	91 05       	cpc	r25, r1
     1fa:	1c f4       	brge	.+6      	; 0x202 <_Z16read_LCD_buttonsv+0x26>
     1fc:	21 e0       	ldi	r18, 0x01	; 1
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	16 c0       	rjmp	.+44     	; 0x22e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 450)  return btnDOWN; 
     202:	21 e0       	ldi	r18, 0x01	; 1
     204:	82 3c       	cpi	r24, 0xC2	; 194
     206:	92 07       	cpc	r25, r18
     208:	1c f4       	brge	.+6      	; 0x210 <_Z16read_LCD_buttonsv+0x34>
     20a:	22 e0       	ldi	r18, 0x02	; 2
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	0f c0       	rjmp	.+30     	; 0x22e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 650)  return btnLEFT; 
     210:	22 e0       	ldi	r18, 0x02	; 2
     212:	8a 38       	cpi	r24, 0x8A	; 138
     214:	92 07       	cpc	r25, r18
     216:	1c f4       	brge	.+6      	; 0x21e <_Z16read_LCD_buttonsv+0x42>
     218:	23 e0       	ldi	r18, 0x03	; 3
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	08 c0       	rjmp	.+16     	; 0x22e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 850)  return btnSELECT;  
     21e:	82 55       	subi	r24, 0x52	; 82
     220:	93 40       	sbci	r25, 0x03	; 3
     222:	1c f4       	brge	.+6      	; 0x22a <_Z16read_LCD_buttonsv+0x4e>
     224:	24 e0       	ldi	r18, 0x04	; 4
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	02 c0       	rjmp	.+4      	; 0x22e <_Z16read_LCD_buttonsv+0x52>
     22a:	25 e0       	ldi	r18, 0x05	; 5
     22c:	30 e0       	ldi	r19, 0x00	; 0

		return btnNONE;  // when all others fail, return this...
	}
     22e:	82 2f       	mov	r24, r18
     230:	93 2f       	mov	r25, r19
     232:	08 95       	ret

00000234 <_ZL9lcd_writehh>:
Input:    data   byte to write to LCD
          rs     1: write data
                 0: write instruction
Returns:  none
*************************************************************************/
static void lcd_write(uint8_t data,uint8_t rs)
     234:	28 2f       	mov	r18, r24
          Delay_us(5);
          PrevCmdInvolvedAddressCounter=0;
        }
    #endif

    if (rs)
     236:	66 23       	and	r22, r22
     238:	31 f0       	breq	.+12     	; 0x246 <_ZL9lcd_writehh+0x12>
      {
        lcd_rs_port_high();                            // RS=1: Write Character
     23a:	eb e2       	ldi	r30, 0x2B	; 43
     23c:	f0 e0       	ldi	r31, 0x00	; 0
     23e:	80 81       	ld	r24, Z
     240:	81 60       	ori	r24, 0x01	; 1
     242:	80 83       	st	Z, r24
     244:	05 c0       	rjmp	.+10     	; 0x250 <_ZL9lcd_writehh+0x1c>
        PrevCmdInvolvedAddressCounter=1;
        #endif
      }
    else
      {
        lcd_rs_port_low();                          // RS=0: Write Command
     246:	eb e2       	ldi	r30, 0x2B	; 43
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	80 81       	ld	r24, Z
     24c:	8e 7f       	andi	r24, 0xFE	; 254
     24e:	80 83       	st	Z, r24
        PrevCmdInvolvedAddressCounter=0;
        #endif
      }

    #if LCD_BITS==4
      lcd_db7_port_set(data&_BV(7));                  //Output High Nibble
     250:	22 23       	and	r18, r18
     252:	34 f4       	brge	.+12     	; 0x260 <_ZL9lcd_writehh+0x2c>
     254:	eb e2       	ldi	r30, 0x2B	; 43
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	80 68       	ori	r24, 0x80	; 128
     25c:	80 83       	st	Z, r24
     25e:	05 c0       	rjmp	.+10     	; 0x26a <_ZL9lcd_writehh+0x36>
     260:	eb e2       	ldi	r30, 0x2B	; 43
     262:	f0 e0       	ldi	r31, 0x00	; 0
     264:	80 81       	ld	r24, Z
     266:	8f 77       	andi	r24, 0x7F	; 127
     268:	80 83       	st	Z, r24
      lcd_db6_port_set(data&_BV(6));
     26a:	92 2f       	mov	r25, r18
     26c:	26 ff       	sbrs	r18, 6
     26e:	06 c0       	rjmp	.+12     	; 0x27c <_ZL9lcd_writehh+0x48>
     270:	eb e2       	ldi	r30, 0x2B	; 43
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	80 81       	ld	r24, Z
     276:	80 64       	ori	r24, 0x40	; 64
     278:	80 83       	st	Z, r24
     27a:	05 c0       	rjmp	.+10     	; 0x286 <_ZL9lcd_writehh+0x52>
     27c:	eb e2       	ldi	r30, 0x2B	; 43
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	80 81       	ld	r24, Z
     282:	8f 7b       	andi	r24, 0xBF	; 191
     284:	80 83       	st	Z, r24
      lcd_db5_port_set(data&_BV(5));
     286:	95 ff       	sbrs	r25, 5
     288:	06 c0       	rjmp	.+12     	; 0x296 <_ZL9lcd_writehh+0x62>
     28a:	eb e2       	ldi	r30, 0x2B	; 43
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	80 62       	ori	r24, 0x20	; 32
     292:	80 83       	st	Z, r24
     294:	05 c0       	rjmp	.+10     	; 0x2a0 <_ZL9lcd_writehh+0x6c>
     296:	eb e2       	ldi	r30, 0x2B	; 43
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	80 81       	ld	r24, Z
     29c:	8f 7d       	andi	r24, 0xDF	; 223
     29e:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(4));
     2a0:	94 ff       	sbrs	r25, 4
     2a2:	06 c0       	rjmp	.+12     	; 0x2b0 <_ZL9lcd_writehh+0x7c>
     2a4:	eb e2       	ldi	r30, 0x2B	; 43
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	80 81       	ld	r24, Z
     2aa:	80 61       	ori	r24, 0x10	; 16
     2ac:	80 83       	st	Z, r24
     2ae:	05 c0       	rjmp	.+10     	; 0x2ba <_ZL9lcd_writehh+0x86>
     2b0:	eb e2       	ldi	r30, 0x2B	; 43
     2b2:	f0 e0       	ldi	r31, 0x00	; 0
     2b4:	80 81       	ld	r24, Z
     2b6:	8f 7e       	andi	r24, 0xEF	; 239
     2b8:	80 83       	st	Z, r24

      Delay_ns(100);
     2ba:	00 c0       	rjmp	.+0      	; 0x2bc <_ZL9lcd_writehh+0x88>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     2bc:	eb e2       	ldi	r30, 0x2B	; 43
     2be:	f0 e0       	ldi	r31, 0x00	; 0
     2c0:	80 81       	ld	r24, Z
     2c2:	84 60       	ori	r24, 0x04	; 4
     2c4:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(4));

      Delay_ns(100);
      lcd_e_port_high();

      Delay_ns(500);
     2c6:	82 e0       	ldi	r24, 0x02	; 2
     2c8:	8a 95       	dec	r24
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <_ZL9lcd_writehh+0x94>
     2cc:	00 c0       	rjmp	.+0      	; 0x2ce <_ZL9lcd_writehh+0x9a>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     2ce:	80 81       	ld	r24, Z
     2d0:	8b 7f       	andi	r24, 0xFB	; 251
     2d2:	80 83       	st	Z, r24
      lcd_e_port_high();

      Delay_ns(500);
      lcd_e_port_low();

      lcd_db7_port_set(data&_BV(3));                  //Output High Nibble
     2d4:	93 ff       	sbrs	r25, 3
     2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <_ZL9lcd_writehh+0xac>
     2d8:	80 81       	ld	r24, Z
     2da:	80 68       	ori	r24, 0x80	; 128
     2dc:	80 83       	st	Z, r24
     2de:	05 c0       	rjmp	.+10     	; 0x2ea <_ZL9lcd_writehh+0xb6>
     2e0:	eb e2       	ldi	r30, 0x2B	; 43
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	80 81       	ld	r24, Z
     2e6:	8f 77       	andi	r24, 0x7F	; 127
     2e8:	80 83       	st	Z, r24
      lcd_db6_port_set(data&_BV(2));
     2ea:	92 ff       	sbrs	r25, 2
     2ec:	06 c0       	rjmp	.+12     	; 0x2fa <_ZL9lcd_writehh+0xc6>
     2ee:	eb e2       	ldi	r30, 0x2B	; 43
     2f0:	f0 e0       	ldi	r31, 0x00	; 0
     2f2:	80 81       	ld	r24, Z
     2f4:	80 64       	ori	r24, 0x40	; 64
     2f6:	80 83       	st	Z, r24
     2f8:	05 c0       	rjmp	.+10     	; 0x304 <_ZL9lcd_writehh+0xd0>
     2fa:	eb e2       	ldi	r30, 0x2B	; 43
     2fc:	f0 e0       	ldi	r31, 0x00	; 0
     2fe:	80 81       	ld	r24, Z
     300:	8f 7b       	andi	r24, 0xBF	; 191
     302:	80 83       	st	Z, r24
      lcd_db5_port_set(data&_BV(1));
     304:	91 ff       	sbrs	r25, 1
     306:	06 c0       	rjmp	.+12     	; 0x314 <_ZL9lcd_writehh+0xe0>
     308:	eb e2       	ldi	r30, 0x2B	; 43
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	80 81       	ld	r24, Z
     30e:	80 62       	ori	r24, 0x20	; 32
     310:	80 83       	st	Z, r24
     312:	05 c0       	rjmp	.+10     	; 0x31e <_ZL9lcd_writehh+0xea>
     314:	eb e2       	ldi	r30, 0x2B	; 43
     316:	f0 e0       	ldi	r31, 0x00	; 0
     318:	80 81       	ld	r24, Z
     31a:	8f 7d       	andi	r24, 0xDF	; 223
     31c:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(0));
     31e:	90 ff       	sbrs	r25, 0
     320:	06 c0       	rjmp	.+12     	; 0x32e <_ZL9lcd_writehh+0xfa>
     322:	eb e2       	ldi	r30, 0x2B	; 43
     324:	f0 e0       	ldi	r31, 0x00	; 0
     326:	80 81       	ld	r24, Z
     328:	80 61       	ori	r24, 0x10	; 16
     32a:	80 83       	st	Z, r24
     32c:	05 c0       	rjmp	.+10     	; 0x338 <_ZL9lcd_writehh+0x104>
     32e:	eb e2       	ldi	r30, 0x2B	; 43
     330:	f0 e0       	ldi	r31, 0x00	; 0
     332:	80 81       	ld	r24, Z
     334:	8f 7e       	andi	r24, 0xEF	; 239
     336:	80 83       	st	Z, r24

      Delay_ns(100);
     338:	00 c0       	rjmp	.+0      	; 0x33a <_ZL9lcd_writehh+0x106>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     33a:	eb e2       	ldi	r30, 0x2B	; 43
     33c:	f0 e0       	ldi	r31, 0x00	; 0
     33e:	80 81       	ld	r24, Z
     340:	84 60       	ori	r24, 0x04	; 4
     342:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(0));

      Delay_ns(100);
      lcd_e_port_high();

      Delay_ns(500);
     344:	92 e0       	ldi	r25, 0x02	; 2
     346:	9a 95       	dec	r25
     348:	f1 f7       	brne	.-4      	; 0x346 <_ZL9lcd_writehh+0x112>
     34a:	00 c0       	rjmp	.+0      	; 0x34c <_ZL9lcd_writehh+0x118>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     34c:	80 81       	ld	r24, Z
     34e:	8b 7f       	andi	r24, 0xFB	; 251
     350:	80 83       	st	Z, r24
      lcd_e_port_high();

      Delay_ns(500);
      lcd_e_port_low();

      lcd_db7_port_high();                            // All Data Pins High (Inactive)
     352:	80 81       	ld	r24, Z
     354:	80 68       	ori	r24, 0x80	; 128
     356:	80 83       	st	Z, r24
      lcd_db6_port_high();
     358:	80 81       	ld	r24, Z
     35a:	80 64       	ori	r24, 0x40	; 64
     35c:	80 83       	st	Z, r24
      lcd_db5_port_high();
     35e:	80 81       	ld	r24, Z
     360:	80 62       	ori	r24, 0x20	; 32
     362:	80 83       	st	Z, r24
      lcd_db4_port_high();
     364:	80 81       	ld	r24, Z
     366:	80 61       	ori	r24, 0x10	; 16
     368:	80 83       	st	Z, r24
      lcd_db1_port_high();
      lcd_db0_port_high();
    #endif

    #if (WAIT_MODE==0 || RW_LINE_IMPLEMENTED==0)
      if (!rs && data<=((1<<LCD_CLR) | (1<<LCD_HOME))) // Is command clrscr or home?
     36a:	66 23       	and	r22, r22
     36c:	49 f4       	brne	.+18     	; 0x380 <_ZL9lcd_writehh+0x14c>
     36e:	24 30       	cpi	r18, 0x04	; 4
     370:	38 f4       	brcc	.+14     	; 0x380 <_ZL9lcd_writehh+0x14c>
        Delay_us(1640);
     372:	8f e9       	ldi	r24, 0x9F	; 159
     374:	99 e1       	ldi	r25, 0x19	; 25
     376:	01 97       	sbiw	r24, 0x01	; 1
     378:	f1 f7       	brne	.-4      	; 0x376 <_ZL9lcd_writehh+0x142>
     37a:	00 c0       	rjmp	.+0      	; 0x37c <_ZL9lcd_writehh+0x148>
     37c:	00 00       	nop
     37e:	08 95       	ret
      else Delay_us(40);
     380:	95 ed       	ldi	r25, 0xD5	; 213
     382:	9a 95       	dec	r25
     384:	f1 f7       	brne	.-4      	; 0x382 <_ZL9lcd_writehh+0x14e>
     386:	00 00       	nop
     388:	08 95       	ret

0000038a <_Z8lcd_putcc>:
Input:    character to be displayed
Returns:  none
*************************************************************************/
void lcd_putc(char c)
  {
    lcd_write(c,1);
     38a:	61 e0       	ldi	r22, 0x01	; 1
     38c:	0e 94 1a 01 	call	0x234	; 0x234 <_ZL9lcd_writehh>
  }
     390:	08 95       	ret

00000392 <_Z8lcd_putsPKc>:
/*************************************************************************
Display string
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
     392:	cf 93       	push	r28
     394:	df 93       	push	r29
     396:	fc 01       	movw	r30, r24
  {
    register char c;

    while ((c=*s++)) 
     398:	80 81       	ld	r24, Z
     39a:	88 23       	and	r24, r24
     39c:	39 f0       	breq	.+14     	; 0x3ac <_Z8lcd_putsPKc+0x1a>
     39e:	ef 01       	movw	r28, r30
      lcd_putc(c);
     3a0:	0e 94 c5 01 	call	0x38a	; 0x38a <_Z8lcd_putcc>
*************************************************************************/
void lcd_puts(const char *s)
  {
    register char c;

    while ((c=*s++)) 
     3a4:	89 81       	ldd	r24, Y+1	; 0x01
     3a6:	21 96       	adiw	r28, 0x01	; 1
     3a8:	88 23       	and	r24, r24
     3aa:	d1 f7       	brne	.-12     	; 0x3a0 <_Z8lcd_putsPKc+0xe>
      lcd_putc(c);
  }
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	08 95       	ret

000003b2 <_Z11lcd_commandh>:
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
  {
    lcd_write(cmd,0);
     3b2:	60 e0       	ldi	r22, 0x00	; 0
     3b4:	0e 94 1a 01 	call	0x234	; 0x234 <_ZL9lcd_writehh>
  }
     3b8:	08 95       	ret

000003ba <_Z10lcd_clrscrv>:
Input:    none
Returns:  none
*************************************************************************/
void lcd_clrscr()
  {
    lcd_command(1<<LCD_CLR);
     3ba:	81 e0       	ldi	r24, 0x01	; 1
     3bc:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <_Z11lcd_commandh>
  }
     3c0:	08 95       	ret

000003c2 <_Z8lcd_gotoh>:
Input:    pos position
Returns:  none
*************************************************************************/
void lcd_goto(uint8_t pos)
  {
    lcd_command((1<<LCD_DDRAM)+pos);
     3c2:	80 58       	subi	r24, 0x80	; 128
     3c4:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <_Z11lcd_commandh>
  }
     3c8:	08 95       	ret

000003ca <_Z7AfisareiPc>:
	
void Afisare(int Cursor, char* Date_Afisare)
     3ca:	0f 93       	push	r16
     3cc:	1f 93       	push	r17
     3ce:	8b 01       	movw	r16, r22
	{
		lcd_goto(Cursor);
     3d0:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <_Z8lcd_gotoh>
		lcd_puts(Date_Afisare);
     3d4:	c8 01       	movw	r24, r16
     3d6:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8lcd_putsPKc>
	}	
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	08 95       	ret

000003e0 <_Z8lcd_initv>:
      case 4 : DDR(LCD_E4_PORT)|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                DDR(LCD_E_PORT)|=_BV(LCD_E_PIN);
     3e0:	ea e2       	ldi	r30, 0x2A	; 42
     3e2:	f0 e0       	ldi	r31, 0x00	; 0
     3e4:	80 81       	ld	r24, Z
     3e6:	84 60       	ori	r24, 0x04	; 4
     3e8:	80 83       	st	Z, r24
*************************************************************************/
void lcd_init()
  {
    //Set All Pins as Output
    lcd_e_ddr_high();
    lcd_rs_ddr_high();
     3ea:	80 81       	ld	r24, Z
     3ec:	81 60       	ori	r24, 0x01	; 1
     3ee:	80 83       	st	Z, r24
    #if RW_LINE_IMPLEMENTED==1
      lcd_rw_ddr_high();
    #endif
    lcd_db7_ddr_high();
     3f0:	80 81       	ld	r24, Z
     3f2:	80 68       	ori	r24, 0x80	; 128
     3f4:	80 83       	st	Z, r24
    lcd_db6_ddr_high();
     3f6:	80 81       	ld	r24, Z
     3f8:	80 64       	ori	r24, 0x40	; 64
     3fa:	80 83       	st	Z, r24
    lcd_db5_ddr_high();
     3fc:	80 81       	ld	r24, Z
     3fe:	80 62       	ori	r24, 0x20	; 32
     400:	80 83       	st	Z, r24
    lcd_db4_ddr_high();
     402:	80 81       	ld	r24, Z
     404:	80 61       	ori	r24, 0x10	; 16
     406:	80 83       	st	Z, r24
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     408:	eb e2       	ldi	r30, 0x2B	; 43
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	80 81       	ld	r24, Z
     40e:	8b 7f       	andi	r24, 0xFB	; 251
     410:	80 83       	st	Z, r24
      lcd_db0_ddr_high();
    #endif

    //Set All Control Lines Low
    lcd_e_port_low();
    lcd_rs_port_low();
     412:	80 81       	ld	r24, Z
     414:	8e 7f       	andi	r24, 0xFE	; 254
     416:	80 83       	st	Z, r24
    #if RW_LINE_IMPLEMENTED==1
      lcd_rw_port_low();
    #endif

    //Set All Data Lines High
    lcd_db7_port_high();
     418:	80 81       	ld	r24, Z
     41a:	80 68       	ori	r24, 0x80	; 128
     41c:	80 83       	st	Z, r24
    lcd_db6_port_high();
     41e:	80 81       	ld	r24, Z
     420:	80 64       	ori	r24, 0x40	; 64
     422:	80 83       	st	Z, r24
    lcd_db5_port_high();
     424:	80 81       	ld	r24, Z
     426:	80 62       	ori	r24, 0x20	; 32
     428:	80 83       	st	Z, r24
    lcd_db4_port_high();
     42a:	80 81       	ld	r24, Z
     42c:	80 61       	ori	r24, 0x10	; 16
     42e:	80 83       	st	Z, r24
      lcd_db1_port_high();
      lcd_db0_port_high();
    #endif

    //Startup Delay
    Delay_ms(DELAY_RESET);
     430:	8f e5       	ldi	r24, 0x5F	; 95
     432:	9a ee       	ldi	r25, 0xEA	; 234
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	f1 f7       	brne	.-4      	; 0x434 <_Z8lcd_initv+0x54>
     438:	00 c0       	rjmp	.+0      	; 0x43a <_Z8lcd_initv+0x5a>
     43a:	00 00       	nop

    //Initialize Display
    lcd_db7_port_low();
     43c:	80 81       	ld	r24, Z
     43e:	8f 77       	andi	r24, 0x7F	; 127
     440:	80 83       	st	Z, r24
    lcd_db6_port_low();
     442:	80 81       	ld	r24, Z
     444:	8f 7b       	andi	r24, 0xBF	; 191
     446:	80 83       	st	Z, r24
    Delay_ns(100);
     448:	00 c0       	rjmp	.+0      	; 0x44a <_Z8lcd_initv+0x6a>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     44a:	80 81       	ld	r24, Z
     44c:	84 60       	ori	r24, 0x04	; 4
     44e:	80 83       	st	Z, r24
    //Initialize Display
    lcd_db7_port_low();
    lcd_db6_port_low();
    Delay_ns(100);
    lcd_e_port_high();
    Delay_ns(500);
     450:	92 e0       	ldi	r25, 0x02	; 2
     452:	9a 95       	dec	r25
     454:	f1 f7       	brne	.-4      	; 0x452 <_Z8lcd_initv+0x72>
     456:	00 c0       	rjmp	.+0      	; 0x458 <_Z8lcd_initv+0x78>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     458:	80 81       	ld	r24, Z
     45a:	8b 7f       	andi	r24, 0xFB	; 251
     45c:	80 83       	st	Z, r24
    Delay_ns(100);
    lcd_e_port_high();
    Delay_ns(500);
    lcd_e_port_low();

    Delay_us(4100);
     45e:	8f e0       	ldi	r24, 0x0F	; 15
     460:	90 e4       	ldi	r25, 0x40	; 64
     462:	01 97       	sbiw	r24, 0x01	; 1
     464:	f1 f7       	brne	.-4      	; 0x462 <_Z8lcd_initv+0x82>
     466:	00 c0       	rjmp	.+0      	; 0x468 <_Z8lcd_initv+0x88>
     468:	00 00       	nop
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     46a:	80 81       	ld	r24, Z
     46c:	84 60       	ori	r24, 0x04	; 4
     46e:	80 83       	st	Z, r24
    lcd_e_port_low();

    Delay_us(4100);

    lcd_e_port_high();
    Delay_ns(500);
     470:	92 e0       	ldi	r25, 0x02	; 2
     472:	9a 95       	dec	r25
     474:	f1 f7       	brne	.-4      	; 0x472 <_Z8lcd_initv+0x92>
     476:	00 c0       	rjmp	.+0      	; 0x478 <_Z8lcd_initv+0x98>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     478:	80 81       	ld	r24, Z
     47a:	8b 7f       	andi	r24, 0xFB	; 251
     47c:	80 83       	st	Z, r24

    lcd_e_port_high();
    Delay_ns(500);
    lcd_e_port_low();

    Delay_us(100);
     47e:	8f e8       	ldi	r24, 0x8F	; 143
     480:	91 e0       	ldi	r25, 0x01	; 1
     482:	01 97       	sbiw	r24, 0x01	; 1
     484:	f1 f7       	brne	.-4      	; 0x482 <_Z8lcd_initv+0xa2>
     486:	00 c0       	rjmp	.+0      	; 0x488 <_Z8lcd_initv+0xa8>
     488:	00 00       	nop
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     48a:	80 81       	ld	r24, Z
     48c:	84 60       	ori	r24, 0x04	; 4
     48e:	80 83       	st	Z, r24
    lcd_e_port_low();

    Delay_us(100);

    lcd_e_port_high();
    Delay_ns(500);
     490:	92 e0       	ldi	r25, 0x02	; 2
     492:	9a 95       	dec	r25
     494:	f1 f7       	brne	.-4      	; 0x492 <_Z8lcd_initv+0xb2>
     496:	00 c0       	rjmp	.+0      	; 0x498 <_Z8lcd_initv+0xb8>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     498:	80 81       	ld	r24, Z
     49a:	8b 7f       	andi	r24, 0xFB	; 251
     49c:	80 83       	st	Z, r24

    lcd_e_port_high();
    Delay_ns(500);
    lcd_e_port_low();

    Delay_us(40);
     49e:	85 ed       	ldi	r24, 0xD5	; 213
     4a0:	8a 95       	dec	r24
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <_Z8lcd_initv+0xc0>
     4a4:	00 00       	nop

    //Init differs between 4-bit and 8-bit from here
    #if (LCD_BITS==4)
      lcd_db4_port_low();
     4a6:	80 81       	ld	r24, Z
     4a8:	8f 7e       	andi	r24, 0xEF	; 239
     4aa:	80 83       	st	Z, r24
      Delay_ns(100);
     4ac:	00 c0       	rjmp	.+0      	; 0x4ae <_Z8lcd_initv+0xce>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     4ae:	80 81       	ld	r24, Z
     4b0:	84 60       	ori	r24, 0x04	; 4
     4b2:	80 83       	st	Z, r24
    //Init differs between 4-bit and 8-bit from here
    #if (LCD_BITS==4)
      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
     4b4:	92 e0       	ldi	r25, 0x02	; 2
     4b6:	9a 95       	dec	r25
     4b8:	f1 f7       	brne	.-4      	; 0x4b6 <_Z8lcd_initv+0xd6>
     4ba:	00 c0       	rjmp	.+0      	; 0x4bc <_Z8lcd_initv+0xdc>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     4bc:	80 81       	ld	r24, Z
     4be:	8b 7f       	andi	r24, 0xFB	; 251
     4c0:	80 83       	st	Z, r24
      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
      lcd_e_port_low();
      Delay_us(40);
     4c2:	85 ed       	ldi	r24, 0xD5	; 213
     4c4:	8a 95       	dec	r24
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <_Z8lcd_initv+0xe4>
     4c8:	00 00       	nop

      lcd_db4_port_low();
     4ca:	80 81       	ld	r24, Z
     4cc:	8f 7e       	andi	r24, 0xEF	; 239
     4ce:	80 83       	st	Z, r24
      Delay_ns(100);
     4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <_Z8lcd_initv+0xf2>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     4d2:	80 81       	ld	r24, Z
     4d4:	84 60       	ori	r24, 0x04	; 4
     4d6:	80 83       	st	Z, r24
      Delay_us(40);

      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
     4d8:	92 e0       	ldi	r25, 0x02	; 2
     4da:	9a 95       	dec	r25
     4dc:	f1 f7       	brne	.-4      	; 0x4da <_Z8lcd_initv+0xfa>
     4de:	00 c0       	rjmp	.+0      	; 0x4e0 <_Z8lcd_initv+0x100>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     4e0:	80 81       	ld	r24, Z
     4e2:	8b 7f       	andi	r24, 0xFB	; 251
     4e4:	80 83       	st	Z, r24
      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
      lcd_e_port_low();
      Delay_ns(500);
     4e6:	82 e0       	ldi	r24, 0x02	; 2
     4e8:	8a 95       	dec	r24
     4ea:	f1 f7       	brne	.-4      	; 0x4e8 <_Z8lcd_initv+0x108>
     4ec:	00 c0       	rjmp	.+0      	; 0x4ee <_Z8lcd_initv+0x10e>

      #if (LCD_DISPLAYS==1)
        if (LCD_DISPLAY_LINES>1)
          lcd_db7_port_high();
     4ee:	80 81       	ld	r24, Z
     4f0:	80 68       	ori	r24, 0x80	; 128
     4f2:	80 83       	st	Z, r24
          }
        if (c>1)
          lcd_db7_port_high();
      #endif

      Delay_ns(100);
     4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <_Z8lcd_initv+0x116>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     4f6:	80 81       	ld	r24, Z
     4f8:	84 60       	ori	r24, 0x04	; 4
     4fa:	80 83       	st	Z, r24
          lcd_db7_port_high();
      #endif

      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
     4fc:	92 e0       	ldi	r25, 0x02	; 2
     4fe:	9a 95       	dec	r25
     500:	f1 f7       	brne	.-4      	; 0x4fe <_Z8lcd_initv+0x11e>
     502:	00 c0       	rjmp	.+0      	; 0x504 <_Z8lcd_initv+0x124>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     504:	80 81       	ld	r24, Z
     506:	8b 7f       	andi	r24, 0xFB	; 251
     508:	80 83       	st	Z, r24

      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
      lcd_e_port_low();
      Delay_us(40);
     50a:	85 ed       	ldi	r24, 0xD5	; 213
     50c:	8a 95       	dec	r24
     50e:	f1 f7       	brne	.-4      	; 0x50c <_Z8lcd_initv+0x12c>
     510:	00 00       	nop
      lcd_e_port_low();
      Delay_us(40);
    #endif

    //Display Off
    lcd_command(_BV(LCD_DISPLAYMODE));
     512:	88 e0       	ldi	r24, 0x08	; 8
     514:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <_Z11lcd_commandh>

    //Display Clear
    lcd_clrscr();
     518:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_Z10lcd_clrscrv>

    //Entry Mode Set
    lcd_command(_BV(LCD_ENTRY_MODE) | _BV(LCD_ENTRY_INC));
     51c:	86 e0       	ldi	r24, 0x06	; 6
     51e:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <_Z11lcd_commandh>

    //Display On
    lcd_command(_BV(LCD_DISPLAYMODE) | _BV(LCD_DISPLAYMODE_ON));
     522:	8c e0       	ldi	r24, 0x0C	; 12
     524:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <_Z11lcd_commandh>
  }
     528:	08 95       	ret

0000052a <main>:
						}
					}
			}while(Button != btnSELECT);
}	

int main(void)
     52a:	2f 92       	push	r2
     52c:	3f 92       	push	r3
     52e:	4f 92       	push	r4
     530:	5f 92       	push	r5
     532:	6f 92       	push	r6
     534:	7f 92       	push	r7
     536:	8f 92       	push	r8
     538:	9f 92       	push	r9
     53a:	af 92       	push	r10
     53c:	bf 92       	push	r11
     53e:	cf 92       	push	r12
     540:	df 92       	push	r13
     542:	ef 92       	push	r14
     544:	ff 92       	push	r15
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	df 93       	push	r29
     54c:	cf 93       	push	r28
     54e:	0f 92       	push	r0
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
	{
		// Input/Output Ports initialization
		// Port B initialization
		// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
		DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
     554:	14 b8       	out	0x04, r1	; 4
		// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
		PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
     556:	15 b8       	out	0x05, r1	; 5

		// Port C initialization
		// Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
		DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
     558:	17 b8       	out	0x07, r1	; 7
		// State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
		PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
     55a:	18 b8       	out	0x08, r1	; 8

		// Port D initialization
		// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
		DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
     55c:	aa e2       	ldi	r26, 0x2A	; 42
     55e:	b0 e0       	ldi	r27, 0x00	; 0
     560:	1c 92       	st	X, r1
		// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
		PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
     562:	1b b8       	out	0x0b, r1	; 11
		// Clock source: System Clock
		// Clock value: Timer 0 Stopped
		// Mode: Normal top=0xFF
		// OC0A output: Disconnected
		// OC0B output: Disconnected
		TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
     564:	14 bc       	out	0x24, r1	; 36
		TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
     566:	15 bc       	out	0x25, r1	; 37
		TCNT0=0x00;
     568:	16 bc       	out	0x26, r1	; 38
		OCR0A=0x00;
     56a:	17 bc       	out	0x27, r1	; 39
		OCR0B=0x00;
     56c:	18 bc       	out	0x28, r1	; 40
		// Input Capture on Falling Edge
		// Timer1 Overflow Interrupt: Off
		// Input Capture Interrupt: Off
		// Compare A Match Interrupt: Off
		// Compare B Match Interrupt: Off
		TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
     56e:	10 92 80 00 	sts	0x0080, r1
		TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
     572:	10 92 81 00 	sts	0x0081, r1
		TCNT1H=0x00;
     576:	10 92 85 00 	sts	0x0085, r1
		TCNT1L=0x00;
     57a:	10 92 84 00 	sts	0x0084, r1
		ICR1H=0x00;
     57e:	10 92 87 00 	sts	0x0087, r1
		ICR1L=0x00;
     582:	10 92 86 00 	sts	0x0086, r1
		OCR1AH=0x00;
     586:	10 92 89 00 	sts	0x0089, r1
		OCR1AL=0x00;
     58a:	10 92 88 00 	sts	0x0088, r1
		OCR1BH=0x00;
     58e:	10 92 8b 00 	sts	0x008B, r1
		OCR1BL=0x00;
     592:	10 92 8a 00 	sts	0x008A, r1
		// Clock source: System Clock
		// Clock value: Timer2 Stopped
		// Mode: Normal top=0xFF
		// OC2A output: Disconnected
		// OC2B output: Disconnected
		ASSR=(0<<EXCLK) | (0<<AS2);
     596:	10 92 b6 00 	sts	0x00B6, r1
		TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
     59a:	10 92 b0 00 	sts	0x00B0, r1
		TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
     59e:	10 92 b1 00 	sts	0x00B1, r1
		TCNT2=0x00;
     5a2:	10 92 b2 00 	sts	0x00B2, r1
		OCR2A=0x00;
     5a6:	10 92 b3 00 	sts	0x00B3, r1
		OCR2B=0x00;
     5aa:	10 92 b4 00 	sts	0x00B4, r1

		// Timer/Counter 0 Interrupt(s) initialization
		TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
     5ae:	10 92 6e 00 	sts	0x006E, r1

		// Timer/Counter 1 Interrupt(s) initialization
		TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
     5b2:	10 92 6f 00 	sts	0x006F, r1

		// Timer/Counter 2 Interrupt(s) initialization
		TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
     5b6:	10 92 70 00 	sts	0x0070, r1
		// INT0: Off
		// INT1: Off
		// Interrupt on any change on pins PCINT0-7: Off
		// Interrupt on any change on pins PCINT8-14: Off
		// Interrupt on any change on pins PCINT16-23: Off
		EICRA=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
     5ba:	10 92 69 00 	sts	0x0069, r1
		EIMSK=(0<<INT1) | (0<<INT0);
     5be:	1d ba       	out	0x1d, r1	; 29
		PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
     5c0:	10 92 68 00 	sts	0x0068, r1

		// USART initialization
		// USART disabled
		UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
     5c4:	10 92 c1 00 	sts	0x00C1, r1
		// Analog Comparator: Off
		// The Analog Comparator's positive input is
		// connected to the AIN0 pin
		// The Analog Comparator's negative input is
		// connected to the AIN1 pin
		ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
     5c8:	80 e8       	ldi	r24, 0x80	; 128
     5ca:	80 bf       	out	0x30, r24	; 48
		ADCSRB=(0<<ACME);
     5cc:	eb e7       	ldi	r30, 0x7B	; 123
     5ce:	f0 e0       	ldi	r31, 0x00	; 0
     5d0:	10 82       	st	Z, r1
		// Digital input buffer on AIN0: On
		// Digital input buffer on AIN1: On
		DIDR1=(0<<AIN0D) | (0<<AIN1D);
     5d2:	10 92 7f 00 	sts	0x007F, r1
		// ADC Clock frequency: 1000.000 kHz
		// ADC Voltage Reference: AVCC pin
		// ADC Auto Trigger Source: ADC Stopped
		// Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
		// ADC4: On, ADC5: On
		DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
     5d6:	10 92 7e 00 	sts	0x007E, r1
		ADMUX=ADC_VREF_TYPE;
     5da:	80 e4       	ldi	r24, 0x40	; 64
     5dc:	80 93 7c 00 	sts	0x007C, r24
		ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
     5e0:	84 e8       	ldi	r24, 0x84	; 132
     5e2:	80 93 7a 00 	sts	0x007A, r24
		ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
     5e6:	10 82       	st	Z, r1

		// SPI initialization
		// SPI disabled
		SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
     5e8:	1c bc       	out	0x2c, r1	; 44

		// TWI initialization
		// TWI disabled
		TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
     5ea:	10 92 bc 00 	sts	0x00BC, r1
    
		//===================================== LCD =====================================================//
		//************ SETARILE DE CONECTARE A LCD SUNT IN FISIERUL hd44780_setings.h *******************//
		DDRD=0xFF;	// LCD este conectat la Portul D
     5ee:	8f ef       	ldi	r24, 0xFF	; 255
     5f0:	8c 93       	st	X, r24
		//***********************************************************************************************//
		lcd_init();
     5f2:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <_Z8lcd_initv>
		lcd_puts(Date_Afisare);
	}	

inline void MeniulInitializare()
	{
		lcd_clrscr();
     5f6:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_Z10lcd_clrscrv>
		lcd_puts("WinderMachineV.2");
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	91 e0       	ldi	r25, 0x01	; 1
     5fe:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8lcd_putsPKc>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     602:	80 e4       	ldi	r24, 0x40	; 64
     604:	9c e9       	ldi	r25, 0x9C	; 156
     606:	01 97       	sbiw	r24, 0x01	; 1
     608:	f1 f7       	brne	.-4      	; 0x606 <main+0xdc>
	}
inline void MeniulPrincipal()
	{
		bool Eliberare_Buton=false;
		lcd_clrscr();
     60a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_Z10lcd_clrscrv>
		Afisare(Inceputul_liniei_1, ">");
     60e:	0f 2e       	mov	r0, r31
     610:	f1 e1       	ldi	r31, 0x11	; 17
     612:	ef 2e       	mov	r14, r31
     614:	f1 e0       	ldi	r31, 0x01	; 1
     616:	ff 2e       	mov	r15, r31
     618:	f0 2d       	mov	r31, r0
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	b7 01       	movw	r22, r14
     620:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
		Afisare(Inceputul_liniei_1+2, "Start");
     624:	82 e0       	ldi	r24, 0x02	; 2
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	63 e1       	ldi	r22, 0x13	; 19
     62a:	71 e0       	ldi	r23, 0x01	; 1
     62c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
		Afisare(Inceputul_liniei_2+2, "Settings");
     630:	82 e4       	ldi	r24, 0x42	; 66
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	69 e1       	ldi	r22, 0x19	; 25
     636:	71 e0       	ldi	r23, 0x01	; 1
     638:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
     63c:	10 e0       	ldi	r17, 0x00	; 0
				do
					{
						do
							{
								Button = read_LCD_buttons();
								if(Button==btnNONE)
     63e:	00 e0       	ldi	r16, 0x00	; 0
     640:	0f 2e       	mov	r0, r31
     642:	f0 e4       	ldi	r31, 0x40	; 64
     644:	8f 2e       	mov	r8, r31
     646:	fc e9       	ldi	r31, 0x9C	; 156
     648:	9f 2e       	mov	r9, r31
     64a:	f0 2d       	mov	r31, r0
	{
		bool Eliberare_Buton=false;
		lcd_clrscr();
		Afisare(Inceputul_liniei_1, ">");
		Afisare(Inceputul_liniei_1+2, "Start");
		Afisare(Inceputul_liniei_2+2, "Settings");
     64c:	dd 24       	eor	r13, r13
     64e:	d3 94       	inc	r13
					{
						if(pozitia_cursor != 0)
							{
								pozitia_cursor=0;
								Afisare(Inceputul_liniei_1, ">");
								Afisare(Inceputul_liniei_2, " ");
     650:	0f 2e       	mov	r0, r31
     652:	f2 e2       	ldi	r31, 0x22	; 34
     654:	af 2e       	mov	r10, r31
     656:	f1 e0       	ldi	r31, 0x01	; 1
     658:	bf 2e       	mov	r11, r31
     65a:	f0 2d       	mov	r31, r0
     65c:	01 c0       	rjmp	.+2      	; 0x660 <main+0x136>
	{
		bool Eliberare_Buton=false;
		lcd_clrscr();
		Afisare(Inceputul_liniei_1, ">");
		Afisare(Inceputul_liniei_1+2, "Start");
		Afisare(Inceputul_liniei_2+2, "Settings");
     65e:	1d 2d       	mov	r17, r13
			{
				do
					{
						do
							{
								Button = read_LCD_buttons();
     660:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_Z16read_LCD_buttonsv>
     664:	80 93 7b 01 	sts	0x017B, r24
								if(Button==btnNONE)
     668:	85 30       	cpi	r24, 0x05	; 5
     66a:	09 f4       	brne	.+2      	; 0x66e <main+0x144>
     66c:	10 2f       	mov	r17, r16
     66e:	f4 01       	movw	r30, r8
     670:	31 97       	sbiw	r30, 0x01	; 1
     672:	f1 f7       	brne	.-4      	; 0x670 <main+0x146>
		Afisare(Inceputul_liniei_2+2, "Settings");
		do
			{
				do
					{
						do
     674:	85 30       	cpi	r24, 0x05	; 5
     676:	a1 f3       	breq	.-24     	; 0x660 <main+0x136>
     678:	11 23       	and	r17, r17
     67a:	91 f7       	brne	.-28     	; 0x660 <main+0x136>
								_delay_ms(10);
							}while(Button != btnNONE && Eliberare_Buton == true);
					}while(Button == btnNONE);
				
				Eliberare_Buton=true;
				if(Button == btnDOWN)
     67c:	82 30       	cpi	r24, 0x02	; 2
     67e:	81 f4       	brne	.+32     	; 0x6a0 <main+0x176>
					{
						if(pozitia_cursor != 1)
     680:	80 91 c2 01 	lds	r24, 0x01C2
     684:	81 30       	cpi	r24, 0x01	; 1
     686:	61 f0       	breq	.+24     	; 0x6a0 <main+0x176>
							{
								pozitia_cursor=1;
     688:	d0 92 c2 01 	sts	0x01C2, r13
								Afisare(Inceputul_liniei_1, " ");
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	b5 01       	movw	r22, r10
     692:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, ">");
     696:	80 e4       	ldi	r24, 0x40	; 64
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	b7 01       	movw	r22, r14
     69c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
							}
					}
				if(Button == btnUP)
     6a0:	80 91 7b 01 	lds	r24, 0x017B
     6a4:	81 30       	cpi	r24, 0x01	; 1
     6a6:	81 f4       	brne	.+32     	; 0x6c8 <main+0x19e>
					{
						if(pozitia_cursor != 0)
     6a8:	80 91 c2 01 	lds	r24, 0x01C2
     6ac:	88 23       	and	r24, r24
     6ae:	61 f0       	breq	.+24     	; 0x6c8 <main+0x19e>
							{
								pozitia_cursor=0;
     6b0:	00 93 c2 01 	sts	0x01C2, r16
								Afisare(Inceputul_liniei_1, ">");
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	b7 01       	movw	r22, r14
     6ba:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, " ");
     6be:	80 e4       	ldi	r24, 0x40	; 64
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	b5 01       	movw	r22, r10
     6c4:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
		bool Eliberare_Buton=false;
		lcd_clrscr();
		Afisare(Inceputul_liniei_1, ">");
		Afisare(Inceputul_liniei_1+2, "Start");
		Afisare(Inceputul_liniei_2+2, "Settings");
		do
     6c8:	80 91 7b 01 	lds	r24, 0x017B
     6cc:	88 23       	and	r24, r24
     6ce:	11 f0       	breq	.+4      	; 0x6d4 <main+0x1aa>
     6d0:	84 30       	cpi	r24, 0x04	; 4
     6d2:	29 f6       	brne	.-118    	; 0x65e <main+0x134>
		lcd_init();

		MeniulInitializare();
		_delay_ms(10);
		MeniulPrincipal();
		if(pozitia_cursor == 0)
     6d4:	80 91 c2 01 	lds	r24, 0x01C2
     6d8:	88 23       	and	r24, r24
     6da:	99 f4       	brne	.+38     	; 0x702 <main+0x1d8>
			}while(Button != btnRIGHT && Button != btnSELECT);
	}
	
inline void MeniulSecundarStart()
	{
		lcd_clrscr();
     6dc:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_Z10lcd_clrscrv>
		Afisare(Inceputul_liniei_1, "start");
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	64 e2       	ldi	r22, 0x24	; 36
     6e6:	71 e0       	ldi	r23, 0x01	; 1
     6e8:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
     6ec:	20 ea       	ldi	r18, 0xA0	; 160
     6ee:	3f e0       	ldi	r19, 0x0F	; 15
     6f0:	40 e9       	ldi	r20, 0x90	; 144
     6f2:	51 e0       	ldi	r21, 0x01	; 1
     6f4:	ca 01       	movw	r24, r20
     6f6:	01 97       	sbiw	r24, 0x01	; 1
     6f8:	f1 f7       	brne	.-4      	; 0x6f6 <main+0x1cc>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6fa:	21 50       	subi	r18, 0x01	; 1
     6fc:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6fe:	d1 f7       	brne	.-12     	; 0x6f4 <main+0x1ca>
     700:	5c c3       	rjmp	.+1720   	; 0xdba <__stack+0x4bb>

inline void MeniulSecundarSetting()
	{
		bool Eliberare_Buton=true;
		bool Afisare_LCD=true;
		pozitia_cursor=0;
     702:	10 92 c2 01 	sts	0x01C2, r1
     706:	11 e0       	ldi	r17, 0x01	; 1
										Afisare(Inceputul_liniei_2+2, buffer);
										break;
									}
								case 1:
									{
										sprintf(buffer, "Lung.bob=%lumm", Lungimea_bobinei);
     708:	0f 2e       	mov	r0, r31
     70a:	f7 e3       	ldi	r31, 0x37	; 55
     70c:	cf 2e       	mov	r12, r31
     70e:	f1 e0       	ldi	r31, 0x01	; 1
     710:	df 2e       	mov	r13, r31
     712:	f0 2d       	mov	r31, r0
										Afisare(Inceputul_liniei_1+2, buffer);
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
     714:	0f 2e       	mov	r0, r31
     716:	f6 e4       	ldi	r31, 0x46	; 70
     718:	af 2e       	mov	r10, r31
     71a:	f1 e0       	ldi	r31, 0x01	; 1
     71c:	bf 2e       	mov	r11, r31
     71e:	f0 2d       	mov	r31, r0
				
						switch(imaginea)
							{
								case 0:
									{
										sprintf(buffer, "D.fir=%.4fmm", Diametrul_sarmei);
     720:	0f 2e       	mov	r0, r31
     722:	fa e2       	ldi	r31, 0x2A	; 42
     724:	8f 2e       	mov	r8, r31
     726:	f1 e0       	ldi	r31, 0x01	; 1
     728:	9f 2e       	mov	r9, r31
     72a:	f0 2d       	mov	r31, r0
									}
								case 2:
									{
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
										Afisare(Inceputul_liniei_1+2, buffer);
										sprintf(buffer, "Coef.dp=%.2fmm", Coef_deplasare);
     72c:	0f 2e       	mov	r0, r31
     72e:	f0 e5       	ldi	r31, 0x50	; 80
     730:	6f 2e       	mov	r6, r31
     732:	f1 e0       	ldi	r31, 0x01	; 1
     734:	7f 2e       	mov	r7, r31
     736:	f0 2d       	mov	r31, r0
									}
								case 3:
									{
										sprintf(buffer, "Coef.dp=%.2fmm", Coef_deplasare);
										Afisare(Inceputul_liniei_1+2, buffer);
										sprintf(buffer, "NrBobin/s=%.2f", Nr_bobinarisecunda);
     738:	0f 2e       	mov	r0, r31
     73a:	ff e5       	ldi	r31, 0x5F	; 95
     73c:	4f 2e       	mov	r4, r31
     73e:	f1 e0       	ldi	r31, 0x01	; 1
     740:	5f 2e       	mov	r5, r31
     742:	f0 2d       	mov	r31, r0
								Afisare(Inceputul_liniei_1, ">");
								Afisare(Inceputul_liniei_2, " ");
							}
						else
							{
								Afisare(Inceputul_liniei_1, " ");
     744:	0f 2e       	mov	r0, r31
     746:	f2 e2       	ldi	r31, 0x22	; 34
     748:	2f 2e       	mov	r2, r31
     74a:	f1 e0       	ldi	r31, 0x01	; 1
     74c:	3f 2e       	mov	r3, r31
     74e:	f0 2d       	mov	r31, r0
								case 1:
									{
										sprintf(buffer, "Lung.bob=%lumm", Lungimea_bobinei);
										Afisare(Inceputul_liniei_1+2, buffer);
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
										Afisare(Inceputul_liniei_2+2, buffer);
     750:	01 e0       	ldi	r16, 0x01	; 1
				do
					{
						do
							{
								Button = read_LCD_buttons();
								if(Button==btnNONE)
     752:	19 82       	std	Y+1, r1	; 0x01
		bool Eliberare_Buton=true;
		bool Afisare_LCD=true;
		pozitia_cursor=0;
		do
			{
				if(Afisare_LCD == true)
     754:	11 23       	and	r17, r17
     756:	09 f4       	brne	.+2      	; 0x75a <main+0x230>
     758:	de c0       	rjmp	.+444    	; 0x916 <__stack+0x17>
					{
						lcd_clrscr();
     75a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_Z10lcd_clrscrv>
						if(pozitia_cursor==0)
     75e:	80 91 c2 01 	lds	r24, 0x01C2
     762:	88 23       	and	r24, r24
     764:	59 f4       	brne	.+22     	; 0x77c <main+0x252>
							{
								Afisare(Inceputul_liniei_1, ">");
     766:	80 e0       	ldi	r24, 0x00	; 0
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	b7 01       	movw	r22, r14
     76c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, " ");
     770:	80 e4       	ldi	r24, 0x40	; 64
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	b1 01       	movw	r22, r2
     776:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
     77a:	0a c0       	rjmp	.+20     	; 0x790 <main+0x266>
							}
						else
							{
								Afisare(Inceputul_liniei_1, " ");
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	b1 01       	movw	r22, r2
     782:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, ">");
     786:	80 e4       	ldi	r24, 0x40	; 64
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	b7 01       	movw	r22, r14
     78c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
							}
				
						switch(imaginea)
     790:	80 91 c3 01 	lds	r24, 0x01C3
     794:	81 30       	cpi	r24, 0x01	; 1
     796:	09 f4       	brne	.+2      	; 0x79a <main+0x270>
     798:	64 c0       	rjmp	.+200    	; 0x862 <main+0x338>
     79a:	81 30       	cpi	r24, 0x01	; 1
     79c:	38 f0       	brcs	.+14     	; 0x7ac <main+0x282>
     79e:	82 30       	cpi	r24, 0x02	; 2
     7a0:	09 f4       	brne	.+2      	; 0x7a4 <main+0x27a>
     7a2:	bb c0       	rjmp	.+374    	; 0x91a <__stack+0x1b>
     7a4:	83 30       	cpi	r24, 0x03	; 3
     7a6:	09 f0       	breq	.+2      	; 0x7aa <main+0x280>
     7a8:	b6 c0       	rjmp	.+364    	; 0x916 <__stack+0x17>
     7aa:	12 c1       	rjmp	.+548    	; 0x9d0 <__stack+0xd1>
							{
								case 0:
									{
										sprintf(buffer, "D.fir=%.4fmm", Diametrul_sarmei);
     7ac:	8d b7       	in	r24, 0x3d	; 61
     7ae:	9e b7       	in	r25, 0x3e	; 62
     7b0:	08 97       	sbiw	r24, 0x08	; 8
     7b2:	0f b6       	in	r0, 0x3f	; 63
     7b4:	f8 94       	cli
     7b6:	9e bf       	out	0x3e, r25	; 62
     7b8:	0f be       	out	0x3f, r0	; 63
     7ba:	8d bf       	out	0x3d, r24	; 61
     7bc:	ed b7       	in	r30, 0x3d	; 61
     7be:	fe b7       	in	r31, 0x3e	; 62
     7c0:	31 96       	adiw	r30, 0x01	; 1
     7c2:	80 e9       	ldi	r24, 0x90	; 144
     7c4:	91 e0       	ldi	r25, 0x01	; 1
     7c6:	91 83       	std	Z+1, r25	; 0x01
     7c8:	80 83       	st	Z, r24
     7ca:	93 82       	std	Z+3, r9	; 0x03
     7cc:	82 82       	std	Z+2, r8	; 0x02
     7ce:	80 91 84 01 	lds	r24, 0x0184
     7d2:	90 91 85 01 	lds	r25, 0x0185
     7d6:	a0 91 86 01 	lds	r26, 0x0186
     7da:	b0 91 87 01 	lds	r27, 0x0187
     7de:	84 83       	std	Z+4, r24	; 0x04
     7e0:	95 83       	std	Z+5, r25	; 0x05
     7e2:	a6 83       	std	Z+6, r26	; 0x06
     7e4:	b7 83       	std	Z+7, r27	; 0x07
     7e6:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_1+2, buffer);
     7ea:	ed b7       	in	r30, 0x3d	; 61
     7ec:	fe b7       	in	r31, 0x3e	; 62
     7ee:	38 96       	adiw	r30, 0x08	; 8
     7f0:	0f b6       	in	r0, 0x3f	; 63
     7f2:	f8 94       	cli
     7f4:	fe bf       	out	0x3e, r31	; 62
     7f6:	0f be       	out	0x3f, r0	; 63
     7f8:	ed bf       	out	0x3d, r30	; 61
     7fa:	82 e0       	ldi	r24, 0x02	; 2
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	60 e9       	ldi	r22, 0x90	; 144
     800:	71 e0       	ldi	r23, 0x01	; 1
     802:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
										sprintf(buffer, "Lung.bob=%lumm", Lungimea_bobinei);
     806:	8d b7       	in	r24, 0x3d	; 61
     808:	9e b7       	in	r25, 0x3e	; 62
     80a:	08 97       	sbiw	r24, 0x08	; 8
     80c:	0f b6       	in	r0, 0x3f	; 63
     80e:	f8 94       	cli
     810:	9e bf       	out	0x3e, r25	; 62
     812:	0f be       	out	0x3f, r0	; 63
     814:	8d bf       	out	0x3d, r24	; 61
     816:	ed b7       	in	r30, 0x3d	; 61
     818:	fe b7       	in	r31, 0x3e	; 62
     81a:	31 96       	adiw	r30, 0x01	; 1
     81c:	80 e9       	ldi	r24, 0x90	; 144
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	91 83       	std	Z+1, r25	; 0x01
     822:	80 83       	st	Z, r24
     824:	d3 82       	std	Z+3, r13	; 0x03
     826:	c2 82       	std	Z+2, r12	; 0x02
     828:	80 91 7c 01 	lds	r24, 0x017C
     82c:	90 91 7d 01 	lds	r25, 0x017D
     830:	a0 91 7e 01 	lds	r26, 0x017E
     834:	b0 91 7f 01 	lds	r27, 0x017F
     838:	84 83       	std	Z+4, r24	; 0x04
     83a:	95 83       	std	Z+5, r25	; 0x05
     83c:	a6 83       	std	Z+6, r26	; 0x06
     83e:	b7 83       	std	Z+7, r27	; 0x07
     840:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_2+2, buffer);
     844:	ed b7       	in	r30, 0x3d	; 61
     846:	fe b7       	in	r31, 0x3e	; 62
     848:	38 96       	adiw	r30, 0x08	; 8
     84a:	0f b6       	in	r0, 0x3f	; 63
     84c:	f8 94       	cli
     84e:	fe bf       	out	0x3e, r31	; 62
     850:	0f be       	out	0x3f, r0	; 63
     852:	ed bf       	out	0x3d, r30	; 61
     854:	82 e4       	ldi	r24, 0x42	; 66
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	60 e9       	ldi	r22, 0x90	; 144
     85a:	71 e0       	ldi	r23, 0x01	; 1
     85c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
     860:	5a c0       	rjmp	.+180    	; 0x916 <__stack+0x17>
										break;
									}
								case 1:
									{
										sprintf(buffer, "Lung.bob=%lumm", Lungimea_bobinei);
     862:	8d b7       	in	r24, 0x3d	; 61
     864:	9e b7       	in	r25, 0x3e	; 62
     866:	08 97       	sbiw	r24, 0x08	; 8
     868:	0f b6       	in	r0, 0x3f	; 63
     86a:	f8 94       	cli
     86c:	9e bf       	out	0x3e, r25	; 62
     86e:	0f be       	out	0x3f, r0	; 63
     870:	8d bf       	out	0x3d, r24	; 61
     872:	ed b7       	in	r30, 0x3d	; 61
     874:	fe b7       	in	r31, 0x3e	; 62
     876:	31 96       	adiw	r30, 0x01	; 1
     878:	80 e9       	ldi	r24, 0x90	; 144
     87a:	91 e0       	ldi	r25, 0x01	; 1
     87c:	91 83       	std	Z+1, r25	; 0x01
     87e:	80 83       	st	Z, r24
     880:	d3 82       	std	Z+3, r13	; 0x03
     882:	c2 82       	std	Z+2, r12	; 0x02
     884:	80 91 7c 01 	lds	r24, 0x017C
     888:	90 91 7d 01 	lds	r25, 0x017D
     88c:	a0 91 7e 01 	lds	r26, 0x017E
     890:	b0 91 7f 01 	lds	r27, 0x017F
     894:	84 83       	std	Z+4, r24	; 0x04
     896:	95 83       	std	Z+5, r25	; 0x05
     898:	a6 83       	std	Z+6, r26	; 0x06
     89a:	b7 83       	std	Z+7, r27	; 0x07
     89c:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_1+2, buffer);
     8a0:	ed b7       	in	r30, 0x3d	; 61
     8a2:	fe b7       	in	r31, 0x3e	; 62
     8a4:	38 96       	adiw	r30, 0x08	; 8
     8a6:	0f b6       	in	r0, 0x3f	; 63
     8a8:	f8 94       	cli
     8aa:	fe bf       	out	0x3e, r31	; 62
     8ac:	0f be       	out	0x3f, r0	; 63
     8ae:	ed bf       	out	0x3d, r30	; 61
     8b0:	82 e0       	ldi	r24, 0x02	; 2
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	60 e9       	ldi	r22, 0x90	; 144
     8b6:	71 e0       	ldi	r23, 0x01	; 1
     8b8:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
     8bc:	8d b7       	in	r24, 0x3d	; 61
     8be:	9e b7       	in	r25, 0x3e	; 62
     8c0:	08 97       	sbiw	r24, 0x08	; 8
     8c2:	0f b6       	in	r0, 0x3f	; 63
     8c4:	f8 94       	cli
     8c6:	9e bf       	out	0x3e, r25	; 62
     8c8:	0f be       	out	0x3f, r0	; 63
     8ca:	8d bf       	out	0x3d, r24	; 61
     8cc:	ed b7       	in	r30, 0x3d	; 61
     8ce:	fe b7       	in	r31, 0x3e	; 62
     8d0:	31 96       	adiw	r30, 0x01	; 1
     8d2:	80 e9       	ldi	r24, 0x90	; 144
     8d4:	91 e0       	ldi	r25, 0x01	; 1
     8d6:	91 83       	std	Z+1, r25	; 0x01
     8d8:	80 83       	st	Z, r24
     8da:	b3 82       	std	Z+3, r11	; 0x03
     8dc:	a2 82       	std	Z+2, r10	; 0x02
     8de:	80 91 80 01 	lds	r24, 0x0180
     8e2:	90 91 81 01 	lds	r25, 0x0181
     8e6:	a0 91 82 01 	lds	r26, 0x0182
     8ea:	b0 91 83 01 	lds	r27, 0x0183
     8ee:	84 83       	std	Z+4, r24	; 0x04
     8f0:	95 83       	std	Z+5, r25	; 0x05
     8f2:	a6 83       	std	Z+6, r26	; 0x06
     8f4:	b7 83       	std	Z+7, r27	; 0x07
     8f6:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_2+2, buffer);
     8fa:	ed b7       	in	r30, 0x3d	; 61
     8fc:	fe b7       	in	r31, 0x3e	; 62
     8fe:	38 96       	adiw	r30, 0x08	; 8
     900:	0f b6       	in	r0, 0x3f	; 63
     902:	f8 94       	cli
     904:	fe bf       	out	0x3e, r31	; 62
     906:	0f be       	out	0x3f, r0	; 63
     908:	ed bf       	out	0x3d, r30	; 61
     90a:	82 e4       	ldi	r24, 0x42	; 66
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	60 e9       	ldi	r22, 0x90	; 144
     910:	71 e0       	ldi	r23, 0x01	; 1
     912:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
     916:	10 2f       	mov	r17, r16
     918:	b6 c0       	rjmp	.+364    	; 0xa86 <__stack+0x187>
										break;
									}
								case 2:
									{
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
     91a:	8d b7       	in	r24, 0x3d	; 61
     91c:	9e b7       	in	r25, 0x3e	; 62
     91e:	08 97       	sbiw	r24, 0x08	; 8
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	f8 94       	cli
     924:	9e bf       	out	0x3e, r25	; 62
     926:	0f be       	out	0x3f, r0	; 63
     928:	8d bf       	out	0x3d, r24	; 61
     92a:	ed b7       	in	r30, 0x3d	; 61
     92c:	fe b7       	in	r31, 0x3e	; 62
     92e:	31 96       	adiw	r30, 0x01	; 1
     930:	80 e9       	ldi	r24, 0x90	; 144
     932:	91 e0       	ldi	r25, 0x01	; 1
     934:	91 83       	std	Z+1, r25	; 0x01
     936:	80 83       	st	Z, r24
     938:	b3 82       	std	Z+3, r11	; 0x03
     93a:	a2 82       	std	Z+2, r10	; 0x02
     93c:	80 91 80 01 	lds	r24, 0x0180
     940:	90 91 81 01 	lds	r25, 0x0181
     944:	a0 91 82 01 	lds	r26, 0x0182
     948:	b0 91 83 01 	lds	r27, 0x0183
     94c:	84 83       	std	Z+4, r24	; 0x04
     94e:	95 83       	std	Z+5, r25	; 0x05
     950:	a6 83       	std	Z+6, r26	; 0x06
     952:	b7 83       	std	Z+7, r27	; 0x07
     954:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_1+2, buffer);
     958:	ed b7       	in	r30, 0x3d	; 61
     95a:	fe b7       	in	r31, 0x3e	; 62
     95c:	38 96       	adiw	r30, 0x08	; 8
     95e:	0f b6       	in	r0, 0x3f	; 63
     960:	f8 94       	cli
     962:	fe bf       	out	0x3e, r31	; 62
     964:	0f be       	out	0x3f, r0	; 63
     966:	ed bf       	out	0x3d, r30	; 61
     968:	82 e0       	ldi	r24, 0x02	; 2
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	60 e9       	ldi	r22, 0x90	; 144
     96e:	71 e0       	ldi	r23, 0x01	; 1
     970:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
										sprintf(buffer, "Coef.dp=%.2fmm", Coef_deplasare);
     974:	8d b7       	in	r24, 0x3d	; 61
     976:	9e b7       	in	r25, 0x3e	; 62
     978:	08 97       	sbiw	r24, 0x08	; 8
     97a:	0f b6       	in	r0, 0x3f	; 63
     97c:	f8 94       	cli
     97e:	9e bf       	out	0x3e, r25	; 62
     980:	0f be       	out	0x3f, r0	; 63
     982:	8d bf       	out	0x3d, r24	; 61
     984:	ed b7       	in	r30, 0x3d	; 61
     986:	fe b7       	in	r31, 0x3e	; 62
     988:	31 96       	adiw	r30, 0x01	; 1
     98a:	80 e9       	ldi	r24, 0x90	; 144
     98c:	91 e0       	ldi	r25, 0x01	; 1
     98e:	91 83       	std	Z+1, r25	; 0x01
     990:	80 83       	st	Z, r24
     992:	73 82       	std	Z+3, r7	; 0x03
     994:	62 82       	std	Z+2, r6	; 0x02
     996:	80 91 88 01 	lds	r24, 0x0188
     99a:	90 91 89 01 	lds	r25, 0x0189
     99e:	a0 91 8a 01 	lds	r26, 0x018A
     9a2:	b0 91 8b 01 	lds	r27, 0x018B
     9a6:	84 83       	std	Z+4, r24	; 0x04
     9a8:	95 83       	std	Z+5, r25	; 0x05
     9aa:	a6 83       	std	Z+6, r26	; 0x06
     9ac:	b7 83       	std	Z+7, r27	; 0x07
     9ae:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_2+2, buffer);
     9b2:	ed b7       	in	r30, 0x3d	; 61
     9b4:	fe b7       	in	r31, 0x3e	; 62
     9b6:	38 96       	adiw	r30, 0x08	; 8
     9b8:	0f b6       	in	r0, 0x3f	; 63
     9ba:	f8 94       	cli
     9bc:	fe bf       	out	0x3e, r31	; 62
     9be:	0f be       	out	0x3f, r0	; 63
     9c0:	ed bf       	out	0x3d, r30	; 61
     9c2:	82 e4       	ldi	r24, 0x42	; 66
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	60 e9       	ldi	r22, 0x90	; 144
     9c8:	71 e0       	ldi	r23, 0x01	; 1
     9ca:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
     9ce:	a3 cf       	rjmp	.-186    	; 0x916 <__stack+0x17>
										break;
									}
								case 3:
									{
										sprintf(buffer, "Coef.dp=%.2fmm", Coef_deplasare);
     9d0:	8d b7       	in	r24, 0x3d	; 61
     9d2:	9e b7       	in	r25, 0x3e	; 62
     9d4:	08 97       	sbiw	r24, 0x08	; 8
     9d6:	0f b6       	in	r0, 0x3f	; 63
     9d8:	f8 94       	cli
     9da:	9e bf       	out	0x3e, r25	; 62
     9dc:	0f be       	out	0x3f, r0	; 63
     9de:	8d bf       	out	0x3d, r24	; 61
     9e0:	ed b7       	in	r30, 0x3d	; 61
     9e2:	fe b7       	in	r31, 0x3e	; 62
     9e4:	31 96       	adiw	r30, 0x01	; 1
     9e6:	80 e9       	ldi	r24, 0x90	; 144
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	91 83       	std	Z+1, r25	; 0x01
     9ec:	80 83       	st	Z, r24
     9ee:	73 82       	std	Z+3, r7	; 0x03
     9f0:	62 82       	std	Z+2, r6	; 0x02
     9f2:	80 91 88 01 	lds	r24, 0x0188
     9f6:	90 91 89 01 	lds	r25, 0x0189
     9fa:	a0 91 8a 01 	lds	r26, 0x018A
     9fe:	b0 91 8b 01 	lds	r27, 0x018B
     a02:	84 83       	std	Z+4, r24	; 0x04
     a04:	95 83       	std	Z+5, r25	; 0x05
     a06:	a6 83       	std	Z+6, r26	; 0x06
     a08:	b7 83       	std	Z+7, r27	; 0x07
     a0a:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_1+2, buffer);
     a0e:	ed b7       	in	r30, 0x3d	; 61
     a10:	fe b7       	in	r31, 0x3e	; 62
     a12:	38 96       	adiw	r30, 0x08	; 8
     a14:	0f b6       	in	r0, 0x3f	; 63
     a16:	f8 94       	cli
     a18:	fe bf       	out	0x3e, r31	; 62
     a1a:	0f be       	out	0x3f, r0	; 63
     a1c:	ed bf       	out	0x3d, r30	; 61
     a1e:	82 e0       	ldi	r24, 0x02	; 2
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	60 e9       	ldi	r22, 0x90	; 144
     a24:	71 e0       	ldi	r23, 0x01	; 1
     a26:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
										sprintf(buffer, "NrBobin/s=%.2f", Nr_bobinarisecunda);
     a2a:	8d b7       	in	r24, 0x3d	; 61
     a2c:	9e b7       	in	r25, 0x3e	; 62
     a2e:	08 97       	sbiw	r24, 0x08	; 8
     a30:	0f b6       	in	r0, 0x3f	; 63
     a32:	f8 94       	cli
     a34:	9e bf       	out	0x3e, r25	; 62
     a36:	0f be       	out	0x3f, r0	; 63
     a38:	8d bf       	out	0x3d, r24	; 61
     a3a:	ed b7       	in	r30, 0x3d	; 61
     a3c:	fe b7       	in	r31, 0x3e	; 62
     a3e:	31 96       	adiw	r30, 0x01	; 1
     a40:	80 e9       	ldi	r24, 0x90	; 144
     a42:	91 e0       	ldi	r25, 0x01	; 1
     a44:	91 83       	std	Z+1, r25	; 0x01
     a46:	80 83       	st	Z, r24
     a48:	53 82       	std	Z+3, r5	; 0x03
     a4a:	42 82       	std	Z+2, r4	; 0x02
     a4c:	80 91 8c 01 	lds	r24, 0x018C
     a50:	90 91 8d 01 	lds	r25, 0x018D
     a54:	a0 91 8e 01 	lds	r26, 0x018E
     a58:	b0 91 8f 01 	lds	r27, 0x018F
     a5c:	84 83       	std	Z+4, r24	; 0x04
     a5e:	95 83       	std	Z+5, r25	; 0x05
     a60:	a6 83       	std	Z+6, r26	; 0x06
     a62:	b7 83       	std	Z+7, r27	; 0x07
     a64:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
										Afisare(Inceputul_liniei_2+2, buffer);
     a68:	ed b7       	in	r30, 0x3d	; 61
     a6a:	fe b7       	in	r31, 0x3e	; 62
     a6c:	38 96       	adiw	r30, 0x08	; 8
     a6e:	0f b6       	in	r0, 0x3f	; 63
     a70:	f8 94       	cli
     a72:	fe bf       	out	0x3e, r31	; 62
     a74:	0f be       	out	0x3f, r0	; 63
     a76:	ed bf       	out	0x3d, r30	; 61
     a78:	82 e4       	ldi	r24, 0x42	; 66
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	60 e9       	ldi	r22, 0x90	; 144
     a7e:	71 e0       	ldi	r23, 0x01	; 1
     a80:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_Z7AfisareiPc>
     a84:	48 cf       	rjmp	.-368    	; 0x916 <__stack+0x17>
				
				do
					{
						do
							{
								Button = read_LCD_buttons();
     a86:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_Z16read_LCD_buttonsv>
     a8a:	80 93 7b 01 	sts	0x017B, r24
								if(Button==btnNONE)
     a8e:	85 30       	cpi	r24, 0x05	; 5
     a90:	09 f4       	brne	.+2      	; 0xa94 <__stack+0x195>
     a92:	19 81       	ldd	r17, Y+1	; 0x01
     a94:	e0 e4       	ldi	r30, 0x40	; 64
     a96:	fc e9       	ldi	r31, 0x9C	; 156
     a98:	31 97       	sbiw	r30, 0x01	; 1
     a9a:	f1 f7       	brne	.-4      	; 0xa98 <__stack+0x199>
							}
					}
				
				do
					{
						do
     a9c:	85 30       	cpi	r24, 0x05	; 5
     a9e:	99 f3       	breq	.-26     	; 0xa86 <__stack+0x187>
     aa0:	11 23       	and	r17, r17
     aa2:	89 f7       	brne	.-30     	; 0xa86 <__stack+0x187>
								_delay_ms(10);
							}while(Button != btnNONE && Eliberare_Buton == true);
					}while(Button == btnNONE);
				Eliberare_Buton=true;
				Afisare_LCD=true;
				if(Button == btnDOWN)
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	11 f0       	breq	.+4      	; 0xaac <__stack+0x1ad>
     aa8:	10 2f       	mov	r17, r16
     aaa:	12 c0       	rjmp	.+36     	; 0xad0 <__stack+0x1d1>
					{
						if(pozitia_cursor==0)
     aac:	80 91 c2 01 	lds	r24, 0x01C2
     ab0:	88 23       	and	r24, r24
     ab2:	21 f4       	brne	.+8      	; 0xabc <__stack+0x1bd>
							pozitia_cursor++;
     ab4:	00 93 c2 01 	sts	0x01C2, r16
     ab8:	10 2f       	mov	r17, r16
     aba:	0a c0       	rjmp	.+20     	; 0xad0 <__stack+0x1d1>
						else
							if(imaginea<3)
     abc:	80 91 c3 01 	lds	r24, 0x01C3
     ac0:	83 30       	cpi	r24, 0x03	; 3
     ac2:	10 f0       	brcs	.+4      	; 0xac8 <__stack+0x1c9>
     ac4:	10 e0       	ldi	r17, 0x00	; 0
     ac6:	04 c0       	rjmp	.+8      	; 0xad0 <__stack+0x1d1>
								imaginea++;
     ac8:	8f 5f       	subi	r24, 0xFF	; 255
     aca:	80 93 c3 01 	sts	0x01C3, r24
     ace:	10 2f       	mov	r17, r16
							else 
								Afisare_LCD=false;
					}
				if(Button == btnUP)
     ad0:	80 91 7b 01 	lds	r24, 0x017B
     ad4:	81 30       	cpi	r24, 0x01	; 1
     ad6:	81 f4       	brne	.+32     	; 0xaf8 <__stack+0x1f9>
					{
						if(pozitia_cursor==1)
     ad8:	80 91 c2 01 	lds	r24, 0x01C2
     adc:	81 30       	cpi	r24, 0x01	; 1
     ade:	19 f4       	brne	.+6      	; 0xae6 <__stack+0x1e7>
							pozitia_cursor--;
     ae0:	10 92 c2 01 	sts	0x01C2, r1
     ae4:	09 c0       	rjmp	.+18     	; 0xaf8 <__stack+0x1f9>
						else
							if(imaginea>0)
     ae6:	80 91 c3 01 	lds	r24, 0x01C3
     aea:	88 23       	and	r24, r24
     aec:	11 f4       	brne	.+4      	; 0xaf2 <__stack+0x1f3>
     aee:	10 e0       	ldi	r17, 0x00	; 0
     af0:	03 c0       	rjmp	.+6      	; 0xaf8 <__stack+0x1f9>
								imaginea--;
     af2:	81 50       	subi	r24, 0x01	; 1
     af4:	80 93 c3 01 	sts	0x01C3, r24
							else
								Afisare_LCD=false;
					}
				if(Button == btnRIGHT)
     af8:	80 91 7b 01 	lds	r24, 0x017B
     afc:	88 23       	and	r24, r24
     afe:	09 f0       	breq	.+2      	; 0xb02 <__stack+0x203>
     b00:	a9 c0       	rjmp	.+338    	; 0xc54 <__stack+0x355>
					{
						if(imaginea==0&&pozitia_cursor==0)
     b02:	80 91 c3 01 	lds	r24, 0x01C3
     b06:	88 23       	and	r24, r24
     b08:	21 f5       	brne	.+72     	; 0xb52 <__stack+0x253>
     b0a:	80 91 c2 01 	lds	r24, 0x01C2
     b0e:	88 23       	and	r24, r24
     b10:	d1 f4       	brne	.+52     	; 0xb46 <__stack+0x247>
							{
								Diametrul_sarmei = Diametrul_sarmei+0.0001;	
     b12:	60 91 84 01 	lds	r22, 0x0184
     b16:	70 91 85 01 	lds	r23, 0x0185
     b1a:	80 91 86 01 	lds	r24, 0x0186
     b1e:	90 91 87 01 	lds	r25, 0x0187
     b22:	27 e1       	ldi	r18, 0x17	; 23
     b24:	37 eb       	ldi	r19, 0xB7	; 183
     b26:	41 ed       	ldi	r20, 0xD1	; 209
     b28:	58 e3       	ldi	r21, 0x38	; 56
     b2a:	0e 94 b9 07 	call	0xf72	; 0xf72 <__addsf3>
     b2e:	60 93 84 01 	sts	0x0184, r22
     b32:	70 93 85 01 	sts	0x0185, r23
     b36:	80 93 86 01 	sts	0x0186, r24
     b3a:	90 93 87 01 	sts	0x0187, r25
							}
						if((imaginea==0&&pozitia_cursor==1) || (imaginea==1&&pozitia_cursor==0))
     b3e:	80 91 c3 01 	lds	r24, 0x01C3
     b42:	88 23       	and	r24, r24
     b44:	31 f4       	brne	.+12     	; 0xb52 <__stack+0x253>
     b46:	80 91 c2 01 	lds	r24, 0x01C2
     b4a:	81 30       	cpi	r24, 0x01	; 1
     b4c:	09 f0       	breq	.+2      	; 0xb50 <__stack+0x251>
     b4e:	04 c2       	rjmp	.+1032   	; 0xf58 <__stack+0x659>
     b50:	07 c0       	rjmp	.+14     	; 0xb60 <__stack+0x261>
     b52:	81 30       	cpi	r24, 0x01	; 1
     b54:	09 f0       	breq	.+2      	; 0xb58 <__stack+0x259>
     b56:	00 c2       	rjmp	.+1024   	; 0xf58 <__stack+0x659>
     b58:	80 91 c2 01 	lds	r24, 0x01C2
     b5c:	88 23       	and	r24, r24
     b5e:	b9 f4       	brne	.+46     	; 0xb8e <__stack+0x28f>
							{
								Lungimea_bobinei = Lungimea_bobinei+1;
     b60:	80 91 7c 01 	lds	r24, 0x017C
     b64:	90 91 7d 01 	lds	r25, 0x017D
     b68:	a0 91 7e 01 	lds	r26, 0x017E
     b6c:	b0 91 7f 01 	lds	r27, 0x017F
     b70:	01 96       	adiw	r24, 0x01	; 1
     b72:	a1 1d       	adc	r26, r1
     b74:	b1 1d       	adc	r27, r1
     b76:	80 93 7c 01 	sts	0x017C, r24
     b7a:	90 93 7d 01 	sts	0x017D, r25
     b7e:	a0 93 7e 01 	sts	0x017E, r26
     b82:	b0 93 7f 01 	sts	0x017F, r27
							}
						if((imaginea==1&&pozitia_cursor==1) || (imaginea==2&&pozitia_cursor==0))
     b86:	80 91 c3 01 	lds	r24, 0x01C3
     b8a:	81 30       	cpi	r24, 0x01	; 1
     b8c:	31 f4       	brne	.+12     	; 0xb9a <__stack+0x29b>
     b8e:	80 91 c2 01 	lds	r24, 0x01C2
     b92:	81 30       	cpi	r24, 0x01	; 1
     b94:	09 f0       	breq	.+2      	; 0xb98 <__stack+0x299>
     b96:	e3 c1       	rjmp	.+966    	; 0xf5e <__stack+0x65f>
     b98:	07 c0       	rjmp	.+14     	; 0xba8 <__stack+0x2a9>
     b9a:	82 30       	cpi	r24, 0x02	; 2
     b9c:	09 f0       	breq	.+2      	; 0xba0 <__stack+0x2a1>
     b9e:	df c1       	rjmp	.+958    	; 0xf5e <__stack+0x65f>
     ba0:	80 91 c2 01 	lds	r24, 0x01C2
     ba4:	88 23       	and	r24, r24
     ba6:	b9 f4       	brne	.+46     	; 0xbd6 <__stack+0x2d7>
							{
								Nr_spire = Nr_spire+1;
     ba8:	80 91 80 01 	lds	r24, 0x0180
     bac:	90 91 81 01 	lds	r25, 0x0181
     bb0:	a0 91 82 01 	lds	r26, 0x0182
     bb4:	b0 91 83 01 	lds	r27, 0x0183
     bb8:	01 96       	adiw	r24, 0x01	; 1
     bba:	a1 1d       	adc	r26, r1
     bbc:	b1 1d       	adc	r27, r1
     bbe:	80 93 80 01 	sts	0x0180, r24
     bc2:	90 93 81 01 	sts	0x0181, r25
     bc6:	a0 93 82 01 	sts	0x0182, r26
     bca:	b0 93 83 01 	sts	0x0183, r27
							}
						if((imaginea==2&&pozitia_cursor==1) || (imaginea==3&&pozitia_cursor==0))
     bce:	80 91 c3 01 	lds	r24, 0x01C3
     bd2:	82 30       	cpi	r24, 0x02	; 2
     bd4:	29 f4       	brne	.+10     	; 0xbe0 <__stack+0x2e1>
     bd6:	80 91 c2 01 	lds	r24, 0x01C2
     bda:	81 30       	cpi	r24, 0x01	; 1
     bdc:	d9 f5       	brne	.+118    	; 0xc54 <__stack+0x355>
     bde:	06 c0       	rjmp	.+12     	; 0xbec <__stack+0x2ed>
     be0:	83 30       	cpi	r24, 0x03	; 3
     be2:	c1 f5       	brne	.+112    	; 0xc54 <__stack+0x355>
     be4:	80 91 c2 01 	lds	r24, 0x01C2
     be8:	88 23       	and	r24, r24
     bea:	d1 f4       	brne	.+52     	; 0xc20 <__stack+0x321>
							{
								Coef_deplasare = Coef_deplasare + 0.01;
     bec:	60 91 88 01 	lds	r22, 0x0188
     bf0:	70 91 89 01 	lds	r23, 0x0189
     bf4:	80 91 8a 01 	lds	r24, 0x018A
     bf8:	90 91 8b 01 	lds	r25, 0x018B
     bfc:	2a e0       	ldi	r18, 0x0A	; 10
     bfe:	37 ed       	ldi	r19, 0xD7	; 215
     c00:	43 e2       	ldi	r20, 0x23	; 35
     c02:	5c e3       	ldi	r21, 0x3C	; 60
     c04:	0e 94 b9 07 	call	0xf72	; 0xf72 <__addsf3>
     c08:	60 93 88 01 	sts	0x0188, r22
     c0c:	70 93 89 01 	sts	0x0189, r23
     c10:	80 93 8a 01 	sts	0x018A, r24
     c14:	90 93 8b 01 	sts	0x018B, r25
							}
						if(imaginea==3&&pozitia_cursor==1)
     c18:	80 91 c3 01 	lds	r24, 0x01C3
     c1c:	83 30       	cpi	r24, 0x03	; 3
     c1e:	d1 f4       	brne	.+52     	; 0xc54 <__stack+0x355>
     c20:	80 91 c2 01 	lds	r24, 0x01C2
     c24:	81 30       	cpi	r24, 0x01	; 1
     c26:	b1 f4       	brne	.+44     	; 0xc54 <__stack+0x355>
							{
								Nr_bobinarisecunda = Nr_bobinarisecunda + 0.01;
     c28:	60 91 8c 01 	lds	r22, 0x018C
     c2c:	70 91 8d 01 	lds	r23, 0x018D
     c30:	80 91 8e 01 	lds	r24, 0x018E
     c34:	90 91 8f 01 	lds	r25, 0x018F
     c38:	2a e0       	ldi	r18, 0x0A	; 10
     c3a:	37 ed       	ldi	r19, 0xD7	; 215
     c3c:	43 e2       	ldi	r20, 0x23	; 35
     c3e:	5c e3       	ldi	r21, 0x3C	; 60
     c40:	0e 94 b9 07 	call	0xf72	; 0xf72 <__addsf3>
     c44:	60 93 8c 01 	sts	0x018C, r22
     c48:	70 93 8d 01 	sts	0x018D, r23
     c4c:	80 93 8e 01 	sts	0x018E, r24
     c50:	90 93 8f 01 	sts	0x018F, r25
							}	
					}
				if(Button == btnLEFT)
     c54:	80 91 7b 01 	lds	r24, 0x017B
     c58:	83 30       	cpi	r24, 0x03	; 3
     c5a:	09 f0       	breq	.+2      	; 0xc5e <__stack+0x35f>
     c5c:	a9 c0       	rjmp	.+338    	; 0xdb0 <__stack+0x4b1>
					{
						if(imaginea==0&&pozitia_cursor==0)
     c5e:	80 91 c3 01 	lds	r24, 0x01C3
     c62:	88 23       	and	r24, r24
     c64:	21 f5       	brne	.+72     	; 0xcae <__stack+0x3af>
     c66:	80 91 c2 01 	lds	r24, 0x01C2
     c6a:	88 23       	and	r24, r24
     c6c:	d1 f4       	brne	.+52     	; 0xca2 <__stack+0x3a3>
						{
							Diametrul_sarmei = Diametrul_sarmei - 0.0001;
     c6e:	60 91 84 01 	lds	r22, 0x0184
     c72:	70 91 85 01 	lds	r23, 0x0185
     c76:	80 91 86 01 	lds	r24, 0x0186
     c7a:	90 91 87 01 	lds	r25, 0x0187
     c7e:	27 e1       	ldi	r18, 0x17	; 23
     c80:	37 eb       	ldi	r19, 0xB7	; 183
     c82:	41 ed       	ldi	r20, 0xD1	; 209
     c84:	58 e3       	ldi	r21, 0x38	; 56
     c86:	0e 94 b8 07 	call	0xf70	; 0xf70 <__subsf3>
     c8a:	60 93 84 01 	sts	0x0184, r22
     c8e:	70 93 85 01 	sts	0x0185, r23
     c92:	80 93 86 01 	sts	0x0186, r24
     c96:	90 93 87 01 	sts	0x0187, r25
						}
						if((imaginea==0&&pozitia_cursor==1) || (imaginea==1&&pozitia_cursor==0))
     c9a:	80 91 c3 01 	lds	r24, 0x01C3
     c9e:	88 23       	and	r24, r24
     ca0:	31 f4       	brne	.+12     	; 0xcae <__stack+0x3af>
     ca2:	80 91 c2 01 	lds	r24, 0x01C2
     ca6:	81 30       	cpi	r24, 0x01	; 1
     ca8:	09 f0       	breq	.+2      	; 0xcac <__stack+0x3ad>
     caa:	5c c1       	rjmp	.+696    	; 0xf64 <__stack+0x665>
     cac:	07 c0       	rjmp	.+14     	; 0xcbc <__stack+0x3bd>
     cae:	81 30       	cpi	r24, 0x01	; 1
     cb0:	09 f0       	breq	.+2      	; 0xcb4 <__stack+0x3b5>
     cb2:	58 c1       	rjmp	.+688    	; 0xf64 <__stack+0x665>
     cb4:	80 91 c2 01 	lds	r24, 0x01C2
     cb8:	88 23       	and	r24, r24
     cba:	b9 f4       	brne	.+46     	; 0xcea <__stack+0x3eb>
						{
							Lungimea_bobinei = Lungimea_bobinei - 1;
     cbc:	80 91 7c 01 	lds	r24, 0x017C
     cc0:	90 91 7d 01 	lds	r25, 0x017D
     cc4:	a0 91 7e 01 	lds	r26, 0x017E
     cc8:	b0 91 7f 01 	lds	r27, 0x017F
     ccc:	01 97       	sbiw	r24, 0x01	; 1
     cce:	a1 09       	sbc	r26, r1
     cd0:	b1 09       	sbc	r27, r1
     cd2:	80 93 7c 01 	sts	0x017C, r24
     cd6:	90 93 7d 01 	sts	0x017D, r25
     cda:	a0 93 7e 01 	sts	0x017E, r26
     cde:	b0 93 7f 01 	sts	0x017F, r27
						}
						if((imaginea==1&&pozitia_cursor==1) || (imaginea==2&&pozitia_cursor==0))
     ce2:	80 91 c3 01 	lds	r24, 0x01C3
     ce6:	81 30       	cpi	r24, 0x01	; 1
     ce8:	31 f4       	brne	.+12     	; 0xcf6 <__stack+0x3f7>
     cea:	80 91 c2 01 	lds	r24, 0x01C2
     cee:	81 30       	cpi	r24, 0x01	; 1
     cf0:	09 f0       	breq	.+2      	; 0xcf4 <__stack+0x3f5>
     cf2:	3b c1       	rjmp	.+630    	; 0xf6a <__stack+0x66b>
     cf4:	07 c0       	rjmp	.+14     	; 0xd04 <__stack+0x405>
     cf6:	82 30       	cpi	r24, 0x02	; 2
     cf8:	09 f0       	breq	.+2      	; 0xcfc <__stack+0x3fd>
     cfa:	37 c1       	rjmp	.+622    	; 0xf6a <__stack+0x66b>
     cfc:	80 91 c2 01 	lds	r24, 0x01C2
     d00:	88 23       	and	r24, r24
     d02:	b9 f4       	brne	.+46     	; 0xd32 <__stack+0x433>
						{
							Nr_spire = Nr_spire - 1;
     d04:	80 91 80 01 	lds	r24, 0x0180
     d08:	90 91 81 01 	lds	r25, 0x0181
     d0c:	a0 91 82 01 	lds	r26, 0x0182
     d10:	b0 91 83 01 	lds	r27, 0x0183
     d14:	01 97       	sbiw	r24, 0x01	; 1
     d16:	a1 09       	sbc	r26, r1
     d18:	b1 09       	sbc	r27, r1
     d1a:	80 93 80 01 	sts	0x0180, r24
     d1e:	90 93 81 01 	sts	0x0181, r25
     d22:	a0 93 82 01 	sts	0x0182, r26
     d26:	b0 93 83 01 	sts	0x0183, r27
						}
						if((imaginea==2&&pozitia_cursor==1) || (imaginea==3&&pozitia_cursor==0))
     d2a:	80 91 c3 01 	lds	r24, 0x01C3
     d2e:	82 30       	cpi	r24, 0x02	; 2
     d30:	29 f4       	brne	.+10     	; 0xd3c <__stack+0x43d>
     d32:	80 91 c2 01 	lds	r24, 0x01C2
     d36:	81 30       	cpi	r24, 0x01	; 1
     d38:	d9 f5       	brne	.+118    	; 0xdb0 <__stack+0x4b1>
     d3a:	06 c0       	rjmp	.+12     	; 0xd48 <__stack+0x449>
     d3c:	83 30       	cpi	r24, 0x03	; 3
     d3e:	c1 f5       	brne	.+112    	; 0xdb0 <__stack+0x4b1>
     d40:	80 91 c2 01 	lds	r24, 0x01C2
     d44:	88 23       	and	r24, r24
     d46:	d1 f4       	brne	.+52     	; 0xd7c <__stack+0x47d>
						{
							Coef_deplasare = Coef_deplasare - 0.01;
     d48:	60 91 88 01 	lds	r22, 0x0188
     d4c:	70 91 89 01 	lds	r23, 0x0189
     d50:	80 91 8a 01 	lds	r24, 0x018A
     d54:	90 91 8b 01 	lds	r25, 0x018B
     d58:	2a e0       	ldi	r18, 0x0A	; 10
     d5a:	37 ed       	ldi	r19, 0xD7	; 215
     d5c:	43 e2       	ldi	r20, 0x23	; 35
     d5e:	5c e3       	ldi	r21, 0x3C	; 60
     d60:	0e 94 b8 07 	call	0xf70	; 0xf70 <__subsf3>
     d64:	60 93 88 01 	sts	0x0188, r22
     d68:	70 93 89 01 	sts	0x0189, r23
     d6c:	80 93 8a 01 	sts	0x018A, r24
     d70:	90 93 8b 01 	sts	0x018B, r25
						}
						if(imaginea==3&&pozitia_cursor==1)
     d74:	80 91 c3 01 	lds	r24, 0x01C3
     d78:	83 30       	cpi	r24, 0x03	; 3
     d7a:	d1 f4       	brne	.+52     	; 0xdb0 <__stack+0x4b1>
     d7c:	80 91 c2 01 	lds	r24, 0x01C2
     d80:	81 30       	cpi	r24, 0x01	; 1
     d82:	b1 f4       	brne	.+44     	; 0xdb0 <__stack+0x4b1>
						{
							Nr_bobinarisecunda = Nr_bobinarisecunda - 0.01;
     d84:	60 91 8c 01 	lds	r22, 0x018C
     d88:	70 91 8d 01 	lds	r23, 0x018D
     d8c:	80 91 8e 01 	lds	r24, 0x018E
     d90:	90 91 8f 01 	lds	r25, 0x018F
     d94:	2a e0       	ldi	r18, 0x0A	; 10
     d96:	37 ed       	ldi	r19, 0xD7	; 215
     d98:	43 e2       	ldi	r20, 0x23	; 35
     d9a:	5c e3       	ldi	r21, 0x3C	; 60
     d9c:	0e 94 b8 07 	call	0xf70	; 0xf70 <__subsf3>
     da0:	60 93 8c 01 	sts	0x018C, r22
     da4:	70 93 8d 01 	sts	0x018D, r23
     da8:	80 93 8e 01 	sts	0x018E, r24
     dac:	90 93 8f 01 	sts	0x018F, r25
inline void MeniulSecundarSetting()
	{
		bool Eliberare_Buton=true;
		bool Afisare_LCD=true;
		pozitia_cursor=0;
		do
     db0:	80 91 7b 01 	lds	r24, 0x017B
     db4:	84 30       	cpi	r24, 0x04	; 4
     db6:	09 f0       	breq	.+2      	; 0xdba <__stack+0x4bb>
     db8:	cd cc       	rjmp	.-1638   	; 0x754 <main+0x22a>
								sprintf(buffer,"Butonul = %d", btnDOWN);
								break;
							}
						case btnSELECT:
							{
								sprintf(buffer,"Butonul = %d", btnSELECT);
     dba:	0f 2e       	mov	r0, r31
     dbc:	f0 e9       	ldi	r31, 0x90	; 144
     dbe:	2f 2e       	mov	r2, r31
     dc0:	f1 e0       	ldi	r31, 0x01	; 1
     dc2:	3f 2e       	mov	r3, r31
     dc4:	f0 2d       	mov	r31, r0
     dc6:	0e e6       	ldi	r16, 0x6E	; 110
     dc8:	11 e0       	ldi	r17, 0x01	; 1
     dca:	66 24       	eor	r6, r6
     dcc:	77 24       	eor	r7, r7
     dce:	68 94       	set
     dd0:	62 f8       	bld	r6, 2
								sprintf(buffer,"Butonul = %d", btnRIGHT);
								break;
							}
						case btnLEFT:
							{
								sprintf(buffer,"Butonul = %d", btnLEFT);
     dd2:	0f 2e       	mov	r0, r31
     dd4:	f3 e0       	ldi	r31, 0x03	; 3
     dd6:	4f 2e       	mov	r4, r31
     dd8:	55 24       	eor	r5, r5
     dda:	f0 2d       	mov	r31, r0
								sprintf(buffer,"Butonul = %d", btnSELECT);
								break;
							}
						case btnNONE:
							{
								sprintf(buffer,"Butonul = %d", btnNONE);
     ddc:	0f 2e       	mov	r0, r31
     dde:	f5 e0       	ldi	r31, 0x05	; 5
     de0:	cf 2e       	mov	r12, r31
     de2:	dd 24       	eor	r13, r13
     de4:	f0 2d       	mov	r31, r0
								sprintf(buffer,"Butonul = %d", btnLEFT);
								break;
							}
						case btnUP:
							{
								sprintf(buffer,"Butonul = %d", btnUP);
     de6:	aa 24       	eor	r10, r10
     de8:	bb 24       	eor	r11, r11
     dea:	a3 94       	inc	r10
								break;
							}
						case btnDOWN:
							{
								sprintf(buffer,"Butonul = %d", btnDOWN);
     dec:	88 24       	eor	r8, r8
     dee:	99 24       	eor	r9, r9
     df0:	68 94       	set
     df2:	81 f8       	bld	r8, 1
     df4:	0f 2e       	mov	r0, r31
     df6:	f0 e2       	ldi	r31, 0x20	; 32
     df8:	ef 2e       	mov	r14, r31
     dfa:	fe e4       	ldi	r31, 0x4E	; 78
     dfc:	ff 2e       	mov	r15, r31
     dfe:	f0 2d       	mov	r31, r0
		
		
		
		while (1) 
			{
				lcd_clrscr();
     e00:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_Z10lcd_clrscrv>
				switch (read_LCD_buttons())               // depending on which button was pushed, we perform an action
     e04:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_Z16read_LCD_buttonsv>
     e08:	82 30       	cpi	r24, 0x02	; 2
     e0a:	91 05       	cpc	r25, r1
     e0c:	09 f4       	brne	.+2      	; 0xe10 <__stack+0x511>
     e0e:	59 c0       	rjmp	.+178    	; 0xec2 <__stack+0x5c3>
     e10:	83 30       	cpi	r24, 0x03	; 3
     e12:	91 05       	cpc	r25, r1
     e14:	34 f4       	brge	.+12     	; 0xe22 <__stack+0x523>
     e16:	00 97       	sbiw	r24, 0x00	; 0
     e18:	79 f0       	breq	.+30     	; 0xe38 <__stack+0x539>
     e1a:	01 97       	sbiw	r24, 0x01	; 1
     e1c:	09 f0       	breq	.+2      	; 0xe20 <__stack+0x521>
     e1e:	95 c0       	rjmp	.+298    	; 0xf4a <__stack+0x64b>
     e20:	39 c0       	rjmp	.+114    	; 0xe94 <__stack+0x595>
     e22:	84 30       	cpi	r24, 0x04	; 4
     e24:	91 05       	cpc	r25, r1
     e26:	09 f4       	brne	.+2      	; 0xe2a <__stack+0x52b>
     e28:	63 c0       	rjmp	.+198    	; 0xef0 <__stack+0x5f1>
     e2a:	84 30       	cpi	r24, 0x04	; 4
     e2c:	91 05       	cpc	r25, r1
     e2e:	dc f0       	brlt	.+54     	; 0xe66 <__stack+0x567>
     e30:	05 97       	sbiw	r24, 0x05	; 5
     e32:	09 f0       	breq	.+2      	; 0xe36 <__stack+0x537>
     e34:	8a c0       	rjmp	.+276    	; 0xf4a <__stack+0x64b>
     e36:	73 c0       	rjmp	.+230    	; 0xf1e <__stack+0x61f>
					{
						case btnRIGHT:
							{
								sprintf(buffer,"Butonul = %d", btnRIGHT);
     e38:	00 d0       	rcall	.+0      	; 0xe3a <__stack+0x53b>
     e3a:	00 d0       	rcall	.+0      	; 0xe3c <__stack+0x53d>
     e3c:	00 d0       	rcall	.+0      	; 0xe3e <__stack+0x53f>
     e3e:	ed b7       	in	r30, 0x3d	; 61
     e40:	fe b7       	in	r31, 0x3e	; 62
     e42:	31 96       	adiw	r30, 0x01	; 1
     e44:	31 82       	std	Z+1, r3	; 0x01
     e46:	20 82       	st	Z, r2
     e48:	13 83       	std	Z+3, r17	; 0x03
     e4a:	02 83       	std	Z+2, r16	; 0x02
     e4c:	15 82       	std	Z+5, r1	; 0x05
     e4e:	14 82       	std	Z+4, r1	; 0x04
     e50:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
     e54:	8d b7       	in	r24, 0x3d	; 61
     e56:	9e b7       	in	r25, 0x3e	; 62
     e58:	06 96       	adiw	r24, 0x06	; 6
     e5a:	0f b6       	in	r0, 0x3f	; 63
     e5c:	f8 94       	cli
     e5e:	9e bf       	out	0x3e, r25	; 62
     e60:	0f be       	out	0x3f, r0	; 63
     e62:	8d bf       	out	0x3d, r24	; 61
     e64:	72 c0       	rjmp	.+228    	; 0xf4a <__stack+0x64b>
								break;
							}
						case btnLEFT:
							{
								sprintf(buffer,"Butonul = %d", btnLEFT);
     e66:	00 d0       	rcall	.+0      	; 0xe68 <__stack+0x569>
     e68:	00 d0       	rcall	.+0      	; 0xe6a <__stack+0x56b>
     e6a:	00 d0       	rcall	.+0      	; 0xe6c <__stack+0x56d>
     e6c:	ed b7       	in	r30, 0x3d	; 61
     e6e:	fe b7       	in	r31, 0x3e	; 62
     e70:	31 96       	adiw	r30, 0x01	; 1
     e72:	31 82       	std	Z+1, r3	; 0x01
     e74:	20 82       	st	Z, r2
     e76:	13 83       	std	Z+3, r17	; 0x03
     e78:	02 83       	std	Z+2, r16	; 0x02
     e7a:	55 82       	std	Z+5, r5	; 0x05
     e7c:	44 82       	std	Z+4, r4	; 0x04
     e7e:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
     e82:	ed b7       	in	r30, 0x3d	; 61
     e84:	fe b7       	in	r31, 0x3e	; 62
     e86:	36 96       	adiw	r30, 0x06	; 6
     e88:	0f b6       	in	r0, 0x3f	; 63
     e8a:	f8 94       	cli
     e8c:	fe bf       	out	0x3e, r31	; 62
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	ed bf       	out	0x3d, r30	; 61
     e92:	5b c0       	rjmp	.+182    	; 0xf4a <__stack+0x64b>
								break;
							}
						case btnUP:
							{
								sprintf(buffer,"Butonul = %d", btnUP);
     e94:	00 d0       	rcall	.+0      	; 0xe96 <__stack+0x597>
     e96:	00 d0       	rcall	.+0      	; 0xe98 <__stack+0x599>
     e98:	00 d0       	rcall	.+0      	; 0xe9a <__stack+0x59b>
     e9a:	ed b7       	in	r30, 0x3d	; 61
     e9c:	fe b7       	in	r31, 0x3e	; 62
     e9e:	31 96       	adiw	r30, 0x01	; 1
     ea0:	31 82       	std	Z+1, r3	; 0x01
     ea2:	20 82       	st	Z, r2
     ea4:	13 83       	std	Z+3, r17	; 0x03
     ea6:	02 83       	std	Z+2, r16	; 0x02
     ea8:	b5 82       	std	Z+5, r11	; 0x05
     eaa:	a4 82       	std	Z+4, r10	; 0x04
     eac:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
     eb0:	8d b7       	in	r24, 0x3d	; 61
     eb2:	9e b7       	in	r25, 0x3e	; 62
     eb4:	06 96       	adiw	r24, 0x06	; 6
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	f8 94       	cli
     eba:	9e bf       	out	0x3e, r25	; 62
     ebc:	0f be       	out	0x3f, r0	; 63
     ebe:	8d bf       	out	0x3d, r24	; 61
     ec0:	44 c0       	rjmp	.+136    	; 0xf4a <__stack+0x64b>
								break;
							}
						case btnDOWN:
							{
								sprintf(buffer,"Butonul = %d", btnDOWN);
     ec2:	00 d0       	rcall	.+0      	; 0xec4 <__stack+0x5c5>
     ec4:	00 d0       	rcall	.+0      	; 0xec6 <__stack+0x5c7>
     ec6:	00 d0       	rcall	.+0      	; 0xec8 <__stack+0x5c9>
     ec8:	ed b7       	in	r30, 0x3d	; 61
     eca:	fe b7       	in	r31, 0x3e	; 62
     ecc:	31 96       	adiw	r30, 0x01	; 1
     ece:	31 82       	std	Z+1, r3	; 0x01
     ed0:	20 82       	st	Z, r2
     ed2:	13 83       	std	Z+3, r17	; 0x03
     ed4:	02 83       	std	Z+2, r16	; 0x02
     ed6:	95 82       	std	Z+5, r9	; 0x05
     ed8:	84 82       	std	Z+4, r8	; 0x04
     eda:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
     ede:	ed b7       	in	r30, 0x3d	; 61
     ee0:	fe b7       	in	r31, 0x3e	; 62
     ee2:	36 96       	adiw	r30, 0x06	; 6
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	fe bf       	out	0x3e, r31	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	ed bf       	out	0x3d, r30	; 61
     eee:	2d c0       	rjmp	.+90     	; 0xf4a <__stack+0x64b>
								break;
							}
						case btnSELECT:
							{
								sprintf(buffer,"Butonul = %d", btnSELECT);
     ef0:	00 d0       	rcall	.+0      	; 0xef2 <__stack+0x5f3>
     ef2:	00 d0       	rcall	.+0      	; 0xef4 <__stack+0x5f5>
     ef4:	00 d0       	rcall	.+0      	; 0xef6 <__stack+0x5f7>
     ef6:	ed b7       	in	r30, 0x3d	; 61
     ef8:	fe b7       	in	r31, 0x3e	; 62
     efa:	31 96       	adiw	r30, 0x01	; 1
     efc:	31 82       	std	Z+1, r3	; 0x01
     efe:	20 82       	st	Z, r2
     f00:	13 83       	std	Z+3, r17	; 0x03
     f02:	02 83       	std	Z+2, r16	; 0x02
     f04:	75 82       	std	Z+5, r7	; 0x05
     f06:	64 82       	std	Z+4, r6	; 0x04
     f08:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
     f0c:	8d b7       	in	r24, 0x3d	; 61
     f0e:	9e b7       	in	r25, 0x3e	; 62
     f10:	06 96       	adiw	r24, 0x06	; 6
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	f8 94       	cli
     f16:	9e bf       	out	0x3e, r25	; 62
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	8d bf       	out	0x3d, r24	; 61
     f1c:	16 c0       	rjmp	.+44     	; 0xf4a <__stack+0x64b>
								break;
							}
						case btnNONE:
							{
								sprintf(buffer,"Butonul = %d", btnNONE);
     f1e:	00 d0       	rcall	.+0      	; 0xf20 <__stack+0x621>
     f20:	00 d0       	rcall	.+0      	; 0xf22 <__stack+0x623>
     f22:	00 d0       	rcall	.+0      	; 0xf24 <__stack+0x625>
     f24:	ed b7       	in	r30, 0x3d	; 61
     f26:	fe b7       	in	r31, 0x3e	; 62
     f28:	31 96       	adiw	r30, 0x01	; 1
     f2a:	31 82       	std	Z+1, r3	; 0x01
     f2c:	20 82       	st	Z, r2
     f2e:	13 83       	std	Z+3, r17	; 0x03
     f30:	02 83       	std	Z+2, r16	; 0x02
     f32:	d5 82       	std	Z+5, r13	; 0x05
     f34:	c4 82       	std	Z+4, r12	; 0x04
     f36:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <sprintf>
     f3a:	ed b7       	in	r30, 0x3d	; 61
     f3c:	fe b7       	in	r31, 0x3e	; 62
     f3e:	36 96       	adiw	r30, 0x06	; 6
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	f8 94       	cli
     f44:	fe bf       	out	0x3e, r31	; 62
     f46:	0f be       	out	0x3f, r0	; 63
     f48:	ed bf       	out	0x3d, r30	; 61
								break;
							}
					}	
				lcd_puts(buffer);	
     f4a:	c1 01       	movw	r24, r2
     f4c:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8lcd_putsPKc>
     f50:	c7 01       	movw	r24, r14
     f52:	01 97       	sbiw	r24, 0x01	; 1
     f54:	f1 f7       	brne	.-4      	; 0xf52 <__stack+0x653>
     f56:	54 cf       	rjmp	.-344    	; 0xe00 <__stack+0x501>
							}
						if((imaginea==0&&pozitia_cursor==1) || (imaginea==1&&pozitia_cursor==0))
							{
								Lungimea_bobinei = Lungimea_bobinei+1;
							}
						if((imaginea==1&&pozitia_cursor==1) || (imaginea==2&&pozitia_cursor==0))
     f58:	80 91 c3 01 	lds	r24, 0x01C3
     f5c:	1e ce       	rjmp	.-964    	; 0xb9a <__stack+0x29b>
							{
								Nr_spire = Nr_spire+1;
							}
						if((imaginea==2&&pozitia_cursor==1) || (imaginea==3&&pozitia_cursor==0))
     f5e:	80 91 c3 01 	lds	r24, 0x01C3
     f62:	3e ce       	rjmp	.-900    	; 0xbe0 <__stack+0x2e1>
						}
						if((imaginea==0&&pozitia_cursor==1) || (imaginea==1&&pozitia_cursor==0))
						{
							Lungimea_bobinei = Lungimea_bobinei - 1;
						}
						if((imaginea==1&&pozitia_cursor==1) || (imaginea==2&&pozitia_cursor==0))
     f64:	80 91 c3 01 	lds	r24, 0x01C3
     f68:	c6 ce       	rjmp	.-628    	; 0xcf6 <__stack+0x3f7>
						{
							Nr_spire = Nr_spire - 1;
						}
						if((imaginea==2&&pozitia_cursor==1) || (imaginea==3&&pozitia_cursor==0))
     f6a:	80 91 c3 01 	lds	r24, 0x01C3
     f6e:	e6 ce       	rjmp	.-564    	; 0xd3c <__stack+0x43d>

00000f70 <__subsf3>:
     f70:	50 58       	subi	r21, 0x80	; 128

00000f72 <__addsf3>:
     f72:	bb 27       	eor	r27, r27
     f74:	aa 27       	eor	r26, r26
     f76:	0e d0       	rcall	.+28     	; 0xf94 <__addsf3x>
     f78:	77 c0       	rjmp	.+238    	; 0x1068 <__fp_round>
     f7a:	68 d0       	rcall	.+208    	; 0x104c <__fp_pscA>
     f7c:	30 f0       	brcs	.+12     	; 0xf8a <__addsf3+0x18>
     f7e:	6d d0       	rcall	.+218    	; 0x105a <__fp_pscB>
     f80:	20 f0       	brcs	.+8      	; 0xf8a <__addsf3+0x18>
     f82:	31 f4       	brne	.+12     	; 0xf90 <__addsf3+0x1e>
     f84:	9f 3f       	cpi	r25, 0xFF	; 255
     f86:	11 f4       	brne	.+4      	; 0xf8c <__addsf3+0x1a>
     f88:	1e f4       	brtc	.+6      	; 0xf90 <__addsf3+0x1e>
     f8a:	5d c0       	rjmp	.+186    	; 0x1046 <__fp_nan>
     f8c:	0e f4       	brtc	.+2      	; 0xf90 <__addsf3+0x1e>
     f8e:	e0 95       	com	r30
     f90:	e7 fb       	bst	r30, 7
     f92:	53 c0       	rjmp	.+166    	; 0x103a <__fp_inf>

00000f94 <__addsf3x>:
     f94:	e9 2f       	mov	r30, r25
     f96:	79 d0       	rcall	.+242    	; 0x108a <__fp_split3>
     f98:	80 f3       	brcs	.-32     	; 0xf7a <__addsf3+0x8>
     f9a:	ba 17       	cp	r27, r26
     f9c:	62 07       	cpc	r22, r18
     f9e:	73 07       	cpc	r23, r19
     fa0:	84 07       	cpc	r24, r20
     fa2:	95 07       	cpc	r25, r21
     fa4:	18 f0       	brcs	.+6      	; 0xfac <__addsf3x+0x18>
     fa6:	71 f4       	brne	.+28     	; 0xfc4 <__addsf3x+0x30>
     fa8:	9e f5       	brtc	.+102    	; 0x1010 <__addsf3x+0x7c>
     faa:	91 c0       	rjmp	.+290    	; 0x10ce <__fp_zero>
     fac:	0e f4       	brtc	.+2      	; 0xfb0 <__addsf3x+0x1c>
     fae:	e0 95       	com	r30
     fb0:	0b 2e       	mov	r0, r27
     fb2:	ba 2f       	mov	r27, r26
     fb4:	a0 2d       	mov	r26, r0
     fb6:	0b 01       	movw	r0, r22
     fb8:	b9 01       	movw	r22, r18
     fba:	90 01       	movw	r18, r0
     fbc:	0c 01       	movw	r0, r24
     fbe:	ca 01       	movw	r24, r20
     fc0:	a0 01       	movw	r20, r0
     fc2:	11 24       	eor	r1, r1
     fc4:	ff 27       	eor	r31, r31
     fc6:	59 1b       	sub	r21, r25
     fc8:	99 f0       	breq	.+38     	; 0xff0 <__addsf3x+0x5c>
     fca:	59 3f       	cpi	r21, 0xF9	; 249
     fcc:	50 f4       	brcc	.+20     	; 0xfe2 <__addsf3x+0x4e>
     fce:	50 3e       	cpi	r21, 0xE0	; 224
     fd0:	68 f1       	brcs	.+90     	; 0x102c <__addsf3x+0x98>
     fd2:	1a 16       	cp	r1, r26
     fd4:	f0 40       	sbci	r31, 0x00	; 0
     fd6:	a2 2f       	mov	r26, r18
     fd8:	23 2f       	mov	r18, r19
     fda:	34 2f       	mov	r19, r20
     fdc:	44 27       	eor	r20, r20
     fde:	58 5f       	subi	r21, 0xF8	; 248
     fe0:	f3 cf       	rjmp	.-26     	; 0xfc8 <__addsf3x+0x34>
     fe2:	46 95       	lsr	r20
     fe4:	37 95       	ror	r19
     fe6:	27 95       	ror	r18
     fe8:	a7 95       	ror	r26
     fea:	f0 40       	sbci	r31, 0x00	; 0
     fec:	53 95       	inc	r21
     fee:	c9 f7       	brne	.-14     	; 0xfe2 <__addsf3x+0x4e>
     ff0:	7e f4       	brtc	.+30     	; 0x1010 <__addsf3x+0x7c>
     ff2:	1f 16       	cp	r1, r31
     ff4:	ba 0b       	sbc	r27, r26
     ff6:	62 0b       	sbc	r22, r18
     ff8:	73 0b       	sbc	r23, r19
     ffa:	84 0b       	sbc	r24, r20
     ffc:	ba f0       	brmi	.+46     	; 0x102c <__addsf3x+0x98>
     ffe:	91 50       	subi	r25, 0x01	; 1
    1000:	a1 f0       	breq	.+40     	; 0x102a <__addsf3x+0x96>
    1002:	ff 0f       	add	r31, r31
    1004:	bb 1f       	adc	r27, r27
    1006:	66 1f       	adc	r22, r22
    1008:	77 1f       	adc	r23, r23
    100a:	88 1f       	adc	r24, r24
    100c:	c2 f7       	brpl	.-16     	; 0xffe <__addsf3x+0x6a>
    100e:	0e c0       	rjmp	.+28     	; 0x102c <__addsf3x+0x98>
    1010:	ba 0f       	add	r27, r26
    1012:	62 1f       	adc	r22, r18
    1014:	73 1f       	adc	r23, r19
    1016:	84 1f       	adc	r24, r20
    1018:	48 f4       	brcc	.+18     	; 0x102c <__addsf3x+0x98>
    101a:	87 95       	ror	r24
    101c:	77 95       	ror	r23
    101e:	67 95       	ror	r22
    1020:	b7 95       	ror	r27
    1022:	f7 95       	ror	r31
    1024:	9e 3f       	cpi	r25, 0xFE	; 254
    1026:	08 f0       	brcs	.+2      	; 0x102a <__addsf3x+0x96>
    1028:	b3 cf       	rjmp	.-154    	; 0xf90 <__addsf3+0x1e>
    102a:	93 95       	inc	r25
    102c:	88 0f       	add	r24, r24
    102e:	08 f0       	brcs	.+2      	; 0x1032 <__addsf3x+0x9e>
    1030:	99 27       	eor	r25, r25
    1032:	ee 0f       	add	r30, r30
    1034:	97 95       	ror	r25
    1036:	87 95       	ror	r24
    1038:	08 95       	ret

0000103a <__fp_inf>:
    103a:	97 f9       	bld	r25, 7
    103c:	9f 67       	ori	r25, 0x7F	; 127
    103e:	80 e8       	ldi	r24, 0x80	; 128
    1040:	70 e0       	ldi	r23, 0x00	; 0
    1042:	60 e0       	ldi	r22, 0x00	; 0
    1044:	08 95       	ret

00001046 <__fp_nan>:
    1046:	9f ef       	ldi	r25, 0xFF	; 255
    1048:	80 ec       	ldi	r24, 0xC0	; 192
    104a:	08 95       	ret

0000104c <__fp_pscA>:
    104c:	00 24       	eor	r0, r0
    104e:	0a 94       	dec	r0
    1050:	16 16       	cp	r1, r22
    1052:	17 06       	cpc	r1, r23
    1054:	18 06       	cpc	r1, r24
    1056:	09 06       	cpc	r0, r25
    1058:	08 95       	ret

0000105a <__fp_pscB>:
    105a:	00 24       	eor	r0, r0
    105c:	0a 94       	dec	r0
    105e:	12 16       	cp	r1, r18
    1060:	13 06       	cpc	r1, r19
    1062:	14 06       	cpc	r1, r20
    1064:	05 06       	cpc	r0, r21
    1066:	08 95       	ret

00001068 <__fp_round>:
    1068:	09 2e       	mov	r0, r25
    106a:	03 94       	inc	r0
    106c:	00 0c       	add	r0, r0
    106e:	11 f4       	brne	.+4      	; 0x1074 <__fp_round+0xc>
    1070:	88 23       	and	r24, r24
    1072:	52 f0       	brmi	.+20     	; 0x1088 <__fp_round+0x20>
    1074:	bb 0f       	add	r27, r27
    1076:	40 f4       	brcc	.+16     	; 0x1088 <__fp_round+0x20>
    1078:	bf 2b       	or	r27, r31
    107a:	11 f4       	brne	.+4      	; 0x1080 <__fp_round+0x18>
    107c:	60 ff       	sbrs	r22, 0
    107e:	04 c0       	rjmp	.+8      	; 0x1088 <__fp_round+0x20>
    1080:	6f 5f       	subi	r22, 0xFF	; 255
    1082:	7f 4f       	sbci	r23, 0xFF	; 255
    1084:	8f 4f       	sbci	r24, 0xFF	; 255
    1086:	9f 4f       	sbci	r25, 0xFF	; 255
    1088:	08 95       	ret

0000108a <__fp_split3>:
    108a:	57 fd       	sbrc	r21, 7
    108c:	90 58       	subi	r25, 0x80	; 128
    108e:	44 0f       	add	r20, r20
    1090:	55 1f       	adc	r21, r21
    1092:	59 f0       	breq	.+22     	; 0x10aa <__fp_splitA+0x10>
    1094:	5f 3f       	cpi	r21, 0xFF	; 255
    1096:	71 f0       	breq	.+28     	; 0x10b4 <__fp_splitA+0x1a>
    1098:	47 95       	ror	r20

0000109a <__fp_splitA>:
    109a:	88 0f       	add	r24, r24
    109c:	97 fb       	bst	r25, 7
    109e:	99 1f       	adc	r25, r25
    10a0:	61 f0       	breq	.+24     	; 0x10ba <__fp_splitA+0x20>
    10a2:	9f 3f       	cpi	r25, 0xFF	; 255
    10a4:	79 f0       	breq	.+30     	; 0x10c4 <__fp_splitA+0x2a>
    10a6:	87 95       	ror	r24
    10a8:	08 95       	ret
    10aa:	12 16       	cp	r1, r18
    10ac:	13 06       	cpc	r1, r19
    10ae:	14 06       	cpc	r1, r20
    10b0:	55 1f       	adc	r21, r21
    10b2:	f2 cf       	rjmp	.-28     	; 0x1098 <__fp_split3+0xe>
    10b4:	46 95       	lsr	r20
    10b6:	f1 df       	rcall	.-30     	; 0x109a <__fp_splitA>
    10b8:	08 c0       	rjmp	.+16     	; 0x10ca <__fp_splitA+0x30>
    10ba:	16 16       	cp	r1, r22
    10bc:	17 06       	cpc	r1, r23
    10be:	18 06       	cpc	r1, r24
    10c0:	99 1f       	adc	r25, r25
    10c2:	f1 cf       	rjmp	.-30     	; 0x10a6 <__fp_splitA+0xc>
    10c4:	86 95       	lsr	r24
    10c6:	71 05       	cpc	r23, r1
    10c8:	61 05       	cpc	r22, r1
    10ca:	08 94       	sec
    10cc:	08 95       	ret

000010ce <__fp_zero>:
    10ce:	e8 94       	clt

000010d0 <__fp_szero>:
    10d0:	bb 27       	eor	r27, r27
    10d2:	66 27       	eor	r22, r22
    10d4:	77 27       	eor	r23, r23
    10d6:	cb 01       	movw	r24, r22
    10d8:	97 f9       	bld	r25, 7
    10da:	08 95       	ret

000010dc <vfprintf>:
    10dc:	a1 e1       	ldi	r26, 0x11	; 17
    10de:	b0 e0       	ldi	r27, 0x00	; 0
    10e0:	e4 e7       	ldi	r30, 0x74	; 116
    10e2:	f8 e0       	ldi	r31, 0x08	; 8
    10e4:	0c 94 f5 0b 	jmp	0x17ea	; 0x17ea <__prologue_saves__>
    10e8:	3c 01       	movw	r6, r24
    10ea:	7f 87       	std	Y+15, r23	; 0x0f
    10ec:	6e 87       	std	Y+14, r22	; 0x0e
    10ee:	6a 01       	movw	r12, r20
    10f0:	fc 01       	movw	r30, r24
    10f2:	17 82       	std	Z+7, r1	; 0x07
    10f4:	16 82       	std	Z+6, r1	; 0x06
    10f6:	83 81       	ldd	r24, Z+3	; 0x03
    10f8:	81 fd       	sbrc	r24, 1
    10fa:	03 c0       	rjmp	.+6      	; 0x1102 <vfprintf+0x26>
    10fc:	6f ef       	ldi	r22, 0xFF	; 255
    10fe:	7f ef       	ldi	r23, 0xFF	; 255
    1100:	6f c3       	rjmp	.+1758   	; 0x17e0 <vfprintf+0x704>
    1102:	9e 01       	movw	r18, r28
    1104:	2f 5f       	subi	r18, 0xFF	; 255
    1106:	3f 4f       	sbci	r19, 0xFF	; 255
    1108:	39 8b       	std	Y+17, r19	; 0x11
    110a:	28 8b       	std	Y+16, r18	; 0x10
    110c:	f3 01       	movw	r30, r6
    110e:	23 81       	ldd	r18, Z+3	; 0x03
    1110:	ee 85       	ldd	r30, Y+14	; 0x0e
    1112:	ff 85       	ldd	r31, Y+15	; 0x0f
    1114:	23 fd       	sbrc	r18, 3
    1116:	85 91       	lpm	r24, Z+
    1118:	23 ff       	sbrs	r18, 3
    111a:	81 91       	ld	r24, Z+
    111c:	ff 87       	std	Y+15, r31	; 0x0f
    111e:	ee 87       	std	Y+14, r30	; 0x0e
    1120:	88 23       	and	r24, r24
    1122:	09 f4       	brne	.+2      	; 0x1126 <vfprintf+0x4a>
    1124:	5a c3       	rjmp	.+1716   	; 0x17da <vfprintf+0x6fe>
    1126:	85 32       	cpi	r24, 0x25	; 37
    1128:	51 f4       	brne	.+20     	; 0x113e <vfprintf+0x62>
    112a:	ee 85       	ldd	r30, Y+14	; 0x0e
    112c:	ff 85       	ldd	r31, Y+15	; 0x0f
    112e:	23 fd       	sbrc	r18, 3
    1130:	85 91       	lpm	r24, Z+
    1132:	23 ff       	sbrs	r18, 3
    1134:	81 91       	ld	r24, Z+
    1136:	ff 87       	std	Y+15, r31	; 0x0f
    1138:	ee 87       	std	Y+14, r30	; 0x0e
    113a:	85 32       	cpi	r24, 0x25	; 37
    113c:	29 f4       	brne	.+10     	; 0x1148 <vfprintf+0x6c>
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	b3 01       	movw	r22, r6
    1142:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1146:	e2 cf       	rjmp	.-60     	; 0x110c <vfprintf+0x30>
    1148:	98 2f       	mov	r25, r24
    114a:	10 e0       	ldi	r17, 0x00	; 0
    114c:	88 24       	eor	r8, r8
    114e:	99 24       	eor	r9, r9
    1150:	10 32       	cpi	r17, 0x20	; 32
    1152:	b0 f4       	brcc	.+44     	; 0x1180 <vfprintf+0xa4>
    1154:	9b 32       	cpi	r25, 0x2B	; 43
    1156:	69 f0       	breq	.+26     	; 0x1172 <vfprintf+0x96>
    1158:	9c 32       	cpi	r25, 0x2C	; 44
    115a:	28 f4       	brcc	.+10     	; 0x1166 <vfprintf+0x8a>
    115c:	90 32       	cpi	r25, 0x20	; 32
    115e:	51 f0       	breq	.+20     	; 0x1174 <vfprintf+0x98>
    1160:	93 32       	cpi	r25, 0x23	; 35
    1162:	71 f4       	brne	.+28     	; 0x1180 <vfprintf+0xa4>
    1164:	0b c0       	rjmp	.+22     	; 0x117c <vfprintf+0xa0>
    1166:	9d 32       	cpi	r25, 0x2D	; 45
    1168:	39 f0       	breq	.+14     	; 0x1178 <vfprintf+0x9c>
    116a:	90 33       	cpi	r25, 0x30	; 48
    116c:	49 f4       	brne	.+18     	; 0x1180 <vfprintf+0xa4>
    116e:	11 60       	ori	r17, 0x01	; 1
    1170:	28 c0       	rjmp	.+80     	; 0x11c2 <vfprintf+0xe6>
    1172:	12 60       	ori	r17, 0x02	; 2
    1174:	14 60       	ori	r17, 0x04	; 4
    1176:	25 c0       	rjmp	.+74     	; 0x11c2 <vfprintf+0xe6>
    1178:	18 60       	ori	r17, 0x08	; 8
    117a:	23 c0       	rjmp	.+70     	; 0x11c2 <vfprintf+0xe6>
    117c:	10 61       	ori	r17, 0x10	; 16
    117e:	21 c0       	rjmp	.+66     	; 0x11c2 <vfprintf+0xe6>
    1180:	17 fd       	sbrc	r17, 7
    1182:	2a c0       	rjmp	.+84     	; 0x11d8 <vfprintf+0xfc>
    1184:	89 2f       	mov	r24, r25
    1186:	80 53       	subi	r24, 0x30	; 48
    1188:	8a 30       	cpi	r24, 0x0A	; 10
    118a:	78 f4       	brcc	.+30     	; 0x11aa <vfprintf+0xce>
    118c:	16 ff       	sbrs	r17, 6
    118e:	06 c0       	rjmp	.+12     	; 0x119c <vfprintf+0xc0>
    1190:	fa e0       	ldi	r31, 0x0A	; 10
    1192:	9f 9e       	mul	r9, r31
    1194:	90 2c       	mov	r9, r0
    1196:	11 24       	eor	r1, r1
    1198:	98 0e       	add	r9, r24
    119a:	13 c0       	rjmp	.+38     	; 0x11c2 <vfprintf+0xe6>
    119c:	3a e0       	ldi	r19, 0x0A	; 10
    119e:	83 9e       	mul	r8, r19
    11a0:	80 2c       	mov	r8, r0
    11a2:	11 24       	eor	r1, r1
    11a4:	88 0e       	add	r8, r24
    11a6:	10 62       	ori	r17, 0x20	; 32
    11a8:	0c c0       	rjmp	.+24     	; 0x11c2 <vfprintf+0xe6>
    11aa:	9e 32       	cpi	r25, 0x2E	; 46
    11ac:	21 f4       	brne	.+8      	; 0x11b6 <vfprintf+0xda>
    11ae:	16 fd       	sbrc	r17, 6
    11b0:	14 c3       	rjmp	.+1576   	; 0x17da <vfprintf+0x6fe>
    11b2:	10 64       	ori	r17, 0x40	; 64
    11b4:	06 c0       	rjmp	.+12     	; 0x11c2 <vfprintf+0xe6>
    11b6:	9c 36       	cpi	r25, 0x6C	; 108
    11b8:	11 f4       	brne	.+4      	; 0x11be <vfprintf+0xe2>
    11ba:	10 68       	ori	r17, 0x80	; 128
    11bc:	02 c0       	rjmp	.+4      	; 0x11c2 <vfprintf+0xe6>
    11be:	98 36       	cpi	r25, 0x68	; 104
    11c0:	59 f4       	brne	.+22     	; 0x11d8 <vfprintf+0xfc>
    11c2:	ee 85       	ldd	r30, Y+14	; 0x0e
    11c4:	ff 85       	ldd	r31, Y+15	; 0x0f
    11c6:	23 fd       	sbrc	r18, 3
    11c8:	95 91       	lpm	r25, Z+
    11ca:	23 ff       	sbrs	r18, 3
    11cc:	91 91       	ld	r25, Z+
    11ce:	ff 87       	std	Y+15, r31	; 0x0f
    11d0:	ee 87       	std	Y+14, r30	; 0x0e
    11d2:	99 23       	and	r25, r25
    11d4:	09 f0       	breq	.+2      	; 0x11d8 <vfprintf+0xfc>
    11d6:	bc cf       	rjmp	.-136    	; 0x1150 <vfprintf+0x74>
    11d8:	89 2f       	mov	r24, r25
    11da:	85 54       	subi	r24, 0x45	; 69
    11dc:	83 30       	cpi	r24, 0x03	; 3
    11de:	20 f4       	brcc	.+8      	; 0x11e8 <vfprintf+0x10c>
    11e0:	81 2f       	mov	r24, r17
    11e2:	80 61       	ori	r24, 0x10	; 16
    11e4:	90 5e       	subi	r25, 0xE0	; 224
    11e6:	07 c0       	rjmp	.+14     	; 0x11f6 <vfprintf+0x11a>
    11e8:	89 2f       	mov	r24, r25
    11ea:	85 56       	subi	r24, 0x65	; 101
    11ec:	83 30       	cpi	r24, 0x03	; 3
    11ee:	08 f0       	brcs	.+2      	; 0x11f2 <vfprintf+0x116>
    11f0:	9f c1       	rjmp	.+830    	; 0x1530 <vfprintf+0x454>
    11f2:	81 2f       	mov	r24, r17
    11f4:	8f 7e       	andi	r24, 0xEF	; 239
    11f6:	86 fd       	sbrc	r24, 6
    11f8:	02 c0       	rjmp	.+4      	; 0x11fe <vfprintf+0x122>
    11fa:	76 e0       	ldi	r23, 0x06	; 6
    11fc:	97 2e       	mov	r9, r23
    11fe:	6f e3       	ldi	r22, 0x3F	; 63
    1200:	f6 2e       	mov	r15, r22
    1202:	f8 22       	and	r15, r24
    1204:	95 36       	cpi	r25, 0x65	; 101
    1206:	19 f4       	brne	.+6      	; 0x120e <vfprintf+0x132>
    1208:	f0 e4       	ldi	r31, 0x40	; 64
    120a:	ff 2a       	or	r15, r31
    120c:	07 c0       	rjmp	.+14     	; 0x121c <vfprintf+0x140>
    120e:	96 36       	cpi	r25, 0x66	; 102
    1210:	19 f4       	brne	.+6      	; 0x1218 <vfprintf+0x13c>
    1212:	20 e8       	ldi	r18, 0x80	; 128
    1214:	f2 2a       	or	r15, r18
    1216:	02 c0       	rjmp	.+4      	; 0x121c <vfprintf+0x140>
    1218:	91 10       	cpse	r9, r1
    121a:	9a 94       	dec	r9
    121c:	f7 fe       	sbrs	r15, 7
    121e:	0a c0       	rjmp	.+20     	; 0x1234 <vfprintf+0x158>
    1220:	3b e3       	ldi	r19, 0x3B	; 59
    1222:	39 15       	cp	r19, r9
    1224:	18 f4       	brcc	.+6      	; 0x122c <vfprintf+0x150>
    1226:	5c e3       	ldi	r21, 0x3C	; 60
    1228:	b5 2e       	mov	r11, r21
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <vfprintf+0x154>
    122c:	b9 2c       	mov	r11, r9
    122e:	b3 94       	inc	r11
    1230:	27 e0       	ldi	r18, 0x07	; 7
    1232:	09 c0       	rjmp	.+18     	; 0x1246 <vfprintf+0x16a>
    1234:	47 e0       	ldi	r20, 0x07	; 7
    1236:	49 15       	cp	r20, r9
    1238:	20 f4       	brcc	.+8      	; 0x1242 <vfprintf+0x166>
    123a:	bb 24       	eor	r11, r11
    123c:	47 e0       	ldi	r20, 0x07	; 7
    123e:	94 2e       	mov	r9, r20
    1240:	f7 cf       	rjmp	.-18     	; 0x1230 <vfprintf+0x154>
    1242:	29 2d       	mov	r18, r9
    1244:	bb 24       	eor	r11, r11
    1246:	c6 01       	movw	r24, r12
    1248:	04 96       	adiw	r24, 0x04	; 4
    124a:	9d 87       	std	Y+13, r25	; 0x0d
    124c:	8c 87       	std	Y+12, r24	; 0x0c
    124e:	f6 01       	movw	r30, r12
    1250:	60 81       	ld	r22, Z
    1252:	71 81       	ldd	r23, Z+1	; 0x01
    1254:	82 81       	ldd	r24, Z+2	; 0x02
    1256:	93 81       	ldd	r25, Z+3	; 0x03
    1258:	ae 01       	movw	r20, r28
    125a:	4f 5f       	subi	r20, 0xFF	; 255
    125c:	5f 4f       	sbci	r21, 0xFF	; 255
    125e:	0b 2d       	mov	r16, r11
    1260:	0e 94 2c 0c 	call	0x1858	; 0x1858 <__ftoa_engine>
    1264:	6c 01       	movw	r12, r24
    1266:	09 81       	ldd	r16, Y+1	; 0x01
    1268:	20 2e       	mov	r2, r16
    126a:	33 24       	eor	r3, r3
    126c:	00 ff       	sbrs	r16, 0
    126e:	04 c0       	rjmp	.+8      	; 0x1278 <vfprintf+0x19c>
    1270:	03 fd       	sbrc	r16, 3
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <vfprintf+0x19c>
    1274:	1d e2       	ldi	r17, 0x2D	; 45
    1276:	09 c0       	rjmp	.+18     	; 0x128a <vfprintf+0x1ae>
    1278:	f1 fe       	sbrs	r15, 1
    127a:	02 c0       	rjmp	.+4      	; 0x1280 <vfprintf+0x1a4>
    127c:	1b e2       	ldi	r17, 0x2B	; 43
    127e:	05 c0       	rjmp	.+10     	; 0x128a <vfprintf+0x1ae>
    1280:	f2 fc       	sbrc	r15, 2
    1282:	02 c0       	rjmp	.+4      	; 0x1288 <vfprintf+0x1ac>
    1284:	10 e0       	ldi	r17, 0x00	; 0
    1286:	01 c0       	rjmp	.+2      	; 0x128a <vfprintf+0x1ae>
    1288:	10 e2       	ldi	r17, 0x20	; 32
    128a:	c1 01       	movw	r24, r2
    128c:	8c 70       	andi	r24, 0x0C	; 12
    128e:	90 70       	andi	r25, 0x00	; 0
    1290:	89 2b       	or	r24, r25
    1292:	b9 f1       	breq	.+110    	; 0x1302 <vfprintf+0x226>
    1294:	11 23       	and	r17, r17
    1296:	11 f4       	brne	.+4      	; 0x129c <vfprintf+0x1c0>
    1298:	83 e0       	ldi	r24, 0x03	; 3
    129a:	01 c0       	rjmp	.+2      	; 0x129e <vfprintf+0x1c2>
    129c:	84 e0       	ldi	r24, 0x04	; 4
    129e:	88 15       	cp	r24, r8
    12a0:	10 f0       	brcs	.+4      	; 0x12a6 <vfprintf+0x1ca>
    12a2:	88 24       	eor	r8, r8
    12a4:	0a c0       	rjmp	.+20     	; 0x12ba <vfprintf+0x1de>
    12a6:	88 1a       	sub	r8, r24
    12a8:	f3 fc       	sbrc	r15, 3
    12aa:	07 c0       	rjmp	.+14     	; 0x12ba <vfprintf+0x1de>
    12ac:	80 e2       	ldi	r24, 0x20	; 32
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	b3 01       	movw	r22, r6
    12b2:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    12b6:	8a 94       	dec	r8
    12b8:	c9 f7       	brne	.-14     	; 0x12ac <vfprintf+0x1d0>
    12ba:	11 23       	and	r17, r17
    12bc:	29 f0       	breq	.+10     	; 0x12c8 <vfprintf+0x1ec>
    12be:	81 2f       	mov	r24, r17
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	b3 01       	movw	r22, r6
    12c4:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    12c8:	23 fe       	sbrs	r2, 3
    12ca:	03 c0       	rjmp	.+6      	; 0x12d2 <vfprintf+0x1f6>
    12cc:	08 e6       	ldi	r16, 0x68	; 104
    12ce:	10 e0       	ldi	r17, 0x00	; 0
    12d0:	0e c0       	rjmp	.+28     	; 0x12ee <vfprintf+0x212>
    12d2:	0c e6       	ldi	r16, 0x6C	; 108
    12d4:	10 e0       	ldi	r17, 0x00	; 0
    12d6:	0b c0       	rjmp	.+22     	; 0x12ee <vfprintf+0x212>
    12d8:	e1 14       	cp	r14, r1
    12da:	f1 04       	cpc	r15, r1
    12dc:	09 f0       	breq	.+2      	; 0x12e0 <vfprintf+0x204>
    12de:	80 52       	subi	r24, 0x20	; 32
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	b3 01       	movw	r22, r6
    12e4:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    12e8:	0f 5f       	subi	r16, 0xFF	; 255
    12ea:	1f 4f       	sbci	r17, 0xFF	; 255
    12ec:	05 c0       	rjmp	.+10     	; 0x12f8 <vfprintf+0x21c>
    12ee:	ef 2c       	mov	r14, r15
    12f0:	ff 24       	eor	r15, r15
    12f2:	f0 e1       	ldi	r31, 0x10	; 16
    12f4:	ef 22       	and	r14, r31
    12f6:	ff 24       	eor	r15, r15
    12f8:	f8 01       	movw	r30, r16
    12fa:	84 91       	lpm	r24, Z+
    12fc:	88 23       	and	r24, r24
    12fe:	61 f7       	brne	.-40     	; 0x12d8 <vfprintf+0x1fc>
    1300:	14 c1       	rjmp	.+552    	; 0x152a <vfprintf+0x44e>
    1302:	f7 fe       	sbrs	r15, 7
    1304:	12 c0       	rjmp	.+36     	; 0x132a <vfprintf+0x24e>
    1306:	bc 0c       	add	r11, r12
    1308:	24 fe       	sbrs	r2, 4
    130a:	04 c0       	rjmp	.+8      	; 0x1314 <vfprintf+0x238>
    130c:	8a 81       	ldd	r24, Y+2	; 0x02
    130e:	81 33       	cpi	r24, 0x31	; 49
    1310:	09 f4       	brne	.+2      	; 0x1314 <vfprintf+0x238>
    1312:	ba 94       	dec	r11
    1314:	1b 14       	cp	r1, r11
    1316:	1c f0       	brlt	.+6      	; 0x131e <vfprintf+0x242>
    1318:	bb 24       	eor	r11, r11
    131a:	b3 94       	inc	r11
    131c:	2d c0       	rjmp	.+90     	; 0x1378 <vfprintf+0x29c>
    131e:	f8 e0       	ldi	r31, 0x08	; 8
    1320:	fb 15       	cp	r31, r11
    1322:	50 f5       	brcc	.+84     	; 0x1378 <vfprintf+0x29c>
    1324:	38 e0       	ldi	r19, 0x08	; 8
    1326:	b3 2e       	mov	r11, r19
    1328:	27 c0       	rjmp	.+78     	; 0x1378 <vfprintf+0x29c>
    132a:	f6 fc       	sbrc	r15, 6
    132c:	25 c0       	rjmp	.+74     	; 0x1378 <vfprintf+0x29c>
    132e:	89 2d       	mov	r24, r9
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	8c 15       	cp	r24, r12
    1334:	9d 05       	cpc	r25, r13
    1336:	4c f0       	brlt	.+18     	; 0x134a <vfprintf+0x26e>
    1338:	2c ef       	ldi	r18, 0xFC	; 252
    133a:	c2 16       	cp	r12, r18
    133c:	2f ef       	ldi	r18, 0xFF	; 255
    133e:	d2 06       	cpc	r13, r18
    1340:	24 f0       	brlt	.+8      	; 0x134a <vfprintf+0x26e>
    1342:	30 e8       	ldi	r19, 0x80	; 128
    1344:	f3 2a       	or	r15, r19
    1346:	01 c0       	rjmp	.+2      	; 0x134a <vfprintf+0x26e>
    1348:	9a 94       	dec	r9
    134a:	99 20       	and	r9, r9
    134c:	49 f0       	breq	.+18     	; 0x1360 <vfprintf+0x284>
    134e:	e2 e0       	ldi	r30, 0x02	; 2
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	ec 0f       	add	r30, r28
    1354:	fd 1f       	adc	r31, r29
    1356:	e9 0d       	add	r30, r9
    1358:	f1 1d       	adc	r31, r1
    135a:	80 81       	ld	r24, Z
    135c:	80 33       	cpi	r24, 0x30	; 48
    135e:	a1 f3       	breq	.-24     	; 0x1348 <vfprintf+0x26c>
    1360:	f7 fe       	sbrs	r15, 7
    1362:	0a c0       	rjmp	.+20     	; 0x1378 <vfprintf+0x29c>
    1364:	b9 2c       	mov	r11, r9
    1366:	b3 94       	inc	r11
    1368:	89 2d       	mov	r24, r9
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	c8 16       	cp	r12, r24
    136e:	d9 06       	cpc	r13, r25
    1370:	14 f0       	brlt	.+4      	; 0x1376 <vfprintf+0x29a>
    1372:	99 24       	eor	r9, r9
    1374:	01 c0       	rjmp	.+2      	; 0x1378 <vfprintf+0x29c>
    1376:	9c 18       	sub	r9, r12
    1378:	f7 fc       	sbrc	r15, 7
    137a:	03 c0       	rjmp	.+6      	; 0x1382 <vfprintf+0x2a6>
    137c:	25 e0       	ldi	r18, 0x05	; 5
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	09 c0       	rjmp	.+18     	; 0x1394 <vfprintf+0x2b8>
    1382:	1c 14       	cp	r1, r12
    1384:	1d 04       	cpc	r1, r13
    1386:	1c f0       	brlt	.+6      	; 0x138e <vfprintf+0x2b2>
    1388:	21 e0       	ldi	r18, 0x01	; 1
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	03 c0       	rjmp	.+6      	; 0x1394 <vfprintf+0x2b8>
    138e:	96 01       	movw	r18, r12
    1390:	2f 5f       	subi	r18, 0xFF	; 255
    1392:	3f 4f       	sbci	r19, 0xFF	; 255
    1394:	11 23       	and	r17, r17
    1396:	11 f0       	breq	.+4      	; 0x139c <vfprintf+0x2c0>
    1398:	2f 5f       	subi	r18, 0xFF	; 255
    139a:	3f 4f       	sbci	r19, 0xFF	; 255
    139c:	99 20       	and	r9, r9
    139e:	29 f0       	breq	.+10     	; 0x13aa <vfprintf+0x2ce>
    13a0:	89 2d       	mov	r24, r9
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	01 96       	adiw	r24, 0x01	; 1
    13a6:	28 0f       	add	r18, r24
    13a8:	39 1f       	adc	r19, r25
    13aa:	88 2d       	mov	r24, r8
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	28 17       	cp	r18, r24
    13b0:	39 07       	cpc	r19, r25
    13b2:	14 f0       	brlt	.+4      	; 0x13b8 <vfprintf+0x2dc>
    13b4:	88 24       	eor	r8, r8
    13b6:	01 c0       	rjmp	.+2      	; 0x13ba <vfprintf+0x2de>
    13b8:	82 1a       	sub	r8, r18
    13ba:	4f 2c       	mov	r4, r15
    13bc:	55 24       	eor	r5, r5
    13be:	c2 01       	movw	r24, r4
    13c0:	89 70       	andi	r24, 0x09	; 9
    13c2:	90 70       	andi	r25, 0x00	; 0
    13c4:	89 2b       	or	r24, r25
    13c6:	39 f0       	breq	.+14     	; 0x13d6 <vfprintf+0x2fa>
    13c8:	08 c0       	rjmp	.+16     	; 0x13da <vfprintf+0x2fe>
    13ca:	80 e2       	ldi	r24, 0x20	; 32
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	b3 01       	movw	r22, r6
    13d0:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    13d4:	8a 94       	dec	r8
    13d6:	88 20       	and	r8, r8
    13d8:	c1 f7       	brne	.-16     	; 0x13ca <vfprintf+0x2ee>
    13da:	11 23       	and	r17, r17
    13dc:	29 f0       	breq	.+10     	; 0x13e8 <vfprintf+0x30c>
    13de:	81 2f       	mov	r24, r17
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	b3 01       	movw	r22, r6
    13e4:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    13e8:	43 fe       	sbrs	r4, 3
    13ea:	07 c0       	rjmp	.+14     	; 0x13fa <vfprintf+0x31e>
    13ec:	08 c0       	rjmp	.+16     	; 0x13fe <vfprintf+0x322>
    13ee:	80 e3       	ldi	r24, 0x30	; 48
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	b3 01       	movw	r22, r6
    13f4:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    13f8:	8a 94       	dec	r8
    13fa:	88 20       	and	r8, r8
    13fc:	c1 f7       	brne	.-16     	; 0x13ee <vfprintf+0x312>
    13fe:	f7 fe       	sbrs	r15, 7
    1400:	46 c0       	rjmp	.+140    	; 0x148e <vfprintf+0x3b2>
    1402:	86 01       	movw	r16, r12
    1404:	d7 fe       	sbrs	r13, 7
    1406:	02 c0       	rjmp	.+4      	; 0x140c <vfprintf+0x330>
    1408:	00 e0       	ldi	r16, 0x00	; 0
    140a:	10 e0       	ldi	r17, 0x00	; 0
    140c:	76 01       	movw	r14, r12
    140e:	08 94       	sec
    1410:	e1 1c       	adc	r14, r1
    1412:	f1 1c       	adc	r15, r1
    1414:	e0 1a       	sub	r14, r16
    1416:	f1 0a       	sbc	r15, r17
    1418:	41 e0       	ldi	r20, 0x01	; 1
    141a:	50 e0       	ldi	r21, 0x00	; 0
    141c:	4c 0f       	add	r20, r28
    141e:	5d 1f       	adc	r21, r29
    1420:	e4 0e       	add	r14, r20
    1422:	f5 1e       	adc	r15, r21
    1424:	26 01       	movw	r4, r12
    1426:	4b 18       	sub	r4, r11
    1428:	51 08       	sbc	r5, r1
    142a:	89 2d       	mov	r24, r9
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	aa 24       	eor	r10, r10
    1430:	bb 24       	eor	r11, r11
    1432:	a8 1a       	sub	r10, r24
    1434:	b9 0a       	sbc	r11, r25
    1436:	5f ef       	ldi	r21, 0xFF	; 255
    1438:	0f 3f       	cpi	r16, 0xFF	; 255
    143a:	15 07       	cpc	r17, r21
    143c:	29 f4       	brne	.+10     	; 0x1448 <vfprintf+0x36c>
    143e:	8e e2       	ldi	r24, 0x2E	; 46
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	b3 01       	movw	r22, r6
    1444:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1448:	c0 16       	cp	r12, r16
    144a:	d1 06       	cpc	r13, r17
    144c:	34 f0       	brlt	.+12     	; 0x145a <vfprintf+0x37e>
    144e:	40 16       	cp	r4, r16
    1450:	51 06       	cpc	r5, r17
    1452:	1c f4       	brge	.+6      	; 0x145a <vfprintf+0x37e>
    1454:	f7 01       	movw	r30, r14
    1456:	80 81       	ld	r24, Z
    1458:	01 c0       	rjmp	.+2      	; 0x145c <vfprintf+0x380>
    145a:	80 e3       	ldi	r24, 0x30	; 48
    145c:	01 50       	subi	r16, 0x01	; 1
    145e:	10 40       	sbci	r17, 0x00	; 0
    1460:	08 94       	sec
    1462:	e1 1c       	adc	r14, r1
    1464:	f1 1c       	adc	r15, r1
    1466:	0a 15       	cp	r16, r10
    1468:	1b 05       	cpc	r17, r11
    146a:	2c f0       	brlt	.+10     	; 0x1476 <vfprintf+0x39a>
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	b3 01       	movw	r22, r6
    1470:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1474:	e0 cf       	rjmp	.-64     	; 0x1436 <vfprintf+0x35a>
    1476:	0c 15       	cp	r16, r12
    1478:	1d 05       	cpc	r17, r13
    147a:	39 f4       	brne	.+14     	; 0x148a <vfprintf+0x3ae>
    147c:	9a 81       	ldd	r25, Y+2	; 0x02
    147e:	96 33       	cpi	r25, 0x36	; 54
    1480:	18 f4       	brcc	.+6      	; 0x1488 <vfprintf+0x3ac>
    1482:	95 33       	cpi	r25, 0x35	; 53
    1484:	11 f4       	brne	.+4      	; 0x148a <vfprintf+0x3ae>
    1486:	24 fe       	sbrs	r2, 4
    1488:	81 e3       	ldi	r24, 0x31	; 49
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	4b c0       	rjmp	.+150    	; 0x1524 <vfprintf+0x448>
    148e:	8a 81       	ldd	r24, Y+2	; 0x02
    1490:	81 33       	cpi	r24, 0x31	; 49
    1492:	09 f0       	breq	.+2      	; 0x1496 <vfprintf+0x3ba>
    1494:	0f 7e       	andi	r16, 0xEF	; 239
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	b3 01       	movw	r22, r6
    149a:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    149e:	99 20       	and	r9, r9
    14a0:	a1 f0       	breq	.+40     	; 0x14ca <vfprintf+0x3ee>
    14a2:	8e e2       	ldi	r24, 0x2E	; 46
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	b3 01       	movw	r22, r6
    14a8:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    14ac:	12 e0       	ldi	r17, 0x02	; 2
    14ae:	e1 e0       	ldi	r30, 0x01	; 1
    14b0:	f0 e0       	ldi	r31, 0x00	; 0
    14b2:	ec 0f       	add	r30, r28
    14b4:	fd 1f       	adc	r31, r29
    14b6:	e1 0f       	add	r30, r17
    14b8:	f1 1d       	adc	r31, r1
    14ba:	1f 5f       	subi	r17, 0xFF	; 255
    14bc:	80 81       	ld	r24, Z
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	b3 01       	movw	r22, r6
    14c2:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    14c6:	9a 94       	dec	r9
    14c8:	91 f7       	brne	.-28     	; 0x14ae <vfprintf+0x3d2>
    14ca:	44 fc       	sbrc	r4, 4
    14cc:	03 c0       	rjmp	.+6      	; 0x14d4 <vfprintf+0x3f8>
    14ce:	85 e6       	ldi	r24, 0x65	; 101
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	02 c0       	rjmp	.+4      	; 0x14d8 <vfprintf+0x3fc>
    14d4:	85 e4       	ldi	r24, 0x45	; 69
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	b3 01       	movw	r22, r6
    14da:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    14de:	d7 fc       	sbrc	r13, 7
    14e0:	05 c0       	rjmp	.+10     	; 0x14ec <vfprintf+0x410>
    14e2:	c1 14       	cp	r12, r1
    14e4:	d1 04       	cpc	r13, r1
    14e6:	41 f4       	brne	.+16     	; 0x14f8 <vfprintf+0x41c>
    14e8:	04 ff       	sbrs	r16, 4
    14ea:	06 c0       	rjmp	.+12     	; 0x14f8 <vfprintf+0x41c>
    14ec:	d0 94       	com	r13
    14ee:	c1 94       	neg	r12
    14f0:	d1 08       	sbc	r13, r1
    14f2:	d3 94       	inc	r13
    14f4:	8d e2       	ldi	r24, 0x2D	; 45
    14f6:	01 c0       	rjmp	.+2      	; 0x14fa <vfprintf+0x41e>
    14f8:	8b e2       	ldi	r24, 0x2B	; 43
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	b3 01       	movw	r22, r6
    14fe:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1502:	80 e3       	ldi	r24, 0x30	; 48
    1504:	05 c0       	rjmp	.+10     	; 0x1510 <vfprintf+0x434>
    1506:	8f 5f       	subi	r24, 0xFF	; 255
    1508:	26 ef       	ldi	r18, 0xF6	; 246
    150a:	3f ef       	ldi	r19, 0xFF	; 255
    150c:	c2 0e       	add	r12, r18
    150e:	d3 1e       	adc	r13, r19
    1510:	3a e0       	ldi	r19, 0x0A	; 10
    1512:	c3 16       	cp	r12, r19
    1514:	d1 04       	cpc	r13, r1
    1516:	bc f7       	brge	.-18     	; 0x1506 <vfprintf+0x42a>
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	b3 01       	movw	r22, r6
    151c:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1520:	c6 01       	movw	r24, r12
    1522:	c0 96       	adiw	r24, 0x30	; 48
    1524:	b3 01       	movw	r22, r6
    1526:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    152a:	cc 84       	ldd	r12, Y+12	; 0x0c
    152c:	dd 84       	ldd	r13, Y+13	; 0x0d
    152e:	52 c1       	rjmp	.+676    	; 0x17d4 <vfprintf+0x6f8>
    1530:	93 36       	cpi	r25, 0x63	; 99
    1532:	31 f0       	breq	.+12     	; 0x1540 <vfprintf+0x464>
    1534:	93 37       	cpi	r25, 0x73	; 115
    1536:	99 f0       	breq	.+38     	; 0x155e <vfprintf+0x482>
    1538:	93 35       	cpi	r25, 0x53	; 83
    153a:	09 f0       	breq	.+2      	; 0x153e <vfprintf+0x462>
    153c:	59 c0       	rjmp	.+178    	; 0x15f0 <vfprintf+0x514>
    153e:	23 c0       	rjmp	.+70     	; 0x1586 <vfprintf+0x4aa>
    1540:	f6 01       	movw	r30, r12
    1542:	80 81       	ld	r24, Z
    1544:	89 83       	std	Y+1, r24	; 0x01
    1546:	5e 01       	movw	r10, r28
    1548:	08 94       	sec
    154a:	a1 1c       	adc	r10, r1
    154c:	b1 1c       	adc	r11, r1
    154e:	22 e0       	ldi	r18, 0x02	; 2
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	c2 0e       	add	r12, r18
    1554:	d3 1e       	adc	r13, r19
    1556:	21 e0       	ldi	r18, 0x01	; 1
    1558:	e2 2e       	mov	r14, r18
    155a:	f1 2c       	mov	r15, r1
    155c:	12 c0       	rjmp	.+36     	; 0x1582 <vfprintf+0x4a6>
    155e:	f6 01       	movw	r30, r12
    1560:	a0 80       	ld	r10, Z
    1562:	b1 80       	ldd	r11, Z+1	; 0x01
    1564:	16 fd       	sbrc	r17, 6
    1566:	03 c0       	rjmp	.+6      	; 0x156e <vfprintf+0x492>
    1568:	6f ef       	ldi	r22, 0xFF	; 255
    156a:	7f ef       	ldi	r23, 0xFF	; 255
    156c:	02 c0       	rjmp	.+4      	; 0x1572 <vfprintf+0x496>
    156e:	69 2d       	mov	r22, r9
    1570:	70 e0       	ldi	r23, 0x00	; 0
    1572:	22 e0       	ldi	r18, 0x02	; 2
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	c2 0e       	add	r12, r18
    1578:	d3 1e       	adc	r13, r19
    157a:	c5 01       	movw	r24, r10
    157c:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <strnlen>
    1580:	7c 01       	movw	r14, r24
    1582:	1f 77       	andi	r17, 0x7F	; 127
    1584:	13 c0       	rjmp	.+38     	; 0x15ac <vfprintf+0x4d0>
    1586:	f6 01       	movw	r30, r12
    1588:	a0 80       	ld	r10, Z
    158a:	b1 80       	ldd	r11, Z+1	; 0x01
    158c:	16 fd       	sbrc	r17, 6
    158e:	03 c0       	rjmp	.+6      	; 0x1596 <vfprintf+0x4ba>
    1590:	6f ef       	ldi	r22, 0xFF	; 255
    1592:	7f ef       	ldi	r23, 0xFF	; 255
    1594:	02 c0       	rjmp	.+4      	; 0x159a <vfprintf+0x4be>
    1596:	69 2d       	mov	r22, r9
    1598:	70 e0       	ldi	r23, 0x00	; 0
    159a:	22 e0       	ldi	r18, 0x02	; 2
    159c:	30 e0       	ldi	r19, 0x00	; 0
    159e:	c2 0e       	add	r12, r18
    15a0:	d3 1e       	adc	r13, r19
    15a2:	c5 01       	movw	r24, r10
    15a4:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <strnlen_P>
    15a8:	7c 01       	movw	r14, r24
    15aa:	10 68       	ori	r17, 0x80	; 128
    15ac:	13 ff       	sbrs	r17, 3
    15ae:	07 c0       	rjmp	.+14     	; 0x15be <vfprintf+0x4e2>
    15b0:	1b c0       	rjmp	.+54     	; 0x15e8 <vfprintf+0x50c>
    15b2:	80 e2       	ldi	r24, 0x20	; 32
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	b3 01       	movw	r22, r6
    15b8:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    15bc:	8a 94       	dec	r8
    15be:	88 2d       	mov	r24, r8
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	e8 16       	cp	r14, r24
    15c4:	f9 06       	cpc	r15, r25
    15c6:	a8 f3       	brcs	.-22     	; 0x15b2 <vfprintf+0x4d6>
    15c8:	0f c0       	rjmp	.+30     	; 0x15e8 <vfprintf+0x50c>
    15ca:	f5 01       	movw	r30, r10
    15cc:	17 fd       	sbrc	r17, 7
    15ce:	85 91       	lpm	r24, Z+
    15d0:	17 ff       	sbrs	r17, 7
    15d2:	81 91       	ld	r24, Z+
    15d4:	5f 01       	movw	r10, r30
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	b3 01       	movw	r22, r6
    15da:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    15de:	81 10       	cpse	r8, r1
    15e0:	8a 94       	dec	r8
    15e2:	08 94       	sec
    15e4:	e1 08       	sbc	r14, r1
    15e6:	f1 08       	sbc	r15, r1
    15e8:	e1 14       	cp	r14, r1
    15ea:	f1 04       	cpc	r15, r1
    15ec:	71 f7       	brne	.-36     	; 0x15ca <vfprintf+0x4ee>
    15ee:	f2 c0       	rjmp	.+484    	; 0x17d4 <vfprintf+0x6f8>
    15f0:	94 36       	cpi	r25, 0x64	; 100
    15f2:	11 f0       	breq	.+4      	; 0x15f8 <vfprintf+0x51c>
    15f4:	99 36       	cpi	r25, 0x69	; 105
    15f6:	89 f5       	brne	.+98     	; 0x165a <vfprintf+0x57e>
    15f8:	17 ff       	sbrs	r17, 7
    15fa:	08 c0       	rjmp	.+16     	; 0x160c <vfprintf+0x530>
    15fc:	f6 01       	movw	r30, r12
    15fe:	20 81       	ld	r18, Z
    1600:	31 81       	ldd	r19, Z+1	; 0x01
    1602:	42 81       	ldd	r20, Z+2	; 0x02
    1604:	53 81       	ldd	r21, Z+3	; 0x03
    1606:	84 e0       	ldi	r24, 0x04	; 4
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	0a c0       	rjmp	.+20     	; 0x1620 <vfprintf+0x544>
    160c:	f6 01       	movw	r30, r12
    160e:	80 81       	ld	r24, Z
    1610:	91 81       	ldd	r25, Z+1	; 0x01
    1612:	9c 01       	movw	r18, r24
    1614:	44 27       	eor	r20, r20
    1616:	37 fd       	sbrc	r19, 7
    1618:	40 95       	com	r20
    161a:	54 2f       	mov	r21, r20
    161c:	82 e0       	ldi	r24, 0x02	; 2
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	c8 0e       	add	r12, r24
    1622:	d9 1e       	adc	r13, r25
    1624:	9f e6       	ldi	r25, 0x6F	; 111
    1626:	f9 2e       	mov	r15, r25
    1628:	f1 22       	and	r15, r17
    162a:	57 ff       	sbrs	r21, 7
    162c:	09 c0       	rjmp	.+18     	; 0x1640 <vfprintf+0x564>
    162e:	50 95       	com	r21
    1630:	40 95       	com	r20
    1632:	30 95       	com	r19
    1634:	21 95       	neg	r18
    1636:	3f 4f       	sbci	r19, 0xFF	; 255
    1638:	4f 4f       	sbci	r20, 0xFF	; 255
    163a:	5f 4f       	sbci	r21, 0xFF	; 255
    163c:	90 e8       	ldi	r25, 0x80	; 128
    163e:	f9 2a       	or	r15, r25
    1640:	ca 01       	movw	r24, r20
    1642:	b9 01       	movw	r22, r18
    1644:	ae 01       	movw	r20, r28
    1646:	4f 5f       	subi	r20, 0xFF	; 255
    1648:	5f 4f       	sbci	r21, 0xFF	; 255
    164a:	2a e0       	ldi	r18, 0x0A	; 10
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__ultoa_invert>
    1652:	e8 2e       	mov	r14, r24
    1654:	e8 89       	ldd	r30, Y+16	; 0x10
    1656:	ee 1a       	sub	r14, r30
    1658:	41 c0       	rjmp	.+130    	; 0x16dc <vfprintf+0x600>
    165a:	95 37       	cpi	r25, 0x75	; 117
    165c:	21 f4       	brne	.+8      	; 0x1666 <vfprintf+0x58a>
    165e:	1f 7e       	andi	r17, 0xEF	; 239
    1660:	2a e0       	ldi	r18, 0x0A	; 10
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	1c c0       	rjmp	.+56     	; 0x169e <vfprintf+0x5c2>
    1666:	19 7f       	andi	r17, 0xF9	; 249
    1668:	9f 36       	cpi	r25, 0x6F	; 111
    166a:	61 f0       	breq	.+24     	; 0x1684 <vfprintf+0x5a8>
    166c:	90 37       	cpi	r25, 0x70	; 112
    166e:	20 f4       	brcc	.+8      	; 0x1678 <vfprintf+0x59c>
    1670:	98 35       	cpi	r25, 0x58	; 88
    1672:	09 f0       	breq	.+2      	; 0x1676 <vfprintf+0x59a>
    1674:	b2 c0       	rjmp	.+356    	; 0x17da <vfprintf+0x6fe>
    1676:	0f c0       	rjmp	.+30     	; 0x1696 <vfprintf+0x5ba>
    1678:	90 37       	cpi	r25, 0x70	; 112
    167a:	39 f0       	breq	.+14     	; 0x168a <vfprintf+0x5ae>
    167c:	98 37       	cpi	r25, 0x78	; 120
    167e:	09 f0       	breq	.+2      	; 0x1682 <vfprintf+0x5a6>
    1680:	ac c0       	rjmp	.+344    	; 0x17da <vfprintf+0x6fe>
    1682:	04 c0       	rjmp	.+8      	; 0x168c <vfprintf+0x5b0>
    1684:	28 e0       	ldi	r18, 0x08	; 8
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	0a c0       	rjmp	.+20     	; 0x169e <vfprintf+0x5c2>
    168a:	10 61       	ori	r17, 0x10	; 16
    168c:	14 fd       	sbrc	r17, 4
    168e:	14 60       	ori	r17, 0x04	; 4
    1690:	20 e1       	ldi	r18, 0x10	; 16
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	04 c0       	rjmp	.+8      	; 0x169e <vfprintf+0x5c2>
    1696:	14 fd       	sbrc	r17, 4
    1698:	16 60       	ori	r17, 0x06	; 6
    169a:	20 e1       	ldi	r18, 0x10	; 16
    169c:	32 e0       	ldi	r19, 0x02	; 2
    169e:	17 ff       	sbrs	r17, 7
    16a0:	08 c0       	rjmp	.+16     	; 0x16b2 <vfprintf+0x5d6>
    16a2:	f6 01       	movw	r30, r12
    16a4:	60 81       	ld	r22, Z
    16a6:	71 81       	ldd	r23, Z+1	; 0x01
    16a8:	82 81       	ldd	r24, Z+2	; 0x02
    16aa:	93 81       	ldd	r25, Z+3	; 0x03
    16ac:	44 e0       	ldi	r20, 0x04	; 4
    16ae:	50 e0       	ldi	r21, 0x00	; 0
    16b0:	08 c0       	rjmp	.+16     	; 0x16c2 <vfprintf+0x5e6>
    16b2:	f6 01       	movw	r30, r12
    16b4:	80 81       	ld	r24, Z
    16b6:	91 81       	ldd	r25, Z+1	; 0x01
    16b8:	bc 01       	movw	r22, r24
    16ba:	80 e0       	ldi	r24, 0x00	; 0
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	42 e0       	ldi	r20, 0x02	; 2
    16c0:	50 e0       	ldi	r21, 0x00	; 0
    16c2:	c4 0e       	add	r12, r20
    16c4:	d5 1e       	adc	r13, r21
    16c6:	ae 01       	movw	r20, r28
    16c8:	4f 5f       	subi	r20, 0xFF	; 255
    16ca:	5f 4f       	sbci	r21, 0xFF	; 255
    16cc:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__ultoa_invert>
    16d0:	e8 2e       	mov	r14, r24
    16d2:	58 89       	ldd	r21, Y+16	; 0x10
    16d4:	e5 1a       	sub	r14, r21
    16d6:	8f e7       	ldi	r24, 0x7F	; 127
    16d8:	f8 2e       	mov	r15, r24
    16da:	f1 22       	and	r15, r17
    16dc:	f6 fe       	sbrs	r15, 6
    16de:	0b c0       	rjmp	.+22     	; 0x16f6 <vfprintf+0x61a>
    16e0:	8e ef       	ldi	r24, 0xFE	; 254
    16e2:	f8 22       	and	r15, r24
    16e4:	e9 14       	cp	r14, r9
    16e6:	38 f4       	brcc	.+14     	; 0x16f6 <vfprintf+0x61a>
    16e8:	f4 fe       	sbrs	r15, 4
    16ea:	07 c0       	rjmp	.+14     	; 0x16fa <vfprintf+0x61e>
    16ec:	f2 fc       	sbrc	r15, 2
    16ee:	05 c0       	rjmp	.+10     	; 0x16fa <vfprintf+0x61e>
    16f0:	9f ee       	ldi	r25, 0xEF	; 239
    16f2:	f9 22       	and	r15, r25
    16f4:	02 c0       	rjmp	.+4      	; 0x16fa <vfprintf+0x61e>
    16f6:	1e 2d       	mov	r17, r14
    16f8:	01 c0       	rjmp	.+2      	; 0x16fc <vfprintf+0x620>
    16fa:	19 2d       	mov	r17, r9
    16fc:	f4 fe       	sbrs	r15, 4
    16fe:	0d c0       	rjmp	.+26     	; 0x171a <vfprintf+0x63e>
    1700:	fe 01       	movw	r30, r28
    1702:	ee 0d       	add	r30, r14
    1704:	f1 1d       	adc	r31, r1
    1706:	80 81       	ld	r24, Z
    1708:	80 33       	cpi	r24, 0x30	; 48
    170a:	19 f4       	brne	.+6      	; 0x1712 <vfprintf+0x636>
    170c:	e9 ee       	ldi	r30, 0xE9	; 233
    170e:	fe 22       	and	r15, r30
    1710:	08 c0       	rjmp	.+16     	; 0x1722 <vfprintf+0x646>
    1712:	1f 5f       	subi	r17, 0xFF	; 255
    1714:	f2 fe       	sbrs	r15, 2
    1716:	05 c0       	rjmp	.+10     	; 0x1722 <vfprintf+0x646>
    1718:	03 c0       	rjmp	.+6      	; 0x1720 <vfprintf+0x644>
    171a:	8f 2d       	mov	r24, r15
    171c:	86 78       	andi	r24, 0x86	; 134
    171e:	09 f0       	breq	.+2      	; 0x1722 <vfprintf+0x646>
    1720:	1f 5f       	subi	r17, 0xFF	; 255
    1722:	0f 2d       	mov	r16, r15
    1724:	f3 fc       	sbrc	r15, 3
    1726:	14 c0       	rjmp	.+40     	; 0x1750 <vfprintf+0x674>
    1728:	f0 fe       	sbrs	r15, 0
    172a:	0f c0       	rjmp	.+30     	; 0x174a <vfprintf+0x66e>
    172c:	18 15       	cp	r17, r8
    172e:	10 f0       	brcs	.+4      	; 0x1734 <vfprintf+0x658>
    1730:	9e 2c       	mov	r9, r14
    1732:	0b c0       	rjmp	.+22     	; 0x174a <vfprintf+0x66e>
    1734:	9e 2c       	mov	r9, r14
    1736:	98 0c       	add	r9, r8
    1738:	91 1a       	sub	r9, r17
    173a:	18 2d       	mov	r17, r8
    173c:	06 c0       	rjmp	.+12     	; 0x174a <vfprintf+0x66e>
    173e:	80 e2       	ldi	r24, 0x20	; 32
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	b3 01       	movw	r22, r6
    1744:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1748:	1f 5f       	subi	r17, 0xFF	; 255
    174a:	18 15       	cp	r17, r8
    174c:	c0 f3       	brcs	.-16     	; 0x173e <vfprintf+0x662>
    174e:	04 c0       	rjmp	.+8      	; 0x1758 <vfprintf+0x67c>
    1750:	18 15       	cp	r17, r8
    1752:	10 f4       	brcc	.+4      	; 0x1758 <vfprintf+0x67c>
    1754:	81 1a       	sub	r8, r17
    1756:	01 c0       	rjmp	.+2      	; 0x175a <vfprintf+0x67e>
    1758:	88 24       	eor	r8, r8
    175a:	04 ff       	sbrs	r16, 4
    175c:	0f c0       	rjmp	.+30     	; 0x177c <vfprintf+0x6a0>
    175e:	80 e3       	ldi	r24, 0x30	; 48
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	b3 01       	movw	r22, r6
    1764:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1768:	02 ff       	sbrs	r16, 2
    176a:	1d c0       	rjmp	.+58     	; 0x17a6 <vfprintf+0x6ca>
    176c:	01 fd       	sbrc	r16, 1
    176e:	03 c0       	rjmp	.+6      	; 0x1776 <vfprintf+0x69a>
    1770:	88 e7       	ldi	r24, 0x78	; 120
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	0e c0       	rjmp	.+28     	; 0x1792 <vfprintf+0x6b6>
    1776:	88 e5       	ldi	r24, 0x58	; 88
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	0b c0       	rjmp	.+22     	; 0x1792 <vfprintf+0x6b6>
    177c:	80 2f       	mov	r24, r16
    177e:	86 78       	andi	r24, 0x86	; 134
    1780:	91 f0       	breq	.+36     	; 0x17a6 <vfprintf+0x6ca>
    1782:	01 ff       	sbrs	r16, 1
    1784:	02 c0       	rjmp	.+4      	; 0x178a <vfprintf+0x6ae>
    1786:	8b e2       	ldi	r24, 0x2B	; 43
    1788:	01 c0       	rjmp	.+2      	; 0x178c <vfprintf+0x6b0>
    178a:	80 e2       	ldi	r24, 0x20	; 32
    178c:	f7 fc       	sbrc	r15, 7
    178e:	8d e2       	ldi	r24, 0x2D	; 45
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	b3 01       	movw	r22, r6
    1794:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    1798:	06 c0       	rjmp	.+12     	; 0x17a6 <vfprintf+0x6ca>
    179a:	80 e3       	ldi	r24, 0x30	; 48
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	b3 01       	movw	r22, r6
    17a0:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    17a4:	9a 94       	dec	r9
    17a6:	e9 14       	cp	r14, r9
    17a8:	c0 f3       	brcs	.-16     	; 0x179a <vfprintf+0x6be>
    17aa:	ea 94       	dec	r14
    17ac:	e1 e0       	ldi	r30, 0x01	; 1
    17ae:	f0 e0       	ldi	r31, 0x00	; 0
    17b0:	ec 0f       	add	r30, r28
    17b2:	fd 1f       	adc	r31, r29
    17b4:	ee 0d       	add	r30, r14
    17b6:	f1 1d       	adc	r31, r1
    17b8:	80 81       	ld	r24, Z
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	b3 01       	movw	r22, r6
    17be:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    17c2:	ee 20       	and	r14, r14
    17c4:	91 f7       	brne	.-28     	; 0x17aa <vfprintf+0x6ce>
    17c6:	06 c0       	rjmp	.+12     	; 0x17d4 <vfprintf+0x6f8>
    17c8:	80 e2       	ldi	r24, 0x20	; 32
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	b3 01       	movw	r22, r6
    17ce:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <fputc>
    17d2:	8a 94       	dec	r8
    17d4:	88 20       	and	r8, r8
    17d6:	c1 f7       	brne	.-16     	; 0x17c8 <vfprintf+0x6ec>
    17d8:	99 cc       	rjmp	.-1742   	; 0x110c <vfprintf+0x30>
    17da:	f3 01       	movw	r30, r6
    17dc:	66 81       	ldd	r22, Z+6	; 0x06
    17de:	77 81       	ldd	r23, Z+7	; 0x07
    17e0:	cb 01       	movw	r24, r22
    17e2:	61 96       	adiw	r28, 0x11	; 17
    17e4:	e2 e1       	ldi	r30, 0x12	; 18
    17e6:	0c 94 11 0c 	jmp	0x1822	; 0x1822 <__epilogue_restores__>

000017ea <__prologue_saves__>:
    17ea:	2f 92       	push	r2
    17ec:	3f 92       	push	r3
    17ee:	4f 92       	push	r4
    17f0:	5f 92       	push	r5
    17f2:	6f 92       	push	r6
    17f4:	7f 92       	push	r7
    17f6:	8f 92       	push	r8
    17f8:	9f 92       	push	r9
    17fa:	af 92       	push	r10
    17fc:	bf 92       	push	r11
    17fe:	cf 92       	push	r12
    1800:	df 92       	push	r13
    1802:	ef 92       	push	r14
    1804:	ff 92       	push	r15
    1806:	0f 93       	push	r16
    1808:	1f 93       	push	r17
    180a:	cf 93       	push	r28
    180c:	df 93       	push	r29
    180e:	cd b7       	in	r28, 0x3d	; 61
    1810:	de b7       	in	r29, 0x3e	; 62
    1812:	ca 1b       	sub	r28, r26
    1814:	db 0b       	sbc	r29, r27
    1816:	0f b6       	in	r0, 0x3f	; 63
    1818:	f8 94       	cli
    181a:	de bf       	out	0x3e, r29	; 62
    181c:	0f be       	out	0x3f, r0	; 63
    181e:	cd bf       	out	0x3d, r28	; 61
    1820:	09 94       	ijmp

00001822 <__epilogue_restores__>:
    1822:	2a 88       	ldd	r2, Y+18	; 0x12
    1824:	39 88       	ldd	r3, Y+17	; 0x11
    1826:	48 88       	ldd	r4, Y+16	; 0x10
    1828:	5f 84       	ldd	r5, Y+15	; 0x0f
    182a:	6e 84       	ldd	r6, Y+14	; 0x0e
    182c:	7d 84       	ldd	r7, Y+13	; 0x0d
    182e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1830:	9b 84       	ldd	r9, Y+11	; 0x0b
    1832:	aa 84       	ldd	r10, Y+10	; 0x0a
    1834:	b9 84       	ldd	r11, Y+9	; 0x09
    1836:	c8 84       	ldd	r12, Y+8	; 0x08
    1838:	df 80       	ldd	r13, Y+7	; 0x07
    183a:	ee 80       	ldd	r14, Y+6	; 0x06
    183c:	fd 80       	ldd	r15, Y+5	; 0x05
    183e:	0c 81       	ldd	r16, Y+4	; 0x04
    1840:	1b 81       	ldd	r17, Y+3	; 0x03
    1842:	aa 81       	ldd	r26, Y+2	; 0x02
    1844:	b9 81       	ldd	r27, Y+1	; 0x01
    1846:	ce 0f       	add	r28, r30
    1848:	d1 1d       	adc	r29, r1
    184a:	0f b6       	in	r0, 0x3f	; 63
    184c:	f8 94       	cli
    184e:	de bf       	out	0x3e, r29	; 62
    1850:	0f be       	out	0x3f, r0	; 63
    1852:	cd bf       	out	0x3d, r28	; 61
    1854:	ed 01       	movw	r28, r26
    1856:	08 95       	ret

00001858 <__ftoa_engine>:
    1858:	28 30       	cpi	r18, 0x08	; 8
    185a:	08 f0       	brcs	.+2      	; 0x185e <__ftoa_engine+0x6>
    185c:	27 e0       	ldi	r18, 0x07	; 7
    185e:	33 27       	eor	r19, r19
    1860:	da 01       	movw	r26, r20
    1862:	99 0f       	add	r25, r25
    1864:	31 1d       	adc	r19, r1
    1866:	87 fd       	sbrc	r24, 7
    1868:	91 60       	ori	r25, 0x01	; 1
    186a:	00 96       	adiw	r24, 0x00	; 0
    186c:	61 05       	cpc	r22, r1
    186e:	71 05       	cpc	r23, r1
    1870:	39 f4       	brne	.+14     	; 0x1880 <__ftoa_engine+0x28>
    1872:	32 60       	ori	r19, 0x02	; 2
    1874:	2e 5f       	subi	r18, 0xFE	; 254
    1876:	3d 93       	st	X+, r19
    1878:	30 e3       	ldi	r19, 0x30	; 48
    187a:	2a 95       	dec	r18
    187c:	e1 f7       	brne	.-8      	; 0x1876 <__ftoa_engine+0x1e>
    187e:	08 95       	ret
    1880:	9f 3f       	cpi	r25, 0xFF	; 255
    1882:	30 f0       	brcs	.+12     	; 0x1890 <__ftoa_engine+0x38>
    1884:	80 38       	cpi	r24, 0x80	; 128
    1886:	71 05       	cpc	r23, r1
    1888:	61 05       	cpc	r22, r1
    188a:	09 f0       	breq	.+2      	; 0x188e <__ftoa_engine+0x36>
    188c:	3c 5f       	subi	r19, 0xFC	; 252
    188e:	3c 5f       	subi	r19, 0xFC	; 252
    1890:	3d 93       	st	X+, r19
    1892:	91 30       	cpi	r25, 0x01	; 1
    1894:	08 f0       	brcs	.+2      	; 0x1898 <__ftoa_engine+0x40>
    1896:	80 68       	ori	r24, 0x80	; 128
    1898:	91 1d       	adc	r25, r1
    189a:	df 93       	push	r29
    189c:	cf 93       	push	r28
    189e:	1f 93       	push	r17
    18a0:	0f 93       	push	r16
    18a2:	ff 92       	push	r15
    18a4:	ef 92       	push	r14
    18a6:	19 2f       	mov	r17, r25
    18a8:	98 7f       	andi	r25, 0xF8	; 248
    18aa:	96 95       	lsr	r25
    18ac:	e9 2f       	mov	r30, r25
    18ae:	96 95       	lsr	r25
    18b0:	96 95       	lsr	r25
    18b2:	e9 0f       	add	r30, r25
    18b4:	ff 27       	eor	r31, r31
    18b6:	e6 53       	subi	r30, 0x36	; 54
    18b8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ba:	99 27       	eor	r25, r25
    18bc:	33 27       	eor	r19, r19
    18be:	ee 24       	eor	r14, r14
    18c0:	ff 24       	eor	r15, r15
    18c2:	a7 01       	movw	r20, r14
    18c4:	e7 01       	movw	r28, r14
    18c6:	05 90       	lpm	r0, Z+
    18c8:	08 94       	sec
    18ca:	07 94       	ror	r0
    18cc:	28 f4       	brcc	.+10     	; 0x18d8 <__ftoa_engine+0x80>
    18ce:	36 0f       	add	r19, r22
    18d0:	e7 1e       	adc	r14, r23
    18d2:	f8 1e       	adc	r15, r24
    18d4:	49 1f       	adc	r20, r25
    18d6:	51 1d       	adc	r21, r1
    18d8:	66 0f       	add	r22, r22
    18da:	77 1f       	adc	r23, r23
    18dc:	88 1f       	adc	r24, r24
    18de:	99 1f       	adc	r25, r25
    18e0:	06 94       	lsr	r0
    18e2:	a1 f7       	brne	.-24     	; 0x18cc <__ftoa_engine+0x74>
    18e4:	05 90       	lpm	r0, Z+
    18e6:	07 94       	ror	r0
    18e8:	28 f4       	brcc	.+10     	; 0x18f4 <__ftoa_engine+0x9c>
    18ea:	e7 0e       	add	r14, r23
    18ec:	f8 1e       	adc	r15, r24
    18ee:	49 1f       	adc	r20, r25
    18f0:	56 1f       	adc	r21, r22
    18f2:	c1 1d       	adc	r28, r1
    18f4:	77 0f       	add	r23, r23
    18f6:	88 1f       	adc	r24, r24
    18f8:	99 1f       	adc	r25, r25
    18fa:	66 1f       	adc	r22, r22
    18fc:	06 94       	lsr	r0
    18fe:	a1 f7       	brne	.-24     	; 0x18e8 <__ftoa_engine+0x90>
    1900:	05 90       	lpm	r0, Z+
    1902:	07 94       	ror	r0
    1904:	28 f4       	brcc	.+10     	; 0x1910 <__ftoa_engine+0xb8>
    1906:	f8 0e       	add	r15, r24
    1908:	49 1f       	adc	r20, r25
    190a:	56 1f       	adc	r21, r22
    190c:	c7 1f       	adc	r28, r23
    190e:	d1 1d       	adc	r29, r1
    1910:	88 0f       	add	r24, r24
    1912:	99 1f       	adc	r25, r25
    1914:	66 1f       	adc	r22, r22
    1916:	77 1f       	adc	r23, r23
    1918:	06 94       	lsr	r0
    191a:	a1 f7       	brne	.-24     	; 0x1904 <__ftoa_engine+0xac>
    191c:	05 90       	lpm	r0, Z+
    191e:	07 94       	ror	r0
    1920:	20 f4       	brcc	.+8      	; 0x192a <__ftoa_engine+0xd2>
    1922:	49 0f       	add	r20, r25
    1924:	56 1f       	adc	r21, r22
    1926:	c7 1f       	adc	r28, r23
    1928:	d8 1f       	adc	r29, r24
    192a:	99 0f       	add	r25, r25
    192c:	66 1f       	adc	r22, r22
    192e:	77 1f       	adc	r23, r23
    1930:	88 1f       	adc	r24, r24
    1932:	06 94       	lsr	r0
    1934:	a9 f7       	brne	.-22     	; 0x1920 <__ftoa_engine+0xc8>
    1936:	84 91       	lpm	r24, Z+
    1938:	10 95       	com	r17
    193a:	17 70       	andi	r17, 0x07	; 7
    193c:	41 f0       	breq	.+16     	; 0x194e <__ftoa_engine+0xf6>
    193e:	d6 95       	lsr	r29
    1940:	c7 95       	ror	r28
    1942:	57 95       	ror	r21
    1944:	47 95       	ror	r20
    1946:	f7 94       	ror	r15
    1948:	e7 94       	ror	r14
    194a:	1a 95       	dec	r17
    194c:	c1 f7       	brne	.-16     	; 0x193e <__ftoa_engine+0xe6>
    194e:	e0 e7       	ldi	r30, 0x70	; 112
    1950:	f0 e0       	ldi	r31, 0x00	; 0
    1952:	68 94       	set
    1954:	15 90       	lpm	r1, Z+
    1956:	15 91       	lpm	r17, Z+
    1958:	35 91       	lpm	r19, Z+
    195a:	65 91       	lpm	r22, Z+
    195c:	95 91       	lpm	r25, Z+
    195e:	05 90       	lpm	r0, Z+
    1960:	7f e2       	ldi	r23, 0x2F	; 47
    1962:	73 95       	inc	r23
    1964:	e1 18       	sub	r14, r1
    1966:	f1 0a       	sbc	r15, r17
    1968:	43 0b       	sbc	r20, r19
    196a:	56 0b       	sbc	r21, r22
    196c:	c9 0b       	sbc	r28, r25
    196e:	d0 09       	sbc	r29, r0
    1970:	c0 f7       	brcc	.-16     	; 0x1962 <__ftoa_engine+0x10a>
    1972:	e1 0c       	add	r14, r1
    1974:	f1 1e       	adc	r15, r17
    1976:	43 1f       	adc	r20, r19
    1978:	56 1f       	adc	r21, r22
    197a:	c9 1f       	adc	r28, r25
    197c:	d0 1d       	adc	r29, r0
    197e:	7e f4       	brtc	.+30     	; 0x199e <__ftoa_engine+0x146>
    1980:	70 33       	cpi	r23, 0x30	; 48
    1982:	11 f4       	brne	.+4      	; 0x1988 <__ftoa_engine+0x130>
    1984:	8a 95       	dec	r24
    1986:	e6 cf       	rjmp	.-52     	; 0x1954 <__ftoa_engine+0xfc>
    1988:	e8 94       	clt
    198a:	01 50       	subi	r16, 0x01	; 1
    198c:	30 f0       	brcs	.+12     	; 0x199a <__ftoa_engine+0x142>
    198e:	08 0f       	add	r16, r24
    1990:	0a f4       	brpl	.+2      	; 0x1994 <__ftoa_engine+0x13c>
    1992:	00 27       	eor	r16, r16
    1994:	02 17       	cp	r16, r18
    1996:	08 f4       	brcc	.+2      	; 0x199a <__ftoa_engine+0x142>
    1998:	20 2f       	mov	r18, r16
    199a:	23 95       	inc	r18
    199c:	02 2f       	mov	r16, r18
    199e:	7a 33       	cpi	r23, 0x3A	; 58
    19a0:	28 f0       	brcs	.+10     	; 0x19ac <__ftoa_engine+0x154>
    19a2:	79 e3       	ldi	r23, 0x39	; 57
    19a4:	7d 93       	st	X+, r23
    19a6:	2a 95       	dec	r18
    19a8:	e9 f7       	brne	.-6      	; 0x19a4 <__ftoa_engine+0x14c>
    19aa:	10 c0       	rjmp	.+32     	; 0x19cc <__ftoa_engine+0x174>
    19ac:	7d 93       	st	X+, r23
    19ae:	2a 95       	dec	r18
    19b0:	89 f6       	brne	.-94     	; 0x1954 <__ftoa_engine+0xfc>
    19b2:	06 94       	lsr	r0
    19b4:	97 95       	ror	r25
    19b6:	67 95       	ror	r22
    19b8:	37 95       	ror	r19
    19ba:	17 95       	ror	r17
    19bc:	17 94       	ror	r1
    19be:	e1 18       	sub	r14, r1
    19c0:	f1 0a       	sbc	r15, r17
    19c2:	43 0b       	sbc	r20, r19
    19c4:	56 0b       	sbc	r21, r22
    19c6:	c9 0b       	sbc	r28, r25
    19c8:	d0 09       	sbc	r29, r0
    19ca:	98 f0       	brcs	.+38     	; 0x19f2 <__ftoa_engine+0x19a>
    19cc:	23 95       	inc	r18
    19ce:	7e 91       	ld	r23, -X
    19d0:	73 95       	inc	r23
    19d2:	7a 33       	cpi	r23, 0x3A	; 58
    19d4:	08 f0       	brcs	.+2      	; 0x19d8 <__ftoa_engine+0x180>
    19d6:	70 e3       	ldi	r23, 0x30	; 48
    19d8:	7c 93       	st	X, r23
    19da:	20 13       	cpse	r18, r16
    19dc:	b8 f7       	brcc	.-18     	; 0x19cc <__ftoa_engine+0x174>
    19de:	7e 91       	ld	r23, -X
    19e0:	70 61       	ori	r23, 0x10	; 16
    19e2:	7d 93       	st	X+, r23
    19e4:	30 f0       	brcs	.+12     	; 0x19f2 <__ftoa_engine+0x19a>
    19e6:	83 95       	inc	r24
    19e8:	71 e3       	ldi	r23, 0x31	; 49
    19ea:	7d 93       	st	X+, r23
    19ec:	70 e3       	ldi	r23, 0x30	; 48
    19ee:	2a 95       	dec	r18
    19f0:	e1 f7       	brne	.-8      	; 0x19ea <__ftoa_engine+0x192>
    19f2:	11 24       	eor	r1, r1
    19f4:	ef 90       	pop	r14
    19f6:	ff 90       	pop	r15
    19f8:	0f 91       	pop	r16
    19fa:	1f 91       	pop	r17
    19fc:	cf 91       	pop	r28
    19fe:	df 91       	pop	r29
    1a00:	99 27       	eor	r25, r25
    1a02:	87 fd       	sbrc	r24, 7
    1a04:	90 95       	com	r25
    1a06:	08 95       	ret

00001a08 <strnlen_P>:
    1a08:	fc 01       	movw	r30, r24
    1a0a:	05 90       	lpm	r0, Z+
    1a0c:	61 50       	subi	r22, 0x01	; 1
    1a0e:	70 40       	sbci	r23, 0x00	; 0
    1a10:	01 10       	cpse	r0, r1
    1a12:	d8 f7       	brcc	.-10     	; 0x1a0a <strnlen_P+0x2>
    1a14:	80 95       	com	r24
    1a16:	90 95       	com	r25
    1a18:	8e 0f       	add	r24, r30
    1a1a:	9f 1f       	adc	r25, r31
    1a1c:	08 95       	ret

00001a1e <strnlen>:
    1a1e:	fc 01       	movw	r30, r24
    1a20:	61 50       	subi	r22, 0x01	; 1
    1a22:	70 40       	sbci	r23, 0x00	; 0
    1a24:	01 90       	ld	r0, Z+
    1a26:	01 10       	cpse	r0, r1
    1a28:	d8 f7       	brcc	.-10     	; 0x1a20 <strnlen+0x2>
    1a2a:	80 95       	com	r24
    1a2c:	90 95       	com	r25
    1a2e:	8e 0f       	add	r24, r30
    1a30:	9f 1f       	adc	r25, r31
    1a32:	08 95       	ret

00001a34 <fputc>:
    1a34:	0f 93       	push	r16
    1a36:	1f 93       	push	r17
    1a38:	cf 93       	push	r28
    1a3a:	df 93       	push	r29
    1a3c:	8c 01       	movw	r16, r24
    1a3e:	eb 01       	movw	r28, r22
    1a40:	8b 81       	ldd	r24, Y+3	; 0x03
    1a42:	81 ff       	sbrs	r24, 1
    1a44:	1b c0       	rjmp	.+54     	; 0x1a7c <fputc+0x48>
    1a46:	82 ff       	sbrs	r24, 2
    1a48:	0d c0       	rjmp	.+26     	; 0x1a64 <fputc+0x30>
    1a4a:	2e 81       	ldd	r18, Y+6	; 0x06
    1a4c:	3f 81       	ldd	r19, Y+7	; 0x07
    1a4e:	8c 81       	ldd	r24, Y+4	; 0x04
    1a50:	9d 81       	ldd	r25, Y+5	; 0x05
    1a52:	28 17       	cp	r18, r24
    1a54:	39 07       	cpc	r19, r25
    1a56:	64 f4       	brge	.+24     	; 0x1a70 <fputc+0x3c>
    1a58:	e8 81       	ld	r30, Y
    1a5a:	f9 81       	ldd	r31, Y+1	; 0x01
    1a5c:	01 93       	st	Z+, r16
    1a5e:	f9 83       	std	Y+1, r31	; 0x01
    1a60:	e8 83       	st	Y, r30
    1a62:	06 c0       	rjmp	.+12     	; 0x1a70 <fputc+0x3c>
    1a64:	e8 85       	ldd	r30, Y+8	; 0x08
    1a66:	f9 85       	ldd	r31, Y+9	; 0x09
    1a68:	80 2f       	mov	r24, r16
    1a6a:	09 95       	icall
    1a6c:	89 2b       	or	r24, r25
    1a6e:	31 f4       	brne	.+12     	; 0x1a7c <fputc+0x48>
    1a70:	8e 81       	ldd	r24, Y+6	; 0x06
    1a72:	9f 81       	ldd	r25, Y+7	; 0x07
    1a74:	01 96       	adiw	r24, 0x01	; 1
    1a76:	9f 83       	std	Y+7, r25	; 0x07
    1a78:	8e 83       	std	Y+6, r24	; 0x06
    1a7a:	02 c0       	rjmp	.+4      	; 0x1a80 <fputc+0x4c>
    1a7c:	0f ef       	ldi	r16, 0xFF	; 255
    1a7e:	1f ef       	ldi	r17, 0xFF	; 255
    1a80:	c8 01       	movw	r24, r16
    1a82:	df 91       	pop	r29
    1a84:	cf 91       	pop	r28
    1a86:	1f 91       	pop	r17
    1a88:	0f 91       	pop	r16
    1a8a:	08 95       	ret

00001a8c <sprintf>:
    1a8c:	ae e0       	ldi	r26, 0x0E	; 14
    1a8e:	b0 e0       	ldi	r27, 0x00	; 0
    1a90:	ec e4       	ldi	r30, 0x4C	; 76
    1a92:	fd e0       	ldi	r31, 0x0D	; 13
    1a94:	0c 94 03 0c 	jmp	0x1806	; 0x1806 <__prologue_saves__+0x1c>
    1a98:	0d 89       	ldd	r16, Y+21	; 0x15
    1a9a:	1e 89       	ldd	r17, Y+22	; 0x16
    1a9c:	86 e0       	ldi	r24, 0x06	; 6
    1a9e:	8c 83       	std	Y+4, r24	; 0x04
    1aa0:	1a 83       	std	Y+2, r17	; 0x02
    1aa2:	09 83       	std	Y+1, r16	; 0x01
    1aa4:	8f ef       	ldi	r24, 0xFF	; 255
    1aa6:	9f e7       	ldi	r25, 0x7F	; 127
    1aa8:	9e 83       	std	Y+6, r25	; 0x06
    1aaa:	8d 83       	std	Y+5, r24	; 0x05
    1aac:	9e 01       	movw	r18, r28
    1aae:	27 5e       	subi	r18, 0xE7	; 231
    1ab0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ab2:	ce 01       	movw	r24, r28
    1ab4:	01 96       	adiw	r24, 0x01	; 1
    1ab6:	6f 89       	ldd	r22, Y+23	; 0x17
    1ab8:	78 8d       	ldd	r23, Y+24	; 0x18
    1aba:	a9 01       	movw	r20, r18
    1abc:	0e 94 6e 08 	call	0x10dc	; 0x10dc <vfprintf>
    1ac0:	2f 81       	ldd	r18, Y+7	; 0x07
    1ac2:	38 85       	ldd	r19, Y+8	; 0x08
    1ac4:	02 0f       	add	r16, r18
    1ac6:	13 1f       	adc	r17, r19
    1ac8:	f8 01       	movw	r30, r16
    1aca:	10 82       	st	Z, r1
    1acc:	2e 96       	adiw	r28, 0x0e	; 14
    1ace:	e4 e0       	ldi	r30, 0x04	; 4
    1ad0:	0c 94 1f 0c 	jmp	0x183e	; 0x183e <__epilogue_restores__+0x1c>

00001ad4 <__ultoa_invert>:
    1ad4:	fa 01       	movw	r30, r20
    1ad6:	aa 27       	eor	r26, r26
    1ad8:	28 30       	cpi	r18, 0x08	; 8
    1ada:	51 f1       	breq	.+84     	; 0x1b30 <__ultoa_invert+0x5c>
    1adc:	20 31       	cpi	r18, 0x10	; 16
    1ade:	81 f1       	breq	.+96     	; 0x1b40 <__ultoa_invert+0x6c>
    1ae0:	e8 94       	clt
    1ae2:	6f 93       	push	r22
    1ae4:	6e 7f       	andi	r22, 0xFE	; 254
    1ae6:	6e 5f       	subi	r22, 0xFE	; 254
    1ae8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aea:	8f 4f       	sbci	r24, 0xFF	; 255
    1aec:	9f 4f       	sbci	r25, 0xFF	; 255
    1aee:	af 4f       	sbci	r26, 0xFF	; 255
    1af0:	b1 e0       	ldi	r27, 0x01	; 1
    1af2:	3e d0       	rcall	.+124    	; 0x1b70 <__ultoa_invert+0x9c>
    1af4:	b4 e0       	ldi	r27, 0x04	; 4
    1af6:	3c d0       	rcall	.+120    	; 0x1b70 <__ultoa_invert+0x9c>
    1af8:	67 0f       	add	r22, r23
    1afa:	78 1f       	adc	r23, r24
    1afc:	89 1f       	adc	r24, r25
    1afe:	9a 1f       	adc	r25, r26
    1b00:	a1 1d       	adc	r26, r1
    1b02:	68 0f       	add	r22, r24
    1b04:	79 1f       	adc	r23, r25
    1b06:	8a 1f       	adc	r24, r26
    1b08:	91 1d       	adc	r25, r1
    1b0a:	a1 1d       	adc	r26, r1
    1b0c:	6a 0f       	add	r22, r26
    1b0e:	71 1d       	adc	r23, r1
    1b10:	81 1d       	adc	r24, r1
    1b12:	91 1d       	adc	r25, r1
    1b14:	a1 1d       	adc	r26, r1
    1b16:	20 d0       	rcall	.+64     	; 0x1b58 <__ultoa_invert+0x84>
    1b18:	09 f4       	brne	.+2      	; 0x1b1c <__ultoa_invert+0x48>
    1b1a:	68 94       	set
    1b1c:	3f 91       	pop	r19
    1b1e:	2a e0       	ldi	r18, 0x0A	; 10
    1b20:	26 9f       	mul	r18, r22
    1b22:	11 24       	eor	r1, r1
    1b24:	30 19       	sub	r19, r0
    1b26:	30 5d       	subi	r19, 0xD0	; 208
    1b28:	31 93       	st	Z+, r19
    1b2a:	de f6       	brtc	.-74     	; 0x1ae2 <__ultoa_invert+0xe>
    1b2c:	cf 01       	movw	r24, r30
    1b2e:	08 95       	ret
    1b30:	46 2f       	mov	r20, r22
    1b32:	47 70       	andi	r20, 0x07	; 7
    1b34:	40 5d       	subi	r20, 0xD0	; 208
    1b36:	41 93       	st	Z+, r20
    1b38:	b3 e0       	ldi	r27, 0x03	; 3
    1b3a:	0f d0       	rcall	.+30     	; 0x1b5a <__ultoa_invert+0x86>
    1b3c:	c9 f7       	brne	.-14     	; 0x1b30 <__ultoa_invert+0x5c>
    1b3e:	f6 cf       	rjmp	.-20     	; 0x1b2c <__ultoa_invert+0x58>
    1b40:	46 2f       	mov	r20, r22
    1b42:	4f 70       	andi	r20, 0x0F	; 15
    1b44:	40 5d       	subi	r20, 0xD0	; 208
    1b46:	4a 33       	cpi	r20, 0x3A	; 58
    1b48:	18 f0       	brcs	.+6      	; 0x1b50 <__ultoa_invert+0x7c>
    1b4a:	49 5d       	subi	r20, 0xD9	; 217
    1b4c:	31 fd       	sbrc	r19, 1
    1b4e:	40 52       	subi	r20, 0x20	; 32
    1b50:	41 93       	st	Z+, r20
    1b52:	02 d0       	rcall	.+4      	; 0x1b58 <__ultoa_invert+0x84>
    1b54:	a9 f7       	brne	.-22     	; 0x1b40 <__ultoa_invert+0x6c>
    1b56:	ea cf       	rjmp	.-44     	; 0x1b2c <__ultoa_invert+0x58>
    1b58:	b4 e0       	ldi	r27, 0x04	; 4
    1b5a:	a6 95       	lsr	r26
    1b5c:	97 95       	ror	r25
    1b5e:	87 95       	ror	r24
    1b60:	77 95       	ror	r23
    1b62:	67 95       	ror	r22
    1b64:	ba 95       	dec	r27
    1b66:	c9 f7       	brne	.-14     	; 0x1b5a <__ultoa_invert+0x86>
    1b68:	00 97       	sbiw	r24, 0x00	; 0
    1b6a:	61 05       	cpc	r22, r1
    1b6c:	71 05       	cpc	r23, r1
    1b6e:	08 95       	ret
    1b70:	9b 01       	movw	r18, r22
    1b72:	ac 01       	movw	r20, r24
    1b74:	0a 2e       	mov	r0, r26
    1b76:	06 94       	lsr	r0
    1b78:	57 95       	ror	r21
    1b7a:	47 95       	ror	r20
    1b7c:	37 95       	ror	r19
    1b7e:	27 95       	ror	r18
    1b80:	ba 95       	dec	r27
    1b82:	c9 f7       	brne	.-14     	; 0x1b76 <__ultoa_invert+0xa2>
    1b84:	62 0f       	add	r22, r18
    1b86:	73 1f       	adc	r23, r19
    1b88:	84 1f       	adc	r24, r20
    1b8a:	95 1f       	adc	r25, r21
    1b8c:	a0 1d       	adc	r26, r0
    1b8e:	08 95       	ret

00001b90 <_exit>:
    1b90:	f8 94       	cli

00001b92 <__stop_program>:
    1b92:	ff cf       	rjmp	.-2      	; 0x1b92 <__stop_program>
