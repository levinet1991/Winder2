
Winder2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008e  00800100  00001816  000018aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001816  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000036  0080018e  0080018e  00001938  2**0
                  ALLOC
  3 .debug_aranges 000000a8  00000000  00000000  00001938  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001bf  00000000  00000000  000019e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007be  00000000  00000000  00001b9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002ac  00000000  00000000  0000235d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bfb  00000000  00000000  00002609  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  00003204  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000447  00000000  00000000  00003334  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002fb  00000000  00000000  0000377b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000120  00000000  00000000  00003a76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
/*************************************************************************
Display string from flash
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts_P(const char *progmem_s)
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 3a 01 	jmp	0x274	; 0x274 <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1790>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1788>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e6 e1       	ldi	r30, 0x16	; 22
     17e:	f8 e1       	ldi	r31, 0x18	; 24
     180:	02 c0       	rjmp	.+4      	; 0x186 <.do_copy_data_start>

00000182 <.do_copy_data_loop>:
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0

00000186 <.do_copy_data_start>:
     186:	ae 38       	cpi	r26, 0x8E	; 142
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <.do_copy_data_loop>

0000018c <__do_clear_bss>:
     18c:	11 e0       	ldi	r17, 0x01	; 1
     18e:	ae e8       	ldi	r26, 0x8E	; 142
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a4 3c       	cpi	r26, 0xC4	; 196
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 05 05 	call	0xa0a	; 0xa0a <main>
     1a0:	0c 94 09 0c 	jmp	0x1812	; 0x1812 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <_Z8read_adch>:
double Diametrul_sarmei=0.0012, Coef_deplasare=1, Nr_bobinarisecunda=0.5;

// Read the AD conversion result
unsigned int read_adc(unsigned char adc_input)
	{
		ADMUX=adc_input | ADC_VREF_TYPE;
     1a8:	80 64       	ori	r24, 0x40	; 64
     1aa:	80 93 7c 00 	sts	0x007C, r24
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     1ae:	85 e3       	ldi	r24, 0x35	; 53
     1b0:	8a 95       	dec	r24
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <_Z8read_adch+0x8>
		// Delay needed for the stabilization of the ADC input voltage
		_delay_us(10);
		// Start the AD conversion
		ADCSRA|=(1<<ADSC);
     1b4:	ea e7       	ldi	r30, 0x7A	; 122
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	80 81       	ld	r24, Z
     1ba:	80 64       	ori	r24, 0x40	; 64
     1bc:	80 83       	st	Z, r24
		// Wait for the AD conversion to complete
		while ((ADCSRA & (1<<ADIF))==0);
     1be:	80 81       	ld	r24, Z
     1c0:	84 ff       	sbrs	r24, 4
     1c2:	fd cf       	rjmp	.-6      	; 0x1be <_Z8read_adch+0x16>
		ADCSRA|=(1<<ADIF);
     1c4:	ea e7       	ldi	r30, 0x7A	; 122
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	80 61       	ori	r24, 0x10	; 16
     1cc:	80 83       	st	Z, r24
		return ADCW;
     1ce:	20 91 78 00 	lds	r18, 0x0078
     1d2:	30 91 79 00 	lds	r19, 0x0079
	}
     1d6:	82 2f       	mov	r24, r18
     1d8:	93 2f       	mov	r25, r19
     1da:	08 95       	ret

000001dc <_Z9Timer2_ONv>:
		// Clock value: 250.000 kHz
		// Mode: Normal top=0xFF
		// OC2A output: Disconnected
		// OC2B output: Disconnected
		// Timer Period: 1.024 ms
		ASSR=(0<<EXCLK) | (0<<AS2);
     1dc:	10 92 b6 00 	sts	0x00B6, r1
		TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
     1e0:	10 92 b0 00 	sts	0x00B0, r1
		TCCR2B=(0<<WGM22) | (1<<CS22) | (0<<CS21) | (0<<CS20);
     1e4:	84 e0       	ldi	r24, 0x04	; 4
     1e6:	80 93 b1 00 	sts	0x00B1, r24
		TCNT2=0x00;
     1ea:	10 92 b2 00 	sts	0x00B2, r1
		OCR2A=0x00;
     1ee:	10 92 b3 00 	sts	0x00B3, r1
		OCR2B=0x00;
     1f2:	10 92 b4 00 	sts	0x00B4, r1
		// Timer/Counter 2 Interrupt(s) initialization
		TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (1<<TOIE2);
     1f6:	81 e0       	ldi	r24, 0x01	; 1
     1f8:	80 93 70 00 	sts	0x0070, r24
	}
     1fc:	08 95       	ret

000001fe <_Z10Timer2_OFFv>:
			// Clock source: System Clock
			// Clock value: Timer2 Stopped
			// Mode: Normal top=0xFF
			// OC2A output: Disconnected
			// OC2B output: Disconnected
			ASSR=(0<<EXCLK) | (0<<AS2);
     1fe:	10 92 b6 00 	sts	0x00B6, r1
			TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
     202:	10 92 b0 00 	sts	0x00B0, r1
			TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
     206:	10 92 b1 00 	sts	0x00B1, r1
			TCNT2=0x00;
     20a:	10 92 b2 00 	sts	0x00B2, r1
			OCR2A=0x00;
     20e:	10 92 b3 00 	sts	0x00B3, r1
			OCR2B=0x00;
     212:	10 92 b4 00 	sts	0x00B4, r1
			// Timer/Counter 2 Interrupt(s) initialization
			TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
     216:	10 92 70 00 	sts	0x0070, r1
	}
     21a:	08 95       	ret

0000021c <_Z16read_LCD_buttonsv>:

// read the buttons
int read_LCD_buttons()
	{
		int adc_key_in  = 0;
		adc_key_in = read_adc(0);      // read the value from the sensor 
     21c:	80 e0       	ldi	r24, 0x00	; 0
     21e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_Z8read_adch>
		// my buttons when read are centered at these valies: 0, 144, 329, 504, 741
		// we add approx 50 to those values and check to see if we are close
		if (adc_key_in > 1000) return btnNONE; // We make this the 1st option for speed reasons since it will be the most likely result
     222:	23 e0       	ldi	r18, 0x03	; 3
     224:	89 3e       	cpi	r24, 0xE9	; 233
     226:	92 07       	cpc	r25, r18
     228:	04 f5       	brge	.+64     	; 0x26a <_Z16read_LCD_buttonsv+0x4e>
		// For V1.1 us this threshold
		if (adc_key_in < 50)   return btnRIGHT;  
     22a:	82 33       	cpi	r24, 0x32	; 50
     22c:	91 05       	cpc	r25, r1
     22e:	1c f4       	brge	.+6      	; 0x236 <_Z16read_LCD_buttonsv+0x1a>
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	1c c0       	rjmp	.+56     	; 0x26e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 250)  return btnUP; 
     236:	8a 3f       	cpi	r24, 0xFA	; 250
     238:	91 05       	cpc	r25, r1
     23a:	1c f4       	brge	.+6      	; 0x242 <_Z16read_LCD_buttonsv+0x26>
     23c:	21 e0       	ldi	r18, 0x01	; 1
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	16 c0       	rjmp	.+44     	; 0x26e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 450)  return btnDOWN; 
     242:	21 e0       	ldi	r18, 0x01	; 1
     244:	82 3c       	cpi	r24, 0xC2	; 194
     246:	92 07       	cpc	r25, r18
     248:	1c f4       	brge	.+6      	; 0x250 <_Z16read_LCD_buttonsv+0x34>
     24a:	22 e0       	ldi	r18, 0x02	; 2
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	0f c0       	rjmp	.+30     	; 0x26e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 650)  return btnLEFT; 
     250:	22 e0       	ldi	r18, 0x02	; 2
     252:	8a 38       	cpi	r24, 0x8A	; 138
     254:	92 07       	cpc	r25, r18
     256:	1c f4       	brge	.+6      	; 0x25e <_Z16read_LCD_buttonsv+0x42>
     258:	23 e0       	ldi	r18, 0x03	; 3
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	08 c0       	rjmp	.+16     	; 0x26e <_Z16read_LCD_buttonsv+0x52>
		if (adc_key_in < 850)  return btnSELECT;  
     25e:	82 55       	subi	r24, 0x52	; 82
     260:	93 40       	sbci	r25, 0x03	; 3
     262:	1c f4       	brge	.+6      	; 0x26a <_Z16read_LCD_buttonsv+0x4e>
     264:	24 e0       	ldi	r18, 0x04	; 4
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	02 c0       	rjmp	.+4      	; 0x26e <_Z16read_LCD_buttonsv+0x52>
     26a:	25 e0       	ldi	r18, 0x05	; 5
     26c:	30 e0       	ldi	r19, 0x00	; 0

		return btnNONE;  // when all others fail, return this...
	}
     26e:	82 2f       	mov	r24, r18
     270:	93 2f       	mov	r25, r19
     272:	08 95       	ret

00000274 <__vector_9>:
				_delay_ms(5);
			
			}
	}
	
ISR(TIMER2_OVF_vect)
     274:	1f 92       	push	r1
     276:	0f 92       	push	r0
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	0f 92       	push	r0
     27c:	11 24       	eor	r1, r1
     27e:	8f 93       	push	r24
     280:	9f 93       	push	r25
	{
		Contor_timer2++;
     282:	80 91 8e 01 	lds	r24, 0x018E
     286:	90 91 8f 01 	lds	r25, 0x018F
     28a:	01 96       	adiw	r24, 0x01	; 1
     28c:	90 93 8f 01 	sts	0x018F, r25
     290:	80 93 8e 01 	sts	0x018E, r24
     294:	9f 91       	pop	r25
     296:	8f 91       	pop	r24
     298:	0f 90       	pop	r0
     29a:	0f be       	out	0x3f, r0	; 63
     29c:	0f 90       	pop	r0
     29e:	1f 90       	pop	r1
     2a0:	18 95       	reti

000002a2 <_ZL9lcd_writehh>:
Input:    data   byte to write to LCD
          rs     1: write data
                 0: write instruction
Returns:  none
*************************************************************************/
static void lcd_write(uint8_t data,uint8_t rs)
     2a2:	28 2f       	mov	r18, r24
          Delay_us(5);
          PrevCmdInvolvedAddressCounter=0;
        }
    #endif

    if (rs)
     2a4:	66 23       	and	r22, r22
     2a6:	31 f0       	breq	.+12     	; 0x2b4 <_ZL9lcd_writehh+0x12>
      {
        lcd_rs_port_high();                            // RS=1: Write Character
     2a8:	eb e2       	ldi	r30, 0x2B	; 43
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	80 81       	ld	r24, Z
     2ae:	81 60       	ori	r24, 0x01	; 1
     2b0:	80 83       	st	Z, r24
     2b2:	05 c0       	rjmp	.+10     	; 0x2be <_ZL9lcd_writehh+0x1c>
        PrevCmdInvolvedAddressCounter=1;
        #endif
      }
    else
      {
        lcd_rs_port_low();                          // RS=0: Write Command
     2b4:	eb e2       	ldi	r30, 0x2B	; 43
     2b6:	f0 e0       	ldi	r31, 0x00	; 0
     2b8:	80 81       	ld	r24, Z
     2ba:	8e 7f       	andi	r24, 0xFE	; 254
     2bc:	80 83       	st	Z, r24
        PrevCmdInvolvedAddressCounter=0;
        #endif
      }

    #if LCD_BITS==4
      lcd_db7_port_set(data&_BV(7));                  //Output High Nibble
     2be:	22 23       	and	r18, r18
     2c0:	34 f4       	brge	.+12     	; 0x2ce <_ZL9lcd_writehh+0x2c>
     2c2:	eb e2       	ldi	r30, 0x2B	; 43
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	80 81       	ld	r24, Z
     2c8:	80 68       	ori	r24, 0x80	; 128
     2ca:	80 83       	st	Z, r24
     2cc:	05 c0       	rjmp	.+10     	; 0x2d8 <_ZL9lcd_writehh+0x36>
     2ce:	eb e2       	ldi	r30, 0x2B	; 43
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	80 81       	ld	r24, Z
     2d4:	8f 77       	andi	r24, 0x7F	; 127
     2d6:	80 83       	st	Z, r24
      lcd_db6_port_set(data&_BV(6));
     2d8:	92 2f       	mov	r25, r18
     2da:	26 ff       	sbrs	r18, 6
     2dc:	06 c0       	rjmp	.+12     	; 0x2ea <_ZL9lcd_writehh+0x48>
     2de:	eb e2       	ldi	r30, 0x2B	; 43
     2e0:	f0 e0       	ldi	r31, 0x00	; 0
     2e2:	80 81       	ld	r24, Z
     2e4:	80 64       	ori	r24, 0x40	; 64
     2e6:	80 83       	st	Z, r24
     2e8:	05 c0       	rjmp	.+10     	; 0x2f4 <_ZL9lcd_writehh+0x52>
     2ea:	eb e2       	ldi	r30, 0x2B	; 43
     2ec:	f0 e0       	ldi	r31, 0x00	; 0
     2ee:	80 81       	ld	r24, Z
     2f0:	8f 7b       	andi	r24, 0xBF	; 191
     2f2:	80 83       	st	Z, r24
      lcd_db5_port_set(data&_BV(5));
     2f4:	95 ff       	sbrs	r25, 5
     2f6:	06 c0       	rjmp	.+12     	; 0x304 <_ZL9lcd_writehh+0x62>
     2f8:	eb e2       	ldi	r30, 0x2B	; 43
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	80 81       	ld	r24, Z
     2fe:	80 62       	ori	r24, 0x20	; 32
     300:	80 83       	st	Z, r24
     302:	05 c0       	rjmp	.+10     	; 0x30e <_ZL9lcd_writehh+0x6c>
     304:	eb e2       	ldi	r30, 0x2B	; 43
     306:	f0 e0       	ldi	r31, 0x00	; 0
     308:	80 81       	ld	r24, Z
     30a:	8f 7d       	andi	r24, 0xDF	; 223
     30c:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(4));
     30e:	94 ff       	sbrs	r25, 4
     310:	06 c0       	rjmp	.+12     	; 0x31e <_ZL9lcd_writehh+0x7c>
     312:	eb e2       	ldi	r30, 0x2B	; 43
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	80 81       	ld	r24, Z
     318:	80 61       	ori	r24, 0x10	; 16
     31a:	80 83       	st	Z, r24
     31c:	05 c0       	rjmp	.+10     	; 0x328 <_ZL9lcd_writehh+0x86>
     31e:	eb e2       	ldi	r30, 0x2B	; 43
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 81       	ld	r24, Z
     324:	8f 7e       	andi	r24, 0xEF	; 239
     326:	80 83       	st	Z, r24

      Delay_ns(100);
     328:	00 c0       	rjmp	.+0      	; 0x32a <_ZL9lcd_writehh+0x88>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     32a:	eb e2       	ldi	r30, 0x2B	; 43
     32c:	f0 e0       	ldi	r31, 0x00	; 0
     32e:	80 81       	ld	r24, Z
     330:	84 60       	ori	r24, 0x04	; 4
     332:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(4));

      Delay_ns(100);
      lcd_e_port_high();

      Delay_ns(500);
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	8a 95       	dec	r24
     338:	f1 f7       	brne	.-4      	; 0x336 <_ZL9lcd_writehh+0x94>
     33a:	00 c0       	rjmp	.+0      	; 0x33c <_ZL9lcd_writehh+0x9a>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     33c:	80 81       	ld	r24, Z
     33e:	8b 7f       	andi	r24, 0xFB	; 251
     340:	80 83       	st	Z, r24
      lcd_e_port_high();

      Delay_ns(500);
      lcd_e_port_low();

      lcd_db7_port_set(data&_BV(3));                  //Output High Nibble
     342:	93 ff       	sbrs	r25, 3
     344:	04 c0       	rjmp	.+8      	; 0x34e <_ZL9lcd_writehh+0xac>
     346:	80 81       	ld	r24, Z
     348:	80 68       	ori	r24, 0x80	; 128
     34a:	80 83       	st	Z, r24
     34c:	05 c0       	rjmp	.+10     	; 0x358 <_ZL9lcd_writehh+0xb6>
     34e:	eb e2       	ldi	r30, 0x2B	; 43
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	80 81       	ld	r24, Z
     354:	8f 77       	andi	r24, 0x7F	; 127
     356:	80 83       	st	Z, r24
      lcd_db6_port_set(data&_BV(2));
     358:	92 ff       	sbrs	r25, 2
     35a:	06 c0       	rjmp	.+12     	; 0x368 <_ZL9lcd_writehh+0xc6>
     35c:	eb e2       	ldi	r30, 0x2B	; 43
     35e:	f0 e0       	ldi	r31, 0x00	; 0
     360:	80 81       	ld	r24, Z
     362:	80 64       	ori	r24, 0x40	; 64
     364:	80 83       	st	Z, r24
     366:	05 c0       	rjmp	.+10     	; 0x372 <_ZL9lcd_writehh+0xd0>
     368:	eb e2       	ldi	r30, 0x2B	; 43
     36a:	f0 e0       	ldi	r31, 0x00	; 0
     36c:	80 81       	ld	r24, Z
     36e:	8f 7b       	andi	r24, 0xBF	; 191
     370:	80 83       	st	Z, r24
      lcd_db5_port_set(data&_BV(1));
     372:	91 ff       	sbrs	r25, 1
     374:	06 c0       	rjmp	.+12     	; 0x382 <_ZL9lcd_writehh+0xe0>
     376:	eb e2       	ldi	r30, 0x2B	; 43
     378:	f0 e0       	ldi	r31, 0x00	; 0
     37a:	80 81       	ld	r24, Z
     37c:	80 62       	ori	r24, 0x20	; 32
     37e:	80 83       	st	Z, r24
     380:	05 c0       	rjmp	.+10     	; 0x38c <_ZL9lcd_writehh+0xea>
     382:	eb e2       	ldi	r30, 0x2B	; 43
     384:	f0 e0       	ldi	r31, 0x00	; 0
     386:	80 81       	ld	r24, Z
     388:	8f 7d       	andi	r24, 0xDF	; 223
     38a:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(0));
     38c:	90 ff       	sbrs	r25, 0
     38e:	06 c0       	rjmp	.+12     	; 0x39c <_ZL9lcd_writehh+0xfa>
     390:	eb e2       	ldi	r30, 0x2B	; 43
     392:	f0 e0       	ldi	r31, 0x00	; 0
     394:	80 81       	ld	r24, Z
     396:	80 61       	ori	r24, 0x10	; 16
     398:	80 83       	st	Z, r24
     39a:	05 c0       	rjmp	.+10     	; 0x3a6 <_ZL9lcd_writehh+0x104>
     39c:	eb e2       	ldi	r30, 0x2B	; 43
     39e:	f0 e0       	ldi	r31, 0x00	; 0
     3a0:	80 81       	ld	r24, Z
     3a2:	8f 7e       	andi	r24, 0xEF	; 239
     3a4:	80 83       	st	Z, r24

      Delay_ns(100);
     3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <_ZL9lcd_writehh+0x106>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     3a8:	eb e2       	ldi	r30, 0x2B	; 43
     3aa:	f0 e0       	ldi	r31, 0x00	; 0
     3ac:	80 81       	ld	r24, Z
     3ae:	84 60       	ori	r24, 0x04	; 4
     3b0:	80 83       	st	Z, r24
      lcd_db4_port_set(data&_BV(0));

      Delay_ns(100);
      lcd_e_port_high();

      Delay_ns(500);
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	9a 95       	dec	r25
     3b6:	f1 f7       	brne	.-4      	; 0x3b4 <_ZL9lcd_writehh+0x112>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <_ZL9lcd_writehh+0x118>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     3ba:	80 81       	ld	r24, Z
     3bc:	8b 7f       	andi	r24, 0xFB	; 251
     3be:	80 83       	st	Z, r24
      lcd_e_port_high();

      Delay_ns(500);
      lcd_e_port_low();

      lcd_db7_port_high();                            // All Data Pins High (Inactive)
     3c0:	80 81       	ld	r24, Z
     3c2:	80 68       	ori	r24, 0x80	; 128
     3c4:	80 83       	st	Z, r24
      lcd_db6_port_high();
     3c6:	80 81       	ld	r24, Z
     3c8:	80 64       	ori	r24, 0x40	; 64
     3ca:	80 83       	st	Z, r24
      lcd_db5_port_high();
     3cc:	80 81       	ld	r24, Z
     3ce:	80 62       	ori	r24, 0x20	; 32
     3d0:	80 83       	st	Z, r24
      lcd_db4_port_high();
     3d2:	80 81       	ld	r24, Z
     3d4:	80 61       	ori	r24, 0x10	; 16
     3d6:	80 83       	st	Z, r24
      lcd_db1_port_high();
      lcd_db0_port_high();
    #endif

    #if (WAIT_MODE==0 || RW_LINE_IMPLEMENTED==0)
      if (!rs && data<=((1<<LCD_CLR) | (1<<LCD_HOME))) // Is command clrscr or home?
     3d8:	66 23       	and	r22, r22
     3da:	49 f4       	brne	.+18     	; 0x3ee <_ZL9lcd_writehh+0x14c>
     3dc:	24 30       	cpi	r18, 0x04	; 4
     3de:	38 f4       	brcc	.+14     	; 0x3ee <_ZL9lcd_writehh+0x14c>
        Delay_us(1640);
     3e0:	8f e9       	ldi	r24, 0x9F	; 159
     3e2:	99 e1       	ldi	r25, 0x19	; 25
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <_ZL9lcd_writehh+0x142>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <_ZL9lcd_writehh+0x148>
     3ea:	00 00       	nop
     3ec:	08 95       	ret
      else Delay_us(40);
     3ee:	95 ed       	ldi	r25, 0xD5	; 213
     3f0:	9a 95       	dec	r25
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <_ZL9lcd_writehh+0x14e>
     3f4:	00 00       	nop
     3f6:	08 95       	ret

000003f8 <_Z8lcd_putcc>:
Input:    character to be displayed
Returns:  none
*************************************************************************/
void lcd_putc(char c)
  {
    lcd_write(c,1);
     3f8:	61 e0       	ldi	r22, 0x01	; 1
     3fa:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_ZL9lcd_writehh>
  }
     3fe:	08 95       	ret

00000400 <_Z8lcd_putsPKc>:
/*************************************************************************
Display string
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
     400:	cf 93       	push	r28
     402:	df 93       	push	r29
     404:	fc 01       	movw	r30, r24
  {
    register char c;

    while ((c=*s++)) 
     406:	80 81       	ld	r24, Z
     408:	88 23       	and	r24, r24
     40a:	39 f0       	breq	.+14     	; 0x41a <_Z8lcd_putsPKc+0x1a>
     40c:	ef 01       	movw	r28, r30
      lcd_putc(c);
     40e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <_Z8lcd_putcc>
*************************************************************************/
void lcd_puts(const char *s)
  {
    register char c;

    while ((c=*s++)) 
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	21 96       	adiw	r28, 0x01	; 1
     416:	88 23       	and	r24, r24
     418:	d1 f7       	brne	.-12     	; 0x40e <_Z8lcd_putsPKc+0xe>
      lcd_putc(c);
  }
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	08 95       	ret

00000420 <_Z11lcd_commandh>:
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
  {
    lcd_write(cmd,0);
     420:	60 e0       	ldi	r22, 0x00	; 0
     422:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_ZL9lcd_writehh>
  }
     426:	08 95       	ret

00000428 <_Z10lcd_clrscrv>:
Input:    none
Returns:  none
*************************************************************************/
void lcd_clrscr()
  {
    lcd_command(1<<LCD_CLR);
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	0e 94 10 02 	call	0x420	; 0x420 <_Z11lcd_commandh>
  }
     42e:	08 95       	ret

00000430 <_Z8lcd_gotoh>:
Input:    pos position
Returns:  none
*************************************************************************/
void lcd_goto(uint8_t pos)
  {
    lcd_command((1<<LCD_DDRAM)+pos);
     430:	80 58       	subi	r24, 0x80	; 128
     432:	0e 94 10 02 	call	0x420	; 0x420 <_Z11lcd_commandh>
  }
     436:	08 95       	ret

00000438 <_Z7AfisareiPc>:
		if (adc_key_in < 850)  return btnSELECT;  

		return btnNONE;  // when all others fail, return this...
	}
	
void Afisare(int Cursor, char* Date_Afisare)
     438:	0f 93       	push	r16
     43a:	1f 93       	push	r17
     43c:	8b 01       	movw	r16, r22
	{
		lcd_goto(Cursor);
     43e:	0e 94 18 02 	call	0x430	; 0x430 <_Z8lcd_gotoh>
		lcd_puts(Date_Afisare);
     442:	c8 01       	movw	r24, r16
     444:	0e 94 00 02 	call	0x400	; 0x400 <_Z8lcd_putsPKc>
	}	
     448:	1f 91       	pop	r17
     44a:	0f 91       	pop	r16
     44c:	08 95       	ret

0000044e <_Z21MeniulSecundarSettingv>:
	{
		lcd_clrscr();
		Afisare(Inceputul_liniei_1, "start");
	}

void MeniulSecundarSetting()
     44e:	2f 92       	push	r2
     450:	3f 92       	push	r3
     452:	4f 92       	push	r4
     454:	5f 92       	push	r5
     456:	6f 92       	push	r6
     458:	7f 92       	push	r7
     45a:	8f 92       	push	r8
     45c:	9f 92       	push	r9
     45e:	af 92       	push	r10
     460:	bf 92       	push	r11
     462:	df 92       	push	r13
     464:	ef 92       	push	r14
     466:	ff 92       	push	r15
     468:	0f 93       	push	r16
     46a:	1f 93       	push	r17
     46c:	cf 93       	push	r28
     46e:	df 93       	push	r29
	{
		bool Afisare_LCD=true;
		bool Citire_buton=true;
		bool Fanion_contor_1 = false;
		bool Fanion_contor_2 = false;
		pozitia_cursor=0;
     470:	10 92 c2 01 	sts	0x01C2, r1
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	ee 24       	eor	r14, r14
     478:	e3 94       	inc	r14
     47a:	00 e0       	ldi	r16, 0x00	; 0
     47c:	ff 24       	eor	r15, r15
										Afisare(Inceputul_liniei_2+1, buffer);
										break;
									}
								case 1:
									{
										sprintf(buffer, "Lung.bob=%lumm", Lungimea_bobinei);
     47e:	c0 e9       	ldi	r28, 0x90	; 144
     480:	d1 e0       	ldi	r29, 0x01	; 1
     482:	0f 2e       	mov	r0, r31
     484:	f1 e1       	ldi	r31, 0x11	; 17
     486:	6f 2e       	mov	r6, r31
     488:	f1 e0       	ldi	r31, 0x01	; 1
     48a:	7f 2e       	mov	r7, r31
     48c:	f0 2d       	mov	r31, r0
										Afisare(Inceputul_liniei_1+1, buffer);
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
     48e:	0f 2e       	mov	r0, r31
     490:	f0 e2       	ldi	r31, 0x20	; 32
     492:	4f 2e       	mov	r4, r31
     494:	f1 e0       	ldi	r31, 0x01	; 1
     496:	5f 2e       	mov	r5, r31
     498:	f0 2d       	mov	r31, r0
									}
								case 2:
									{
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
										Afisare(Inceputul_liniei_1+1, buffer);
										sprintf(buffer, "Coef.dp=%.2f", Coef_deplasare);
     49a:	0f 2e       	mov	r0, r31
     49c:	fa e2       	ldi	r31, 0x2A	; 42
     49e:	2f 2e       	mov	r2, r31
     4a0:	f1 e0       	ldi	r31, 0x01	; 1
     4a2:	3f 2e       	mov	r3, r31
     4a4:	f0 2d       	mov	r31, r0
								Afisare(Inceputul_liniei_1, ">");
								Afisare(Inceputul_liniei_2, " ");
							}
						else
							{
								Afisare(Inceputul_liniei_1, " ");
     4a6:	0f 2e       	mov	r0, r31
     4a8:	f2 e0       	ldi	r31, 0x02	; 2
     4aa:	af 2e       	mov	r10, r31
     4ac:	f1 e0       	ldi	r31, 0x01	; 1
     4ae:	bf 2e       	mov	r11, r31
     4b0:	f0 2d       	mov	r31, r0
								Afisare(Inceputul_liniei_2, ">");
     4b2:	0f 2e       	mov	r0, r31
     4b4:	f0 e0       	ldi	r31, 0x00	; 0
     4b6:	8f 2e       	mov	r8, r31
     4b8:	f1 e0       	ldi	r31, 0x01	; 1
     4ba:	9f 2e       	mov	r9, r31
     4bc:	f0 2d       	mov	r31, r0
								Citire_buton=false;
							}
					}
				else
					{
						Timer2_OFF();
     4be:	dd 24       	eor	r13, r13
     4c0:	d3 94       	inc	r13
				if(Button != btnNONE)	
					{
						if(Citire_buton==true)
							{
								Contor_timer2=0;
								Timer2_ON();
     4c2:	10 e0       	ldi	r17, 0x00	; 0
     4c4:	01 c0       	rjmp	.+2      	; 0x4c8 <_Z21MeniulSecundarSettingv+0x7a>
	{
		bool Afisare_LCD=true;
		bool Citire_buton=true;
		bool Fanion_contor_1 = false;
		bool Fanion_contor_2 = false;
		pozitia_cursor=0;
     4c6:	81 2f       	mov	r24, r17
		
		do
			{
				if(Afisare_LCD == true)
     4c8:	88 23       	and	r24, r24
     4ca:	09 f4       	brne	.+2      	; 0x4ce <_Z21MeniulSecundarSettingv+0x80>
     4cc:	80 c1       	rjmp	.+768    	; 0x7ce <_Z21MeniulSecundarSettingv+0x380>
					{
						lcd_clrscr();
     4ce:	0e 94 14 02 	call	0x428	; 0x428 <_Z10lcd_clrscrv>
						if(pozitia_cursor==0)
     4d2:	80 91 c2 01 	lds	r24, 0x01C2
     4d6:	88 23       	and	r24, r24
     4d8:	59 f4       	brne	.+22     	; 0x4f0 <_Z21MeniulSecundarSettingv+0xa2>
							{
								Afisare(Inceputul_liniei_1, ">");
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	b4 01       	movw	r22, r8
     4e0:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, " ");
     4e4:	80 e4       	ldi	r24, 0x40	; 64
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	b5 01       	movw	r22, r10
     4ea:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
     4ee:	0a c0       	rjmp	.+20     	; 0x504 <_Z21MeniulSecundarSettingv+0xb6>
							}
						else
							{
								Afisare(Inceputul_liniei_1, " ");
     4f0:	80 e0       	ldi	r24, 0x00	; 0
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	b5 01       	movw	r22, r10
     4f6:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, ">");
     4fa:	80 e4       	ldi	r24, 0x40	; 64
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	b4 01       	movw	r22, r8
     500:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
							}
				
						switch(imaginea)
     504:	80 91 c3 01 	lds	r24, 0x01C3
     508:	81 30       	cpi	r24, 0x01	; 1
     50a:	09 f4       	brne	.+2      	; 0x50e <_Z21MeniulSecundarSettingv+0xc0>
     50c:	60 c0       	rjmp	.+192    	; 0x5ce <_Z21MeniulSecundarSettingv+0x180>
     50e:	81 30       	cpi	r24, 0x01	; 1
     510:	38 f0       	brcs	.+14     	; 0x520 <_Z21MeniulSecundarSettingv+0xd2>
     512:	82 30       	cpi	r24, 0x02	; 2
     514:	09 f4       	brne	.+2      	; 0x518 <_Z21MeniulSecundarSettingv+0xca>
     516:	b0 c0       	rjmp	.+352    	; 0x678 <_Z21MeniulSecundarSettingv+0x22a>
     518:	83 30       	cpi	r24, 0x03	; 3
     51a:	09 f0       	breq	.+2      	; 0x51e <_Z21MeniulSecundarSettingv+0xd0>
     51c:	58 c1       	rjmp	.+688    	; 0x7ce <_Z21MeniulSecundarSettingv+0x380>
     51e:	01 c1       	rjmp	.+514    	; 0x722 <_Z21MeniulSecundarSettingv+0x2d4>
							{
								case 0:
									{
										sprintf(buffer, "D.fir=%.4fmm", Diametrul_sarmei);
     520:	8d b7       	in	r24, 0x3d	; 61
     522:	9e b7       	in	r25, 0x3e	; 62
     524:	08 97       	sbiw	r24, 0x08	; 8
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	9e bf       	out	0x3e, r25	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	8d bf       	out	0x3d, r24	; 61
     530:	ed b7       	in	r30, 0x3d	; 61
     532:	fe b7       	in	r31, 0x3e	; 62
     534:	31 96       	adiw	r30, 0x01	; 1
     536:	d1 83       	std	Z+1, r29	; 0x01
     538:	c0 83       	st	Z, r28
     53a:	84 e0       	ldi	r24, 0x04	; 4
     53c:	91 e0       	ldi	r25, 0x01	; 1
     53e:	93 83       	std	Z+3, r25	; 0x03
     540:	82 83       	std	Z+2, r24	; 0x02
     542:	80 91 82 01 	lds	r24, 0x0182
     546:	90 91 83 01 	lds	r25, 0x0183
     54a:	a0 91 84 01 	lds	r26, 0x0184
     54e:	b0 91 85 01 	lds	r27, 0x0185
     552:	84 83       	std	Z+4, r24	; 0x04
     554:	95 83       	std	Z+5, r25	; 0x05
     556:	a6 83       	std	Z+6, r26	; 0x06
     558:	b7 83       	std	Z+7, r27	; 0x07
     55a:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_1+1, buffer);
     55e:	8d b7       	in	r24, 0x3d	; 61
     560:	9e b7       	in	r25, 0x3e	; 62
     562:	08 96       	adiw	r24, 0x08	; 8
     564:	0f b6       	in	r0, 0x3f	; 63
     566:	f8 94       	cli
     568:	9e bf       	out	0x3e, r25	; 62
     56a:	0f be       	out	0x3f, r0	; 63
     56c:	8d bf       	out	0x3d, r24	; 61
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	be 01       	movw	r22, r28
     574:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
										sprintf(buffer, "Lung.bob=%lumm", Lungimea_bobinei);
     578:	8d b7       	in	r24, 0x3d	; 61
     57a:	9e b7       	in	r25, 0x3e	; 62
     57c:	08 97       	sbiw	r24, 0x08	; 8
     57e:	0f b6       	in	r0, 0x3f	; 63
     580:	f8 94       	cli
     582:	9e bf       	out	0x3e, r25	; 62
     584:	0f be       	out	0x3f, r0	; 63
     586:	8d bf       	out	0x3d, r24	; 61
     588:	ed b7       	in	r30, 0x3d	; 61
     58a:	fe b7       	in	r31, 0x3e	; 62
     58c:	31 96       	adiw	r30, 0x01	; 1
     58e:	d1 83       	std	Z+1, r29	; 0x01
     590:	c0 83       	st	Z, r28
     592:	73 82       	std	Z+3, r7	; 0x03
     594:	62 82       	std	Z+2, r6	; 0x02
     596:	80 91 7a 01 	lds	r24, 0x017A
     59a:	90 91 7b 01 	lds	r25, 0x017B
     59e:	a0 91 7c 01 	lds	r26, 0x017C
     5a2:	b0 91 7d 01 	lds	r27, 0x017D
     5a6:	84 83       	std	Z+4, r24	; 0x04
     5a8:	95 83       	std	Z+5, r25	; 0x05
     5aa:	a6 83       	std	Z+6, r26	; 0x06
     5ac:	b7 83       	std	Z+7, r27	; 0x07
     5ae:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_2+1, buffer);
     5b2:	8d b7       	in	r24, 0x3d	; 61
     5b4:	9e b7       	in	r25, 0x3e	; 62
     5b6:	08 96       	adiw	r24, 0x08	; 8
     5b8:	0f b6       	in	r0, 0x3f	; 63
     5ba:	f8 94       	cli
     5bc:	9e bf       	out	0x3e, r25	; 62
     5be:	0f be       	out	0x3f, r0	; 63
     5c0:	8d bf       	out	0x3d, r24	; 61
     5c2:	81 e4       	ldi	r24, 0x41	; 65
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	be 01       	movw	r22, r28
     5c8:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
     5cc:	00 c1       	rjmp	.+512    	; 0x7ce <_Z21MeniulSecundarSettingv+0x380>
										break;
									}
								case 1:
									{
										sprintf(buffer, "Lung.bob=%lumm", Lungimea_bobinei);
     5ce:	8d b7       	in	r24, 0x3d	; 61
     5d0:	9e b7       	in	r25, 0x3e	; 62
     5d2:	08 97       	sbiw	r24, 0x08	; 8
     5d4:	0f b6       	in	r0, 0x3f	; 63
     5d6:	f8 94       	cli
     5d8:	9e bf       	out	0x3e, r25	; 62
     5da:	0f be       	out	0x3f, r0	; 63
     5dc:	8d bf       	out	0x3d, r24	; 61
     5de:	ed b7       	in	r30, 0x3d	; 61
     5e0:	fe b7       	in	r31, 0x3e	; 62
     5e2:	31 96       	adiw	r30, 0x01	; 1
     5e4:	d1 83       	std	Z+1, r29	; 0x01
     5e6:	c0 83       	st	Z, r28
     5e8:	73 82       	std	Z+3, r7	; 0x03
     5ea:	62 82       	std	Z+2, r6	; 0x02
     5ec:	80 91 7a 01 	lds	r24, 0x017A
     5f0:	90 91 7b 01 	lds	r25, 0x017B
     5f4:	a0 91 7c 01 	lds	r26, 0x017C
     5f8:	b0 91 7d 01 	lds	r27, 0x017D
     5fc:	84 83       	std	Z+4, r24	; 0x04
     5fe:	95 83       	std	Z+5, r25	; 0x05
     600:	a6 83       	std	Z+6, r26	; 0x06
     602:	b7 83       	std	Z+7, r27	; 0x07
     604:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_1+1, buffer);
     608:	8d b7       	in	r24, 0x3d	; 61
     60a:	9e b7       	in	r25, 0x3e	; 62
     60c:	08 96       	adiw	r24, 0x08	; 8
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	9e bf       	out	0x3e, r25	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	8d bf       	out	0x3d, r24	; 61
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	be 01       	movw	r22, r28
     61e:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
     622:	8d b7       	in	r24, 0x3d	; 61
     624:	9e b7       	in	r25, 0x3e	; 62
     626:	08 97       	sbiw	r24, 0x08	; 8
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	f8 94       	cli
     62c:	9e bf       	out	0x3e, r25	; 62
     62e:	0f be       	out	0x3f, r0	; 63
     630:	8d bf       	out	0x3d, r24	; 61
     632:	ed b7       	in	r30, 0x3d	; 61
     634:	fe b7       	in	r31, 0x3e	; 62
     636:	31 96       	adiw	r30, 0x01	; 1
     638:	d1 83       	std	Z+1, r29	; 0x01
     63a:	c0 83       	st	Z, r28
     63c:	53 82       	std	Z+3, r5	; 0x03
     63e:	42 82       	std	Z+2, r4	; 0x02
     640:	80 91 7e 01 	lds	r24, 0x017E
     644:	90 91 7f 01 	lds	r25, 0x017F
     648:	a0 91 80 01 	lds	r26, 0x0180
     64c:	b0 91 81 01 	lds	r27, 0x0181
     650:	84 83       	std	Z+4, r24	; 0x04
     652:	95 83       	std	Z+5, r25	; 0x05
     654:	a6 83       	std	Z+6, r26	; 0x06
     656:	b7 83       	std	Z+7, r27	; 0x07
     658:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_2+1, buffer);
     65c:	8d b7       	in	r24, 0x3d	; 61
     65e:	9e b7       	in	r25, 0x3e	; 62
     660:	08 96       	adiw	r24, 0x08	; 8
     662:	0f b6       	in	r0, 0x3f	; 63
     664:	f8 94       	cli
     666:	9e bf       	out	0x3e, r25	; 62
     668:	0f be       	out	0x3f, r0	; 63
     66a:	8d bf       	out	0x3d, r24	; 61
     66c:	81 e4       	ldi	r24, 0x41	; 65
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	be 01       	movw	r22, r28
     672:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
     676:	ab c0       	rjmp	.+342    	; 0x7ce <_Z21MeniulSecundarSettingv+0x380>
										break;
									}
								case 2:
									{
										sprintf(buffer, "Nr.sp=%lu", Nr_spire);
     678:	8d b7       	in	r24, 0x3d	; 61
     67a:	9e b7       	in	r25, 0x3e	; 62
     67c:	08 97       	sbiw	r24, 0x08	; 8
     67e:	0f b6       	in	r0, 0x3f	; 63
     680:	f8 94       	cli
     682:	9e bf       	out	0x3e, r25	; 62
     684:	0f be       	out	0x3f, r0	; 63
     686:	8d bf       	out	0x3d, r24	; 61
     688:	ed b7       	in	r30, 0x3d	; 61
     68a:	fe b7       	in	r31, 0x3e	; 62
     68c:	31 96       	adiw	r30, 0x01	; 1
     68e:	d1 83       	std	Z+1, r29	; 0x01
     690:	c0 83       	st	Z, r28
     692:	53 82       	std	Z+3, r5	; 0x03
     694:	42 82       	std	Z+2, r4	; 0x02
     696:	80 91 7e 01 	lds	r24, 0x017E
     69a:	90 91 7f 01 	lds	r25, 0x017F
     69e:	a0 91 80 01 	lds	r26, 0x0180
     6a2:	b0 91 81 01 	lds	r27, 0x0181
     6a6:	84 83       	std	Z+4, r24	; 0x04
     6a8:	95 83       	std	Z+5, r25	; 0x05
     6aa:	a6 83       	std	Z+6, r26	; 0x06
     6ac:	b7 83       	std	Z+7, r27	; 0x07
     6ae:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_1+1, buffer);
     6b2:	8d b7       	in	r24, 0x3d	; 61
     6b4:	9e b7       	in	r25, 0x3e	; 62
     6b6:	08 96       	adiw	r24, 0x08	; 8
     6b8:	0f b6       	in	r0, 0x3f	; 63
     6ba:	f8 94       	cli
     6bc:	9e bf       	out	0x3e, r25	; 62
     6be:	0f be       	out	0x3f, r0	; 63
     6c0:	8d bf       	out	0x3d, r24	; 61
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	be 01       	movw	r22, r28
     6c8:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
										sprintf(buffer, "Coef.dp=%.2f", Coef_deplasare);
     6cc:	8d b7       	in	r24, 0x3d	; 61
     6ce:	9e b7       	in	r25, 0x3e	; 62
     6d0:	08 97       	sbiw	r24, 0x08	; 8
     6d2:	0f b6       	in	r0, 0x3f	; 63
     6d4:	f8 94       	cli
     6d6:	9e bf       	out	0x3e, r25	; 62
     6d8:	0f be       	out	0x3f, r0	; 63
     6da:	8d bf       	out	0x3d, r24	; 61
     6dc:	ed b7       	in	r30, 0x3d	; 61
     6de:	fe b7       	in	r31, 0x3e	; 62
     6e0:	31 96       	adiw	r30, 0x01	; 1
     6e2:	d1 83       	std	Z+1, r29	; 0x01
     6e4:	c0 83       	st	Z, r28
     6e6:	33 82       	std	Z+3, r3	; 0x03
     6e8:	22 82       	std	Z+2, r2	; 0x02
     6ea:	80 91 86 01 	lds	r24, 0x0186
     6ee:	90 91 87 01 	lds	r25, 0x0187
     6f2:	a0 91 88 01 	lds	r26, 0x0188
     6f6:	b0 91 89 01 	lds	r27, 0x0189
     6fa:	84 83       	std	Z+4, r24	; 0x04
     6fc:	95 83       	std	Z+5, r25	; 0x05
     6fe:	a6 83       	std	Z+6, r26	; 0x06
     700:	b7 83       	std	Z+7, r27	; 0x07
     702:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_2+1, buffer);
     706:	8d b7       	in	r24, 0x3d	; 61
     708:	9e b7       	in	r25, 0x3e	; 62
     70a:	08 96       	adiw	r24, 0x08	; 8
     70c:	0f b6       	in	r0, 0x3f	; 63
     70e:	f8 94       	cli
     710:	9e bf       	out	0x3e, r25	; 62
     712:	0f be       	out	0x3f, r0	; 63
     714:	8d bf       	out	0x3d, r24	; 61
     716:	81 e4       	ldi	r24, 0x41	; 65
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	be 01       	movw	r22, r28
     71c:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
     720:	56 c0       	rjmp	.+172    	; 0x7ce <_Z21MeniulSecundarSettingv+0x380>
										break;
									}
								case 3:
									{
										sprintf(buffer, "Coef.dp=%.2f", Coef_deplasare);
     722:	8d b7       	in	r24, 0x3d	; 61
     724:	9e b7       	in	r25, 0x3e	; 62
     726:	08 97       	sbiw	r24, 0x08	; 8
     728:	0f b6       	in	r0, 0x3f	; 63
     72a:	f8 94       	cli
     72c:	9e bf       	out	0x3e, r25	; 62
     72e:	0f be       	out	0x3f, r0	; 63
     730:	8d bf       	out	0x3d, r24	; 61
     732:	ed b7       	in	r30, 0x3d	; 61
     734:	fe b7       	in	r31, 0x3e	; 62
     736:	31 96       	adiw	r30, 0x01	; 1
     738:	d1 83       	std	Z+1, r29	; 0x01
     73a:	c0 83       	st	Z, r28
     73c:	33 82       	std	Z+3, r3	; 0x03
     73e:	22 82       	std	Z+2, r2	; 0x02
     740:	80 91 86 01 	lds	r24, 0x0186
     744:	90 91 87 01 	lds	r25, 0x0187
     748:	a0 91 88 01 	lds	r26, 0x0188
     74c:	b0 91 89 01 	lds	r27, 0x0189
     750:	84 83       	std	Z+4, r24	; 0x04
     752:	95 83       	std	Z+5, r25	; 0x05
     754:	a6 83       	std	Z+6, r26	; 0x06
     756:	b7 83       	std	Z+7, r27	; 0x07
     758:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_1+1, buffer);
     75c:	8d b7       	in	r24, 0x3d	; 61
     75e:	9e b7       	in	r25, 0x3e	; 62
     760:	08 96       	adiw	r24, 0x08	; 8
     762:	0f b6       	in	r0, 0x3f	; 63
     764:	f8 94       	cli
     766:	9e bf       	out	0x3e, r25	; 62
     768:	0f be       	out	0x3f, r0	; 63
     76a:	8d bf       	out	0x3d, r24	; 61
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	be 01       	movw	r22, r28
     772:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
										sprintf(buffer, "NrBobin/s=%.1f", Nr_bobinarisecunda);
     776:	8d b7       	in	r24, 0x3d	; 61
     778:	9e b7       	in	r25, 0x3e	; 62
     77a:	08 97       	sbiw	r24, 0x08	; 8
     77c:	0f b6       	in	r0, 0x3f	; 63
     77e:	f8 94       	cli
     780:	9e bf       	out	0x3e, r25	; 62
     782:	0f be       	out	0x3f, r0	; 63
     784:	8d bf       	out	0x3d, r24	; 61
     786:	ed b7       	in	r30, 0x3d	; 61
     788:	fe b7       	in	r31, 0x3e	; 62
     78a:	31 96       	adiw	r30, 0x01	; 1
     78c:	d1 83       	std	Z+1, r29	; 0x01
     78e:	c0 83       	st	Z, r28
     790:	87 e3       	ldi	r24, 0x37	; 55
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	93 83       	std	Z+3, r25	; 0x03
     796:	82 83       	std	Z+2, r24	; 0x02
     798:	80 91 8a 01 	lds	r24, 0x018A
     79c:	90 91 8b 01 	lds	r25, 0x018B
     7a0:	a0 91 8c 01 	lds	r26, 0x018C
     7a4:	b0 91 8d 01 	lds	r27, 0x018D
     7a8:	84 83       	std	Z+4, r24	; 0x04
     7aa:	95 83       	std	Z+5, r25	; 0x05
     7ac:	a6 83       	std	Z+6, r26	; 0x06
     7ae:	b7 83       	std	Z+7, r27	; 0x07
     7b0:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
										Afisare(Inceputul_liniei_2+1, buffer);
     7b4:	8d b7       	in	r24, 0x3d	; 61
     7b6:	9e b7       	in	r25, 0x3e	; 62
     7b8:	08 96       	adiw	r24, 0x08	; 8
     7ba:	0f b6       	in	r0, 0x3f	; 63
     7bc:	f8 94       	cli
     7be:	9e bf       	out	0x3e, r25	; 62
     7c0:	0f be       	out	0x3f, r0	; 63
     7c2:	8d bf       	out	0x3d, r24	; 61
     7c4:	81 e4       	ldi	r24, 0x41	; 65
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	be 01       	movw	r22, r28
     7ca:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
										break;
									}
							}
					}
				
				Button = read_LCD_buttons();
     7ce:	0e 94 0e 01 	call	0x21c	; 0x21c <_Z16read_LCD_buttonsv>
     7d2:	80 93 79 01 	sts	0x0179, r24

				if(Button != btnNONE)	
     7d6:	85 30       	cpi	r24, 0x05	; 5
     7d8:	51 f0       	breq	.+20     	; 0x7ee <_Z21MeniulSecundarSettingv+0x3a0>
					{
						if(Citire_buton==true)
     7da:	ee 20       	and	r14, r14
     7dc:	59 f0       	breq	.+22     	; 0x7f4 <_Z21MeniulSecundarSettingv+0x3a6>
							{
								Contor_timer2=0;
     7de:	10 92 8f 01 	sts	0x018F, r1
     7e2:	10 92 8e 01 	sts	0x018E, r1
								Timer2_ON();
     7e6:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_Z9Timer2_ONv>
     7ea:	e1 2e       	mov	r14, r17
     7ec:	03 c0       	rjmp	.+6      	; 0x7f4 <_Z21MeniulSecundarSettingv+0x3a6>
								Citire_buton=false;
							}
					}
				else
					{
						Timer2_OFF();
     7ee:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_Z10Timer2_OFFv>
     7f2:	ed 2c       	mov	r14, r13
						Citire_buton=true;
					}
				
				Afisare_LCD=false;	
				
				if(Contor_timer2 < 300)
     7f4:	80 91 8e 01 	lds	r24, 0x018E
     7f8:	90 91 8f 01 	lds	r25, 0x018F
     7fc:	8c 52       	subi	r24, 0x2C	; 44
     7fe:	91 40       	sbci	r25, 0x01	; 1
     800:	28 f4       	brcc	.+10     	; 0x80c <_Z21MeniulSecundarSettingv+0x3be>
					{
						if(Fanion_contor_2 == false)
     802:	ff 20       	and	r15, r15
     804:	41 f4       	brne	.+16     	; 0x816 <_Z21MeniulSecundarSettingv+0x3c8>
     806:	0d 2d       	mov	r16, r13
     808:	fd 2c       	mov	r15, r13
     80a:	05 c0       	rjmp	.+10     	; 0x816 <_Z21MeniulSecundarSettingv+0x3c8>
							}
					}
				else
					{
						Fanion_contor_2=false;
						Contor_timer2=0;
     80c:	10 92 8f 01 	sts	0x018F, r1
     810:	10 92 8e 01 	sts	0x018E, r1
     814:	f1 2e       	mov	r15, r17
					}
				
				if(Button == btnDOWN)
     816:	90 91 79 01 	lds	r25, 0x0179
     81a:	92 30       	cpi	r25, 0x02	; 2
     81c:	99 f4       	brne	.+38     	; 0x844 <_Z21MeniulSecundarSettingv+0x3f6>
					{
						if(Fanion_contor_1 == true)
     81e:	00 23       	and	r16, r16
     820:	89 f0       	breq	.+34     	; 0x844 <_Z21MeniulSecundarSettingv+0x3f6>
							{
								Fanion_contor_1 = false;
								Afisare_LCD=true;
								if(pozitia_cursor==0)
     822:	80 91 c2 01 	lds	r24, 0x01C2
     826:	88 23       	and	r24, r24
     828:	21 f4       	brne	.+8      	; 0x832 <_Z21MeniulSecundarSettingv+0x3e4>
									pozitia_cursor++;
     82a:	d0 92 c2 01 	sts	0x01C2, r13
     82e:	8d 2d       	mov	r24, r13
     830:	39 c0       	rjmp	.+114    	; 0x8a4 <_Z21MeniulSecundarSettingv+0x456>
								else
									if(imaginea<3)
     832:	80 91 c3 01 	lds	r24, 0x01C3
     836:	83 30       	cpi	r24, 0x03	; 3
     838:	b8 f5       	brcc	.+110    	; 0x8a8 <_Z21MeniulSecundarSettingv+0x45a>
										imaginea++;
     83a:	8f 5f       	subi	r24, 0xFF	; 255
     83c:	80 93 c3 01 	sts	0x01C3, r24
     840:	8d 2d       	mov	r24, r13
     842:	33 c0       	rjmp	.+102    	; 0x8aa <_Z21MeniulSecundarSettingv+0x45c>
								else
									Afisare_LCD=false;
							}
					}
				if(Button == btnUP)
     844:	91 30       	cpi	r25, 0x01	; 1
     846:	a9 f4       	brne	.+42     	; 0x872 <_Z21MeniulSecundarSettingv+0x424>
					{
						if(Fanion_contor_1 == true)
     848:	00 23       	and	r16, r16
     84a:	09 f4       	brne	.+2      	; 0x84e <_Z21MeniulSecundarSettingv+0x400>
     84c:	3c ce       	rjmp	.-904    	; 0x4c6 <_Z21MeniulSecundarSettingv+0x78>
							{
								Fanion_contor_1 = false;
								Afisare_LCD=true;
								if(pozitia_cursor==1)
     84e:	80 91 c2 01 	lds	r24, 0x01C2
     852:	81 30       	cpi	r24, 0x01	; 1
     854:	29 f4       	brne	.+10     	; 0x860 <_Z21MeniulSecundarSettingv+0x412>
								pozitia_cursor--;
     856:	10 93 c2 01 	sts	0x01C2, r17
     85a:	8d 2d       	mov	r24, r13
     85c:	01 2f       	mov	r16, r17
     85e:	34 ce       	rjmp	.-920    	; 0x4c8 <_Z21MeniulSecundarSettingv+0x7a>
								else
									if(imaginea>0)
     860:	80 91 c3 01 	lds	r24, 0x01C3
     864:	88 23       	and	r24, r24
     866:	e9 f0       	breq	.+58     	; 0x8a2 <_Z21MeniulSecundarSettingv+0x454>
										imaginea--;
     868:	81 50       	subi	r24, 0x01	; 1
     86a:	80 93 c3 01 	sts	0x01C3, r24
     86e:	8d 2d       	mov	r24, r13
     870:	19 c0       	rjmp	.+50     	; 0x8a4 <_Z21MeniulSecundarSettingv+0x456>
     872:	81 2f       	mov	r24, r17
		bool Citire_buton=true;
		bool Fanion_contor_1 = false;
		bool Fanion_contor_2 = false;
		pozitia_cursor=0;
		
		do
     874:	94 30       	cpi	r25, 0x04	; 4
     876:	09 f0       	breq	.+2      	; 0x87a <_Z21MeniulSecundarSettingv+0x42c>
     878:	27 ce       	rjmp	.-946    	; 0x4c8 <_Z21MeniulSecundarSettingv+0x7a>
										Nr_bobinarisecunda = Nr_bobinarisecunda - 0.1;
									}
							}*/
					
			}while(Button != btnSELECT);
		Timer2_OFF();
     87a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_Z10Timer2_OFFv>
}	
     87e:	df 91       	pop	r29
     880:	cf 91       	pop	r28
     882:	1f 91       	pop	r17
     884:	0f 91       	pop	r16
     886:	ff 90       	pop	r15
     888:	ef 90       	pop	r14
     88a:	df 90       	pop	r13
     88c:	bf 90       	pop	r11
     88e:	af 90       	pop	r10
     890:	9f 90       	pop	r9
     892:	8f 90       	pop	r8
     894:	7f 90       	pop	r7
     896:	6f 90       	pop	r6
     898:	5f 90       	pop	r5
     89a:	4f 90       	pop	r4
     89c:	3f 90       	pop	r3
     89e:	2f 90       	pop	r2
     8a0:	08 95       	ret
     8a2:	81 2f       	mov	r24, r17
     8a4:	01 2f       	mov	r16, r17
     8a6:	10 ce       	rjmp	.-992    	; 0x4c8 <_Z21MeniulSecundarSettingv+0x7a>
     8a8:	81 2f       	mov	r24, r17
     8aa:	01 2f       	mov	r16, r17
     8ac:	e3 cf       	rjmp	.-58     	; 0x874 <_Z21MeniulSecundarSettingv+0x426>

000008ae <_Z19MeniulSecundarStartv>:
			}while(Button != btnRIGHT && Button != btnSELECT);
	}
	
void MeniulSecundarStart()
	{
		lcd_clrscr();
     8ae:	0e 94 14 02 	call	0x428	; 0x428 <_Z10lcd_clrscrv>
		Afisare(Inceputul_liniei_1, "start");
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	66 e4       	ldi	r22, 0x46	; 70
     8b8:	71 e0       	ldi	r23, 0x01	; 1
     8ba:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
	}
     8be:	08 95       	ret

000008c0 <_Z8lcd_initv>:
      case 4 : DDR(LCD_E4_PORT)|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                DDR(LCD_E_PORT)|=_BV(LCD_E_PIN);
     8c0:	ea e2       	ldi	r30, 0x2A	; 42
     8c2:	f0 e0       	ldi	r31, 0x00	; 0
     8c4:	80 81       	ld	r24, Z
     8c6:	84 60       	ori	r24, 0x04	; 4
     8c8:	80 83       	st	Z, r24
*************************************************************************/
void lcd_init()
  {
    //Set All Pins as Output
    lcd_e_ddr_high();
    lcd_rs_ddr_high();
     8ca:	80 81       	ld	r24, Z
     8cc:	81 60       	ori	r24, 0x01	; 1
     8ce:	80 83       	st	Z, r24
    #if RW_LINE_IMPLEMENTED==1
      lcd_rw_ddr_high();
    #endif
    lcd_db7_ddr_high();
     8d0:	80 81       	ld	r24, Z
     8d2:	80 68       	ori	r24, 0x80	; 128
     8d4:	80 83       	st	Z, r24
    lcd_db6_ddr_high();
     8d6:	80 81       	ld	r24, Z
     8d8:	80 64       	ori	r24, 0x40	; 64
     8da:	80 83       	st	Z, r24
    lcd_db5_ddr_high();
     8dc:	80 81       	ld	r24, Z
     8de:	80 62       	ori	r24, 0x20	; 32
     8e0:	80 83       	st	Z, r24
    lcd_db4_ddr_high();
     8e2:	80 81       	ld	r24, Z
     8e4:	80 61       	ori	r24, 0x10	; 16
     8e6:	80 83       	st	Z, r24
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     8e8:	eb e2       	ldi	r30, 0x2B	; 43
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	80 81       	ld	r24, Z
     8ee:	8b 7f       	andi	r24, 0xFB	; 251
     8f0:	80 83       	st	Z, r24
      lcd_db0_ddr_high();
    #endif

    //Set All Control Lines Low
    lcd_e_port_low();
    lcd_rs_port_low();
     8f2:	80 81       	ld	r24, Z
     8f4:	8e 7f       	andi	r24, 0xFE	; 254
     8f6:	80 83       	st	Z, r24
    #if RW_LINE_IMPLEMENTED==1
      lcd_rw_port_low();
    #endif

    //Set All Data Lines High
    lcd_db7_port_high();
     8f8:	80 81       	ld	r24, Z
     8fa:	80 68       	ori	r24, 0x80	; 128
     8fc:	80 83       	st	Z, r24
    lcd_db6_port_high();
     8fe:	80 81       	ld	r24, Z
     900:	80 64       	ori	r24, 0x40	; 64
     902:	80 83       	st	Z, r24
    lcd_db5_port_high();
     904:	80 81       	ld	r24, Z
     906:	80 62       	ori	r24, 0x20	; 32
     908:	80 83       	st	Z, r24
    lcd_db4_port_high();
     90a:	80 81       	ld	r24, Z
     90c:	80 61       	ori	r24, 0x10	; 16
     90e:	80 83       	st	Z, r24
      lcd_db1_port_high();
      lcd_db0_port_high();
    #endif

    //Startup Delay
    Delay_ms(DELAY_RESET);
     910:	8f e5       	ldi	r24, 0x5F	; 95
     912:	9a ee       	ldi	r25, 0xEA	; 234
     914:	01 97       	sbiw	r24, 0x01	; 1
     916:	f1 f7       	brne	.-4      	; 0x914 <__stack+0x15>
     918:	00 c0       	rjmp	.+0      	; 0x91a <__stack+0x1b>
     91a:	00 00       	nop

    //Initialize Display
    lcd_db7_port_low();
     91c:	80 81       	ld	r24, Z
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	80 83       	st	Z, r24
    lcd_db6_port_low();
     922:	80 81       	ld	r24, Z
     924:	8f 7b       	andi	r24, 0xBF	; 191
     926:	80 83       	st	Z, r24
    Delay_ns(100);
     928:	00 c0       	rjmp	.+0      	; 0x92a <__stack+0x2b>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     92a:	80 81       	ld	r24, Z
     92c:	84 60       	ori	r24, 0x04	; 4
     92e:	80 83       	st	Z, r24
    //Initialize Display
    lcd_db7_port_low();
    lcd_db6_port_low();
    Delay_ns(100);
    lcd_e_port_high();
    Delay_ns(500);
     930:	92 e0       	ldi	r25, 0x02	; 2
     932:	9a 95       	dec	r25
     934:	f1 f7       	brne	.-4      	; 0x932 <__stack+0x33>
     936:	00 c0       	rjmp	.+0      	; 0x938 <__stack+0x39>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     938:	80 81       	ld	r24, Z
     93a:	8b 7f       	andi	r24, 0xFB	; 251
     93c:	80 83       	st	Z, r24
    Delay_ns(100);
    lcd_e_port_high();
    Delay_ns(500);
    lcd_e_port_low();

    Delay_us(4100);
     93e:	8f e0       	ldi	r24, 0x0F	; 15
     940:	90 e4       	ldi	r25, 0x40	; 64
     942:	01 97       	sbiw	r24, 0x01	; 1
     944:	f1 f7       	brne	.-4      	; 0x942 <__stack+0x43>
     946:	00 c0       	rjmp	.+0      	; 0x948 <__stack+0x49>
     948:	00 00       	nop
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     94a:	80 81       	ld	r24, Z
     94c:	84 60       	ori	r24, 0x04	; 4
     94e:	80 83       	st	Z, r24
    lcd_e_port_low();

    Delay_us(4100);

    lcd_e_port_high();
    Delay_ns(500);
     950:	92 e0       	ldi	r25, 0x02	; 2
     952:	9a 95       	dec	r25
     954:	f1 f7       	brne	.-4      	; 0x952 <__stack+0x53>
     956:	00 c0       	rjmp	.+0      	; 0x958 <__stack+0x59>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     958:	80 81       	ld	r24, Z
     95a:	8b 7f       	andi	r24, 0xFB	; 251
     95c:	80 83       	st	Z, r24

    lcd_e_port_high();
    Delay_ns(500);
    lcd_e_port_low();

    Delay_us(100);
     95e:	8f e8       	ldi	r24, 0x8F	; 143
     960:	91 e0       	ldi	r25, 0x01	; 1
     962:	01 97       	sbiw	r24, 0x01	; 1
     964:	f1 f7       	brne	.-4      	; 0x962 <__stack+0x63>
     966:	00 c0       	rjmp	.+0      	; 0x968 <__stack+0x69>
     968:	00 00       	nop
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     96a:	80 81       	ld	r24, Z
     96c:	84 60       	ori	r24, 0x04	; 4
     96e:	80 83       	st	Z, r24
    lcd_e_port_low();

    Delay_us(100);

    lcd_e_port_high();
    Delay_ns(500);
     970:	92 e0       	ldi	r25, 0x02	; 2
     972:	9a 95       	dec	r25
     974:	f1 f7       	brne	.-4      	; 0x972 <__stack+0x73>
     976:	00 c0       	rjmp	.+0      	; 0x978 <__stack+0x79>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     978:	80 81       	ld	r24, Z
     97a:	8b 7f       	andi	r24, 0xFB	; 251
     97c:	80 83       	st	Z, r24

    lcd_e_port_high();
    Delay_ns(500);
    lcd_e_port_low();

    Delay_us(40);
     97e:	85 ed       	ldi	r24, 0xD5	; 213
     980:	8a 95       	dec	r24
     982:	f1 f7       	brne	.-4      	; 0x980 <__stack+0x81>
     984:	00 00       	nop

    //Init differs between 4-bit and 8-bit from here
    #if (LCD_BITS==4)
      lcd_db4_port_low();
     986:	80 81       	ld	r24, Z
     988:	8f 7e       	andi	r24, 0xEF	; 239
     98a:	80 83       	st	Z, r24
      Delay_ns(100);
     98c:	00 c0       	rjmp	.+0      	; 0x98e <__stack+0x8f>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     98e:	80 81       	ld	r24, Z
     990:	84 60       	ori	r24, 0x04	; 4
     992:	80 83       	st	Z, r24
    //Init differs between 4-bit and 8-bit from here
    #if (LCD_BITS==4)
      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
     994:	92 e0       	ldi	r25, 0x02	; 2
     996:	9a 95       	dec	r25
     998:	f1 f7       	brne	.-4      	; 0x996 <__stack+0x97>
     99a:	00 c0       	rjmp	.+0      	; 0x99c <__stack+0x9d>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     99c:	80 81       	ld	r24, Z
     99e:	8b 7f       	andi	r24, 0xFB	; 251
     9a0:	80 83       	st	Z, r24
      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
      lcd_e_port_low();
      Delay_us(40);
     9a2:	85 ed       	ldi	r24, 0xD5	; 213
     9a4:	8a 95       	dec	r24
     9a6:	f1 f7       	brne	.-4      	; 0x9a4 <__stack+0xa5>
     9a8:	00 00       	nop

      lcd_db4_port_low();
     9aa:	80 81       	ld	r24, Z
     9ac:	8f 7e       	andi	r24, 0xEF	; 239
     9ae:	80 83       	st	Z, r24
      Delay_ns(100);
     9b0:	00 c0       	rjmp	.+0      	; 0x9b2 <__stack+0xb3>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     9b2:	80 81       	ld	r24, Z
     9b4:	84 60       	ori	r24, 0x04	; 4
     9b6:	80 83       	st	Z, r24
      Delay_us(40);

      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
     9b8:	92 e0       	ldi	r25, 0x02	; 2
     9ba:	9a 95       	dec	r25
     9bc:	f1 f7       	brne	.-4      	; 0x9ba <__stack+0xbb>
     9be:	00 c0       	rjmp	.+0      	; 0x9c0 <__stack+0xc1>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     9c0:	80 81       	ld	r24, Z
     9c2:	8b 7f       	andi	r24, 0xFB	; 251
     9c4:	80 83       	st	Z, r24
      lcd_db4_port_low();
      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
      lcd_e_port_low();
      Delay_ns(500);
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	8a 95       	dec	r24
     9ca:	f1 f7       	brne	.-4      	; 0x9c8 <__stack+0xc9>
     9cc:	00 c0       	rjmp	.+0      	; 0x9ce <__stack+0xcf>

      #if (LCD_DISPLAYS==1)
        if (LCD_DISPLAY_LINES>1)
          lcd_db7_port_high();
     9ce:	80 81       	ld	r24, Z
     9d0:	80 68       	ori	r24, 0x80	; 128
     9d2:	80 83       	st	Z, r24
          }
        if (c>1)
          lcd_db7_port_high();
      #endif

      Delay_ns(100);
     9d4:	00 c0       	rjmp	.+0      	; 0x9d6 <__stack+0xd7>
      case 4 : LCD_E4_PORT|=_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT|=_BV(LCD_E_PIN);
     9d6:	80 81       	ld	r24, Z
     9d8:	84 60       	ori	r24, 0x04	; 4
     9da:	80 83       	st	Z, r24
          lcd_db7_port_high();
      #endif

      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
     9dc:	92 e0       	ldi	r25, 0x02	; 2
     9de:	9a 95       	dec	r25
     9e0:	f1 f7       	brne	.-4      	; 0x9de <__stack+0xdf>
     9e2:	00 c0       	rjmp	.+0      	; 0x9e4 <__stack+0xe5>
      case 4 : LCD_E4_PORT&=~_BV(LCD_E4_PIN);
               break;
      #endif
      default :
  #endif
                LCD_E_PORT&=~_BV(LCD_E_PIN);
     9e4:	80 81       	ld	r24, Z
     9e6:	8b 7f       	andi	r24, 0xFB	; 251
     9e8:	80 83       	st	Z, r24

      Delay_ns(100);
      lcd_e_port_high();
      Delay_ns(500);
      lcd_e_port_low();
      Delay_us(40);
     9ea:	85 ed       	ldi	r24, 0xD5	; 213
     9ec:	8a 95       	dec	r24
     9ee:	f1 f7       	brne	.-4      	; 0x9ec <__stack+0xed>
     9f0:	00 00       	nop
      lcd_e_port_low();
      Delay_us(40);
    #endif

    //Display Off
    lcd_command(_BV(LCD_DISPLAYMODE));
     9f2:	88 e0       	ldi	r24, 0x08	; 8
     9f4:	0e 94 10 02 	call	0x420	; 0x420 <_Z11lcd_commandh>

    //Display Clear
    lcd_clrscr();
     9f8:	0e 94 14 02 	call	0x428	; 0x428 <_Z10lcd_clrscrv>

    //Entry Mode Set
    lcd_command(_BV(LCD_ENTRY_MODE) | _BV(LCD_ENTRY_INC));
     9fc:	86 e0       	ldi	r24, 0x06	; 6
     9fe:	0e 94 10 02 	call	0x420	; 0x420 <_Z11lcd_commandh>

    //Display On
    lcd_command(_BV(LCD_DISPLAYMODE) | _BV(LCD_DISPLAYMODE_ON));
     a02:	8c e0       	ldi	r24, 0x0C	; 12
     a04:	0e 94 10 02 	call	0x420	; 0x420 <_Z11lcd_commandh>
  }
     a08:	08 95       	ret

00000a0a <main>:
		Timer2_OFF();
}	


	
int main(void)
     a0a:	4f 92       	push	r4
     a0c:	5f 92       	push	r5
     a0e:	6f 92       	push	r6
     a10:	7f 92       	push	r7
     a12:	8f 92       	push	r8
     a14:	9f 92       	push	r9
     a16:	af 92       	push	r10
     a18:	bf 92       	push	r11
     a1a:	cf 92       	push	r12
     a1c:	df 92       	push	r13
     a1e:	ef 92       	push	r14
     a20:	ff 92       	push	r15
     a22:	0f 93       	push	r16
     a24:	1f 93       	push	r17
     a26:	cf 93       	push	r28
     a28:	df 93       	push	r29
	{
		// Input/Output Ports initialization
		// Port B initialization
		// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
		DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
     a2a:	14 b8       	out	0x04, r1	; 4
		// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
		PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
     a2c:	15 b8       	out	0x05, r1	; 5

		// Port C initialization
		// Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
		DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
     a2e:	17 b8       	out	0x07, r1	; 7
		// State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
		PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
     a30:	18 b8       	out	0x08, r1	; 8

		// Port D initialization
		// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
		DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
     a32:	aa e2       	ldi	r26, 0x2A	; 42
     a34:	b0 e0       	ldi	r27, 0x00	; 0
     a36:	1c 92       	st	X, r1
		// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
		PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
     a38:	1b b8       	out	0x0b, r1	; 11
		// Clock source: System Clock
		// Clock value: Timer 0 Stopped
		// Mode: Normal top=0xFF
		// OC0A output: Disconnected
		// OC0B output: Disconnected
		TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
     a3a:	14 bc       	out	0x24, r1	; 36
		TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
     a3c:	15 bc       	out	0x25, r1	; 37
		TCNT0=0x00;
     a3e:	16 bc       	out	0x26, r1	; 38
		OCR0A=0x00;
     a40:	17 bc       	out	0x27, r1	; 39
		OCR0B=0x00;
     a42:	18 bc       	out	0x28, r1	; 40
		// Input Capture on Falling Edge
		// Timer1 Overflow Interrupt: Off
		// Input Capture Interrupt: Off
		// Compare A Match Interrupt: Off
		// Compare B Match Interrupt: Off
		TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
     a44:	10 92 80 00 	sts	0x0080, r1
		TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
     a48:	10 92 81 00 	sts	0x0081, r1
		TCNT1H=0x00;
     a4c:	10 92 85 00 	sts	0x0085, r1
		TCNT1L=0x00;
     a50:	10 92 84 00 	sts	0x0084, r1
		ICR1H=0x00;
     a54:	10 92 87 00 	sts	0x0087, r1
		ICR1L=0x00;
     a58:	10 92 86 00 	sts	0x0086, r1
		OCR1AH=0x00;
     a5c:	10 92 89 00 	sts	0x0089, r1
		OCR1AL=0x00;
     a60:	10 92 88 00 	sts	0x0088, r1
		OCR1BH=0x00;
     a64:	10 92 8b 00 	sts	0x008B, r1
		OCR1BL=0x00;
     a68:	10 92 8a 00 	sts	0x008A, r1
		// Clock source: System Clock
		// Clock value: Timer2 Stopped
		// Mode: Normal top=0xFF
		// OC2A output: Disconnected
		// OC2B output: Disconnected
		ASSR=(0<<EXCLK) | (0<<AS2);
     a6c:	10 92 b6 00 	sts	0x00B6, r1
		TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
     a70:	10 92 b0 00 	sts	0x00B0, r1
		TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
     a74:	10 92 b1 00 	sts	0x00B1, r1
		TCNT2=0x00;
     a78:	10 92 b2 00 	sts	0x00B2, r1
		OCR2A=0x00;
     a7c:	10 92 b3 00 	sts	0x00B3, r1
		OCR2B=0x00;
     a80:	10 92 b4 00 	sts	0x00B4, r1

		// Timer/Counter 0 Interrupt(s) initialization
		TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
     a84:	10 92 6e 00 	sts	0x006E, r1

		// Timer/Counter 1 Interrupt(s) initialization
		TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
     a88:	10 92 6f 00 	sts	0x006F, r1

		// Timer/Counter 2 Interrupt(s) initialization
		TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
     a8c:	10 92 70 00 	sts	0x0070, r1
		// INT0: Off
		// INT1: Off
		// Interrupt on any change on pins PCINT0-7: Off
		// Interrupt on any change on pins PCINT8-14: Off
		// Interrupt on any change on pins PCINT16-23: Off
		EICRA=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
     a90:	10 92 69 00 	sts	0x0069, r1
		EIMSK=(0<<INT1) | (0<<INT0);
     a94:	1d ba       	out	0x1d, r1	; 29
		PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
     a96:	10 92 68 00 	sts	0x0068, r1

		// USART initialization
		// USART disabled
		UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
     a9a:	10 92 c1 00 	sts	0x00C1, r1
		// Analog Comparator: Off
		// The Analog Comparator's positive input is
		// connected to the AIN0 pin
		// The Analog Comparator's negative input is
		// connected to the AIN1 pin
		ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
     a9e:	80 e8       	ldi	r24, 0x80	; 128
     aa0:	80 bf       	out	0x30, r24	; 48
		ADCSRB=(0<<ACME);
     aa2:	eb e7       	ldi	r30, 0x7B	; 123
     aa4:	f0 e0       	ldi	r31, 0x00	; 0
     aa6:	10 82       	st	Z, r1
		// Digital input buffer on AIN0: On
		// Digital input buffer on AIN1: On
		DIDR1=(0<<AIN0D) | (0<<AIN1D);
     aa8:	10 92 7f 00 	sts	0x007F, r1
		// ADC Clock frequency: 1000.000 kHz
		// ADC Voltage Reference: AVCC pin
		// ADC Auto Trigger Source: ADC Stopped
		// Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
		// ADC4: On, ADC5: On
		DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
     aac:	10 92 7e 00 	sts	0x007E, r1
		ADMUX=ADC_VREF_TYPE;
     ab0:	80 e4       	ldi	r24, 0x40	; 64
     ab2:	80 93 7c 00 	sts	0x007C, r24
		ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
     ab6:	84 e8       	ldi	r24, 0x84	; 132
     ab8:	80 93 7a 00 	sts	0x007A, r24
		ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
     abc:	10 82       	st	Z, r1

		// SPI initialization
		// SPI disabled
		SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
     abe:	1c bc       	out	0x2c, r1	; 44

		// TWI initialization
		// TWI disabled
		TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
     ac0:	10 92 bc 00 	sts	0x00BC, r1
    
		//===================================== LCD =====================================================//
		//************ SETARILE DE CONECTARE A LCD SUNT IN FISIERUL hd44780_setings.h *******************//
		DDRD=0xFF;	// LCD este conectat la Portul D
     ac4:	8f ef       	ldi	r24, 0xFF	; 255
     ac6:	8c 93       	st	X, r24
		//***********************************************************************************************//
		lcd_init();
     ac8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <_Z8lcd_initv>
		lcd_puts(Date_Afisare);
	}	

inline void MeniulInitializare()
	{
		lcd_clrscr();
     acc:	0e 94 14 02 	call	0x428	; 0x428 <_Z10lcd_clrscrv>
		lcd_puts("WinderMachineV.2");
     ad0:	8c e4       	ldi	r24, 0x4C	; 76
     ad2:	91 e0       	ldi	r25, 0x01	; 1
     ad4:	0e 94 00 02 	call	0x400	; 0x400 <_Z8lcd_putsPKc>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     ad8:	80 e4       	ldi	r24, 0x40	; 64
     ada:	9c e9       	ldi	r25, 0x9C	; 156
     adc:	01 97       	sbiw	r24, 0x01	; 1
     ade:	f1 f7       	brne	.-4      	; 0xadc <main+0xd2>
	}
inline void MeniulPrincipal()
	{
		bool Eliberare_Buton=false;
		lcd_clrscr();
     ae0:	0e 94 14 02 	call	0x428	; 0x428 <_Z10lcd_clrscrv>
		Afisare(Inceputul_liniei_1, ">");
     ae4:	c0 e0       	ldi	r28, 0x00	; 0
     ae6:	d1 e0       	ldi	r29, 0x01	; 1
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	be 01       	movw	r22, r28
     aee:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
		Afisare(Inceputul_liniei_1+1, "Start");
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	6d e5       	ldi	r22, 0x5D	; 93
     af8:	71 e0       	ldi	r23, 0x01	; 1
     afa:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
		Afisare(Inceputul_liniei_2+1, "Settings");
     afe:	81 e4       	ldi	r24, 0x41	; 65
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	63 e6       	ldi	r22, 0x63	; 99
     b04:	71 e0       	ldi	r23, 0x01	; 1
     b06:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
     b0a:	10 e0       	ldi	r17, 0x00	; 0
				do
					{
						do
							{
								Button = read_LCD_buttons();
								if(Button==btnNONE)
     b0c:	00 e0       	ldi	r16, 0x00	; 0
     b0e:	0f 2e       	mov	r0, r31
     b10:	f0 e4       	ldi	r31, 0x40	; 64
     b12:	ef 2e       	mov	r14, r31
     b14:	fc e9       	ldi	r31, 0x9C	; 156
     b16:	ff 2e       	mov	r15, r31
     b18:	f0 2d       	mov	r31, r0
	{
		bool Eliberare_Buton=false;
		lcd_clrscr();
		Afisare(Inceputul_liniei_1, ">");
		Afisare(Inceputul_liniei_1+1, "Start");
		Afisare(Inceputul_liniei_2+1, "Settings");
     b1a:	dd 24       	eor	r13, r13
     b1c:	d3 94       	inc	r13
					{
						if(pozitia_cursor != 0)
							{
								pozitia_cursor=0;
								Afisare(Inceputul_liniei_1, ">");
								Afisare(Inceputul_liniei_2, " ");
     b1e:	0f 2e       	mov	r0, r31
     b20:	f2 e0       	ldi	r31, 0x02	; 2
     b22:	af 2e       	mov	r10, r31
     b24:	f1 e0       	ldi	r31, 0x01	; 1
     b26:	bf 2e       	mov	r11, r31
     b28:	f0 2d       	mov	r31, r0
     b2a:	01 c0       	rjmp	.+2      	; 0xb2e <main+0x124>
	{
		bool Eliberare_Buton=false;
		lcd_clrscr();
		Afisare(Inceputul_liniei_1, ">");
		Afisare(Inceputul_liniei_1+1, "Start");
		Afisare(Inceputul_liniei_2+1, "Settings");
     b2c:	1d 2d       	mov	r17, r13
			{
				do
					{
						do
							{
								Button = read_LCD_buttons();
     b2e:	0e 94 0e 01 	call	0x21c	; 0x21c <_Z16read_LCD_buttonsv>
     b32:	80 93 79 01 	sts	0x0179, r24
								if(Button==btnNONE)
     b36:	85 30       	cpi	r24, 0x05	; 5
     b38:	09 f4       	brne	.+2      	; 0xb3c <main+0x132>
     b3a:	10 2f       	mov	r17, r16
     b3c:	f7 01       	movw	r30, r14
     b3e:	31 97       	sbiw	r30, 0x01	; 1
     b40:	f1 f7       	brne	.-4      	; 0xb3e <main+0x134>
		Afisare(Inceputul_liniei_2+1, "Settings");
		do
			{
				do
					{
						do
     b42:	85 30       	cpi	r24, 0x05	; 5
     b44:	a1 f3       	breq	.-24     	; 0xb2e <main+0x124>
     b46:	11 23       	and	r17, r17
     b48:	91 f7       	brne	.-28     	; 0xb2e <main+0x124>
								_delay_ms(10);
							}while(Button != btnNONE && Eliberare_Buton == true);
					}while(Button == btnNONE);
				
				Eliberare_Buton=true;
				if(Button == btnDOWN)
     b4a:	82 30       	cpi	r24, 0x02	; 2
     b4c:	81 f4       	brne	.+32     	; 0xb6e <main+0x164>
					{
						if(pozitia_cursor != 1)
     b4e:	80 91 c2 01 	lds	r24, 0x01C2
     b52:	81 30       	cpi	r24, 0x01	; 1
     b54:	61 f0       	breq	.+24     	; 0xb6e <main+0x164>
							{
								pozitia_cursor=1;
     b56:	d0 92 c2 01 	sts	0x01C2, r13
								Afisare(Inceputul_liniei_1, " ");
     b5a:	80 e0       	ldi	r24, 0x00	; 0
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	b5 01       	movw	r22, r10
     b60:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, ">");
     b64:	80 e4       	ldi	r24, 0x40	; 64
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	be 01       	movw	r22, r28
     b6a:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
							}
					}
				if(Button == btnUP)
     b6e:	80 91 79 01 	lds	r24, 0x0179
     b72:	81 30       	cpi	r24, 0x01	; 1
     b74:	81 f4       	brne	.+32     	; 0xb96 <main+0x18c>
					{
						if(pozitia_cursor != 0)
     b76:	80 91 c2 01 	lds	r24, 0x01C2
     b7a:	88 23       	and	r24, r24
     b7c:	61 f0       	breq	.+24     	; 0xb96 <main+0x18c>
							{
								pozitia_cursor=0;
     b7e:	00 93 c2 01 	sts	0x01C2, r16
								Afisare(Inceputul_liniei_1, ">");
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	be 01       	movw	r22, r28
     b88:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
								Afisare(Inceputul_liniei_2, " ");
     b8c:	80 e4       	ldi	r24, 0x40	; 64
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	b5 01       	movw	r22, r10
     b92:	0e 94 1c 02 	call	0x438	; 0x438 <_Z7AfisareiPc>
		bool Eliberare_Buton=false;
		lcd_clrscr();
		Afisare(Inceputul_liniei_1, ">");
		Afisare(Inceputul_liniei_1+1, "Start");
		Afisare(Inceputul_liniei_2+1, "Settings");
		do
     b96:	80 91 79 01 	lds	r24, 0x0179
     b9a:	88 23       	and	r24, r24
     b9c:	11 f0       	breq	.+4      	; 0xba2 <main+0x198>
     b9e:	84 30       	cpi	r24, 0x04	; 4
     ba0:	29 f6       	brne	.-118    	; 0xb2c <main+0x122>
		lcd_init();

		MeniulInitializare();
		_delay_ms(10);
		MeniulPrincipal();
		if(pozitia_cursor == 0)
     ba2:	80 91 c2 01 	lds	r24, 0x01C2
     ba6:	88 23       	and	r24, r24
     ba8:	69 f4       	brne	.+26     	; 0xbc4 <main+0x1ba>
			{
				MeniulSecundarStart();
     baa:	0e 94 57 04 	call	0x8ae	; 0x8ae <_Z19MeniulSecundarStartv>
     bae:	20 ea       	ldi	r18, 0xA0	; 160
     bb0:	3f e0       	ldi	r19, 0x0F	; 15
     bb2:	40 e9       	ldi	r20, 0x90	; 144
     bb4:	51 e0       	ldi	r21, 0x01	; 1
     bb6:	ca 01       	movw	r24, r20
     bb8:	01 97       	sbiw	r24, 0x01	; 1
     bba:	f1 f7       	brne	.-4      	; 0xbb8 <main+0x1ae>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bbc:	21 50       	subi	r18, 0x01	; 1
     bbe:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bc0:	d1 f7       	brne	.-12     	; 0xbb6 <main+0x1ac>
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <main+0x1be>
				_delay_ms(400);
			}
		else
			MeniulSecundarSetting();
     bc4:	0e 94 27 02 	call	0x44e	; 0x44e <_Z21MeniulSecundarSettingv>
								sprintf(buffer,"Butonul = %d", btnDOWN);
								break;
							}
						case btnSELECT:
							{
								sprintf(buffer,"Butonul = %d", btnSELECT);
     bc8:	c0 e9       	ldi	r28, 0x90	; 144
     bca:	d1 e0       	ldi	r29, 0x01	; 1
     bcc:	0c e6       	ldi	r16, 0x6C	; 108
     bce:	11 e0       	ldi	r17, 0x01	; 1
     bd0:	66 24       	eor	r6, r6
     bd2:	77 24       	eor	r7, r7
     bd4:	68 94       	set
     bd6:	62 f8       	bld	r6, 2
								sprintf(buffer,"Butonul = %d", btnRIGHT);
								break;
							}
						case btnLEFT:
							{
								sprintf(buffer,"Butonul = %d", btnLEFT);
     bd8:	0f 2e       	mov	r0, r31
     bda:	f3 e0       	ldi	r31, 0x03	; 3
     bdc:	4f 2e       	mov	r4, r31
     bde:	55 24       	eor	r5, r5
     be0:	f0 2d       	mov	r31, r0
								sprintf(buffer,"Butonul = %d", btnSELECT);
								break;
							}
						case btnNONE:
							{
								sprintf(buffer,"Butonul = %d", btnNONE);
     be2:	0f 2e       	mov	r0, r31
     be4:	f5 e0       	ldi	r31, 0x05	; 5
     be6:	cf 2e       	mov	r12, r31
     be8:	dd 24       	eor	r13, r13
     bea:	f0 2d       	mov	r31, r0
								sprintf(buffer,"Butonul = %d", btnLEFT);
								break;
							}
						case btnUP:
							{
								sprintf(buffer,"Butonul = %d", btnUP);
     bec:	aa 24       	eor	r10, r10
     bee:	bb 24       	eor	r11, r11
     bf0:	a3 94       	inc	r10
								break;
							}
						case btnDOWN:
							{
								sprintf(buffer,"Butonul = %d", btnDOWN);
     bf2:	88 24       	eor	r8, r8
     bf4:	99 24       	eor	r9, r9
     bf6:	68 94       	set
     bf8:	81 f8       	bld	r8, 1
     bfa:	0f 2e       	mov	r0, r31
     bfc:	f0 e2       	ldi	r31, 0x20	; 32
     bfe:	ef 2e       	mov	r14, r31
     c00:	fe e4       	ldi	r31, 0x4E	; 78
     c02:	ff 2e       	mov	r15, r31
     c04:	f0 2d       	mov	r31, r0
		
		
		
		while (1) 
			{
				lcd_clrscr();
     c06:	0e 94 14 02 	call	0x428	; 0x428 <_Z10lcd_clrscrv>
				switch (read_LCD_buttons())               // depending on which button was pushed, we perform an action
     c0a:	0e 94 0e 01 	call	0x21c	; 0x21c <_Z16read_LCD_buttonsv>
     c0e:	82 30       	cpi	r24, 0x02	; 2
     c10:	91 05       	cpc	r25, r1
     c12:	09 f4       	brne	.+2      	; 0xc16 <main+0x20c>
     c14:	59 c0       	rjmp	.+178    	; 0xcc8 <main+0x2be>
     c16:	83 30       	cpi	r24, 0x03	; 3
     c18:	91 05       	cpc	r25, r1
     c1a:	34 f4       	brge	.+12     	; 0xc28 <main+0x21e>
     c1c:	00 97       	sbiw	r24, 0x00	; 0
     c1e:	79 f0       	breq	.+30     	; 0xc3e <main+0x234>
     c20:	01 97       	sbiw	r24, 0x01	; 1
     c22:	09 f0       	breq	.+2      	; 0xc26 <main+0x21c>
     c24:	95 c0       	rjmp	.+298    	; 0xd50 <main+0x346>
     c26:	39 c0       	rjmp	.+114    	; 0xc9a <main+0x290>
     c28:	84 30       	cpi	r24, 0x04	; 4
     c2a:	91 05       	cpc	r25, r1
     c2c:	09 f4       	brne	.+2      	; 0xc30 <main+0x226>
     c2e:	63 c0       	rjmp	.+198    	; 0xcf6 <main+0x2ec>
     c30:	84 30       	cpi	r24, 0x04	; 4
     c32:	91 05       	cpc	r25, r1
     c34:	dc f0       	brlt	.+54     	; 0xc6c <main+0x262>
     c36:	05 97       	sbiw	r24, 0x05	; 5
     c38:	09 f0       	breq	.+2      	; 0xc3c <main+0x232>
     c3a:	8a c0       	rjmp	.+276    	; 0xd50 <main+0x346>
     c3c:	73 c0       	rjmp	.+230    	; 0xd24 <main+0x31a>
					{
						case btnRIGHT:
							{
								sprintf(buffer,"Butonul = %d", btnRIGHT);
     c3e:	00 d0       	rcall	.+0      	; 0xc40 <main+0x236>
     c40:	00 d0       	rcall	.+0      	; 0xc42 <main+0x238>
     c42:	00 d0       	rcall	.+0      	; 0xc44 <main+0x23a>
     c44:	ed b7       	in	r30, 0x3d	; 61
     c46:	fe b7       	in	r31, 0x3e	; 62
     c48:	31 96       	adiw	r30, 0x01	; 1
     c4a:	d1 83       	std	Z+1, r29	; 0x01
     c4c:	c0 83       	st	Z, r28
     c4e:	13 83       	std	Z+3, r17	; 0x03
     c50:	02 83       	std	Z+2, r16	; 0x02
     c52:	15 82       	std	Z+5, r1	; 0x05
     c54:	14 82       	std	Z+4, r1	; 0x04
     c56:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
     c5a:	8d b7       	in	r24, 0x3d	; 61
     c5c:	9e b7       	in	r25, 0x3e	; 62
     c5e:	06 96       	adiw	r24, 0x06	; 6
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	f8 94       	cli
     c64:	9e bf       	out	0x3e, r25	; 62
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	8d bf       	out	0x3d, r24	; 61
     c6a:	72 c0       	rjmp	.+228    	; 0xd50 <main+0x346>
								break;
							}
						case btnLEFT:
							{
								sprintf(buffer,"Butonul = %d", btnLEFT);
     c6c:	00 d0       	rcall	.+0      	; 0xc6e <main+0x264>
     c6e:	00 d0       	rcall	.+0      	; 0xc70 <main+0x266>
     c70:	00 d0       	rcall	.+0      	; 0xc72 <main+0x268>
     c72:	ed b7       	in	r30, 0x3d	; 61
     c74:	fe b7       	in	r31, 0x3e	; 62
     c76:	31 96       	adiw	r30, 0x01	; 1
     c78:	d1 83       	std	Z+1, r29	; 0x01
     c7a:	c0 83       	st	Z, r28
     c7c:	13 83       	std	Z+3, r17	; 0x03
     c7e:	02 83       	std	Z+2, r16	; 0x02
     c80:	55 82       	std	Z+5, r5	; 0x05
     c82:	44 82       	std	Z+4, r4	; 0x04
     c84:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
     c88:	8d b7       	in	r24, 0x3d	; 61
     c8a:	9e b7       	in	r25, 0x3e	; 62
     c8c:	06 96       	adiw	r24, 0x06	; 6
     c8e:	0f b6       	in	r0, 0x3f	; 63
     c90:	f8 94       	cli
     c92:	9e bf       	out	0x3e, r25	; 62
     c94:	0f be       	out	0x3f, r0	; 63
     c96:	8d bf       	out	0x3d, r24	; 61
     c98:	5b c0       	rjmp	.+182    	; 0xd50 <main+0x346>
								break;
							}
						case btnUP:
							{
								sprintf(buffer,"Butonul = %d", btnUP);
     c9a:	00 d0       	rcall	.+0      	; 0xc9c <main+0x292>
     c9c:	00 d0       	rcall	.+0      	; 0xc9e <main+0x294>
     c9e:	00 d0       	rcall	.+0      	; 0xca0 <main+0x296>
     ca0:	ed b7       	in	r30, 0x3d	; 61
     ca2:	fe b7       	in	r31, 0x3e	; 62
     ca4:	31 96       	adiw	r30, 0x01	; 1
     ca6:	d1 83       	std	Z+1, r29	; 0x01
     ca8:	c0 83       	st	Z, r28
     caa:	13 83       	std	Z+3, r17	; 0x03
     cac:	02 83       	std	Z+2, r16	; 0x02
     cae:	b5 82       	std	Z+5, r11	; 0x05
     cb0:	a4 82       	std	Z+4, r10	; 0x04
     cb2:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
     cb6:	8d b7       	in	r24, 0x3d	; 61
     cb8:	9e b7       	in	r25, 0x3e	; 62
     cba:	06 96       	adiw	r24, 0x06	; 6
     cbc:	0f b6       	in	r0, 0x3f	; 63
     cbe:	f8 94       	cli
     cc0:	9e bf       	out	0x3e, r25	; 62
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	8d bf       	out	0x3d, r24	; 61
     cc6:	44 c0       	rjmp	.+136    	; 0xd50 <main+0x346>
								break;
							}
						case btnDOWN:
							{
								sprintf(buffer,"Butonul = %d", btnDOWN);
     cc8:	00 d0       	rcall	.+0      	; 0xcca <main+0x2c0>
     cca:	00 d0       	rcall	.+0      	; 0xccc <main+0x2c2>
     ccc:	00 d0       	rcall	.+0      	; 0xcce <main+0x2c4>
     cce:	ed b7       	in	r30, 0x3d	; 61
     cd0:	fe b7       	in	r31, 0x3e	; 62
     cd2:	31 96       	adiw	r30, 0x01	; 1
     cd4:	d1 83       	std	Z+1, r29	; 0x01
     cd6:	c0 83       	st	Z, r28
     cd8:	13 83       	std	Z+3, r17	; 0x03
     cda:	02 83       	std	Z+2, r16	; 0x02
     cdc:	95 82       	std	Z+5, r9	; 0x05
     cde:	84 82       	std	Z+4, r8	; 0x04
     ce0:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
     ce4:	8d b7       	in	r24, 0x3d	; 61
     ce6:	9e b7       	in	r25, 0x3e	; 62
     ce8:	06 96       	adiw	r24, 0x06	; 6
     cea:	0f b6       	in	r0, 0x3f	; 63
     cec:	f8 94       	cli
     cee:	9e bf       	out	0x3e, r25	; 62
     cf0:	0f be       	out	0x3f, r0	; 63
     cf2:	8d bf       	out	0x3d, r24	; 61
     cf4:	2d c0       	rjmp	.+90     	; 0xd50 <main+0x346>
								break;
							}
						case btnSELECT:
							{
								sprintf(buffer,"Butonul = %d", btnSELECT);
     cf6:	00 d0       	rcall	.+0      	; 0xcf8 <main+0x2ee>
     cf8:	00 d0       	rcall	.+0      	; 0xcfa <main+0x2f0>
     cfa:	00 d0       	rcall	.+0      	; 0xcfc <main+0x2f2>
     cfc:	ed b7       	in	r30, 0x3d	; 61
     cfe:	fe b7       	in	r31, 0x3e	; 62
     d00:	31 96       	adiw	r30, 0x01	; 1
     d02:	d1 83       	std	Z+1, r29	; 0x01
     d04:	c0 83       	st	Z, r28
     d06:	13 83       	std	Z+3, r17	; 0x03
     d08:	02 83       	std	Z+2, r16	; 0x02
     d0a:	75 82       	std	Z+5, r7	; 0x05
     d0c:	64 82       	std	Z+4, r6	; 0x04
     d0e:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
     d12:	8d b7       	in	r24, 0x3d	; 61
     d14:	9e b7       	in	r25, 0x3e	; 62
     d16:	06 96       	adiw	r24, 0x06	; 6
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	9e bf       	out	0x3e, r25	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	8d bf       	out	0x3d, r24	; 61
     d22:	16 c0       	rjmp	.+44     	; 0xd50 <main+0x346>
								break;
							}
						case btnNONE:
							{
								sprintf(buffer,"Butonul = %d", btnNONE);
     d24:	00 d0       	rcall	.+0      	; 0xd26 <main+0x31c>
     d26:	00 d0       	rcall	.+0      	; 0xd28 <main+0x31e>
     d28:	00 d0       	rcall	.+0      	; 0xd2a <main+0x320>
     d2a:	ed b7       	in	r30, 0x3d	; 61
     d2c:	fe b7       	in	r31, 0x3e	; 62
     d2e:	31 96       	adiw	r30, 0x01	; 1
     d30:	d1 83       	std	Z+1, r29	; 0x01
     d32:	c0 83       	st	Z, r28
     d34:	13 83       	std	Z+3, r17	; 0x03
     d36:	02 83       	std	Z+2, r16	; 0x02
     d38:	d5 82       	std	Z+5, r13	; 0x05
     d3a:	c4 82       	std	Z+4, r12	; 0x04
     d3c:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
     d40:	8d b7       	in	r24, 0x3d	; 61
     d42:	9e b7       	in	r25, 0x3e	; 62
     d44:	06 96       	adiw	r24, 0x06	; 6
     d46:	0f b6       	in	r0, 0x3f	; 63
     d48:	f8 94       	cli
     d4a:	9e bf       	out	0x3e, r25	; 62
     d4c:	0f be       	out	0x3f, r0	; 63
     d4e:	8d bf       	out	0x3d, r24	; 61
								break;
							}
					}	
				lcd_puts(buffer);	
     d50:	ce 01       	movw	r24, r28
     d52:	0e 94 00 02 	call	0x400	; 0x400 <_Z8lcd_putsPKc>
     d56:	c7 01       	movw	r24, r14
     d58:	01 97       	sbiw	r24, 0x01	; 1
     d5a:	f1 f7       	brne	.-4      	; 0xd58 <main+0x34e>
     d5c:	54 cf       	rjmp	.-344    	; 0xc06 <main+0x1fc>

00000d5e <vfprintf>:
     d5e:	a1 e1       	ldi	r26, 0x11	; 17
     d60:	b0 e0       	ldi	r27, 0x00	; 0
     d62:	e5 eb       	ldi	r30, 0xB5	; 181
     d64:	f6 e0       	ldi	r31, 0x06	; 6
     d66:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__prologue_saves__>
     d6a:	3c 01       	movw	r6, r24
     d6c:	7f 87       	std	Y+15, r23	; 0x0f
     d6e:	6e 87       	std	Y+14, r22	; 0x0e
     d70:	6a 01       	movw	r12, r20
     d72:	fc 01       	movw	r30, r24
     d74:	17 82       	std	Z+7, r1	; 0x07
     d76:	16 82       	std	Z+6, r1	; 0x06
     d78:	83 81       	ldd	r24, Z+3	; 0x03
     d7a:	81 fd       	sbrc	r24, 1
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <vfprintf+0x26>
     d7e:	6f ef       	ldi	r22, 0xFF	; 255
     d80:	7f ef       	ldi	r23, 0xFF	; 255
     d82:	6f c3       	rjmp	.+1758   	; 0x1462 <vfprintf+0x704>
     d84:	9e 01       	movw	r18, r28
     d86:	2f 5f       	subi	r18, 0xFF	; 255
     d88:	3f 4f       	sbci	r19, 0xFF	; 255
     d8a:	39 8b       	std	Y+17, r19	; 0x11
     d8c:	28 8b       	std	Y+16, r18	; 0x10
     d8e:	f3 01       	movw	r30, r6
     d90:	23 81       	ldd	r18, Z+3	; 0x03
     d92:	ee 85       	ldd	r30, Y+14	; 0x0e
     d94:	ff 85       	ldd	r31, Y+15	; 0x0f
     d96:	23 fd       	sbrc	r18, 3
     d98:	85 91       	lpm	r24, Z+
     d9a:	23 ff       	sbrs	r18, 3
     d9c:	81 91       	ld	r24, Z+
     d9e:	ff 87       	std	Y+15, r31	; 0x0f
     da0:	ee 87       	std	Y+14, r30	; 0x0e
     da2:	88 23       	and	r24, r24
     da4:	09 f4       	brne	.+2      	; 0xda8 <vfprintf+0x4a>
     da6:	5a c3       	rjmp	.+1716   	; 0x145c <vfprintf+0x6fe>
     da8:	85 32       	cpi	r24, 0x25	; 37
     daa:	51 f4       	brne	.+20     	; 0xdc0 <vfprintf+0x62>
     dac:	ee 85       	ldd	r30, Y+14	; 0x0e
     dae:	ff 85       	ldd	r31, Y+15	; 0x0f
     db0:	23 fd       	sbrc	r18, 3
     db2:	85 91       	lpm	r24, Z+
     db4:	23 ff       	sbrs	r18, 3
     db6:	81 91       	ld	r24, Z+
     db8:	ff 87       	std	Y+15, r31	; 0x0f
     dba:	ee 87       	std	Y+14, r30	; 0x0e
     dbc:	85 32       	cpi	r24, 0x25	; 37
     dbe:	29 f4       	brne	.+10     	; 0xdca <vfprintf+0x6c>
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	b3 01       	movw	r22, r6
     dc4:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
     dc8:	e2 cf       	rjmp	.-60     	; 0xd8e <vfprintf+0x30>
     dca:	98 2f       	mov	r25, r24
     dcc:	10 e0       	ldi	r17, 0x00	; 0
     dce:	88 24       	eor	r8, r8
     dd0:	99 24       	eor	r9, r9
     dd2:	10 32       	cpi	r17, 0x20	; 32
     dd4:	b0 f4       	brcc	.+44     	; 0xe02 <vfprintf+0xa4>
     dd6:	9b 32       	cpi	r25, 0x2B	; 43
     dd8:	69 f0       	breq	.+26     	; 0xdf4 <vfprintf+0x96>
     dda:	9c 32       	cpi	r25, 0x2C	; 44
     ddc:	28 f4       	brcc	.+10     	; 0xde8 <vfprintf+0x8a>
     dde:	90 32       	cpi	r25, 0x20	; 32
     de0:	51 f0       	breq	.+20     	; 0xdf6 <vfprintf+0x98>
     de2:	93 32       	cpi	r25, 0x23	; 35
     de4:	71 f4       	brne	.+28     	; 0xe02 <vfprintf+0xa4>
     de6:	0b c0       	rjmp	.+22     	; 0xdfe <vfprintf+0xa0>
     de8:	9d 32       	cpi	r25, 0x2D	; 45
     dea:	39 f0       	breq	.+14     	; 0xdfa <vfprintf+0x9c>
     dec:	90 33       	cpi	r25, 0x30	; 48
     dee:	49 f4       	brne	.+18     	; 0xe02 <vfprintf+0xa4>
     df0:	11 60       	ori	r17, 0x01	; 1
     df2:	28 c0       	rjmp	.+80     	; 0xe44 <vfprintf+0xe6>
     df4:	12 60       	ori	r17, 0x02	; 2
     df6:	14 60       	ori	r17, 0x04	; 4
     df8:	25 c0       	rjmp	.+74     	; 0xe44 <vfprintf+0xe6>
     dfa:	18 60       	ori	r17, 0x08	; 8
     dfc:	23 c0       	rjmp	.+70     	; 0xe44 <vfprintf+0xe6>
     dfe:	10 61       	ori	r17, 0x10	; 16
     e00:	21 c0       	rjmp	.+66     	; 0xe44 <vfprintf+0xe6>
     e02:	17 fd       	sbrc	r17, 7
     e04:	2a c0       	rjmp	.+84     	; 0xe5a <vfprintf+0xfc>
     e06:	89 2f       	mov	r24, r25
     e08:	80 53       	subi	r24, 0x30	; 48
     e0a:	8a 30       	cpi	r24, 0x0A	; 10
     e0c:	78 f4       	brcc	.+30     	; 0xe2c <vfprintf+0xce>
     e0e:	16 ff       	sbrs	r17, 6
     e10:	06 c0       	rjmp	.+12     	; 0xe1e <vfprintf+0xc0>
     e12:	fa e0       	ldi	r31, 0x0A	; 10
     e14:	9f 9e       	mul	r9, r31
     e16:	90 2c       	mov	r9, r0
     e18:	11 24       	eor	r1, r1
     e1a:	98 0e       	add	r9, r24
     e1c:	13 c0       	rjmp	.+38     	; 0xe44 <vfprintf+0xe6>
     e1e:	3a e0       	ldi	r19, 0x0A	; 10
     e20:	83 9e       	mul	r8, r19
     e22:	80 2c       	mov	r8, r0
     e24:	11 24       	eor	r1, r1
     e26:	88 0e       	add	r8, r24
     e28:	10 62       	ori	r17, 0x20	; 32
     e2a:	0c c0       	rjmp	.+24     	; 0xe44 <vfprintf+0xe6>
     e2c:	9e 32       	cpi	r25, 0x2E	; 46
     e2e:	21 f4       	brne	.+8      	; 0xe38 <vfprintf+0xda>
     e30:	16 fd       	sbrc	r17, 6
     e32:	14 c3       	rjmp	.+1576   	; 0x145c <vfprintf+0x6fe>
     e34:	10 64       	ori	r17, 0x40	; 64
     e36:	06 c0       	rjmp	.+12     	; 0xe44 <vfprintf+0xe6>
     e38:	9c 36       	cpi	r25, 0x6C	; 108
     e3a:	11 f4       	brne	.+4      	; 0xe40 <vfprintf+0xe2>
     e3c:	10 68       	ori	r17, 0x80	; 128
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <vfprintf+0xe6>
     e40:	98 36       	cpi	r25, 0x68	; 104
     e42:	59 f4       	brne	.+22     	; 0xe5a <vfprintf+0xfc>
     e44:	ee 85       	ldd	r30, Y+14	; 0x0e
     e46:	ff 85       	ldd	r31, Y+15	; 0x0f
     e48:	23 fd       	sbrc	r18, 3
     e4a:	95 91       	lpm	r25, Z+
     e4c:	23 ff       	sbrs	r18, 3
     e4e:	91 91       	ld	r25, Z+
     e50:	ff 87       	std	Y+15, r31	; 0x0f
     e52:	ee 87       	std	Y+14, r30	; 0x0e
     e54:	99 23       	and	r25, r25
     e56:	09 f0       	breq	.+2      	; 0xe5a <vfprintf+0xfc>
     e58:	bc cf       	rjmp	.-136    	; 0xdd2 <vfprintf+0x74>
     e5a:	89 2f       	mov	r24, r25
     e5c:	85 54       	subi	r24, 0x45	; 69
     e5e:	83 30       	cpi	r24, 0x03	; 3
     e60:	20 f4       	brcc	.+8      	; 0xe6a <vfprintf+0x10c>
     e62:	81 2f       	mov	r24, r17
     e64:	80 61       	ori	r24, 0x10	; 16
     e66:	90 5e       	subi	r25, 0xE0	; 224
     e68:	07 c0       	rjmp	.+14     	; 0xe78 <vfprintf+0x11a>
     e6a:	89 2f       	mov	r24, r25
     e6c:	85 56       	subi	r24, 0x65	; 101
     e6e:	83 30       	cpi	r24, 0x03	; 3
     e70:	08 f0       	brcs	.+2      	; 0xe74 <vfprintf+0x116>
     e72:	9f c1       	rjmp	.+830    	; 0x11b2 <vfprintf+0x454>
     e74:	81 2f       	mov	r24, r17
     e76:	8f 7e       	andi	r24, 0xEF	; 239
     e78:	86 fd       	sbrc	r24, 6
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <vfprintf+0x122>
     e7c:	76 e0       	ldi	r23, 0x06	; 6
     e7e:	97 2e       	mov	r9, r23
     e80:	6f e3       	ldi	r22, 0x3F	; 63
     e82:	f6 2e       	mov	r15, r22
     e84:	f8 22       	and	r15, r24
     e86:	95 36       	cpi	r25, 0x65	; 101
     e88:	19 f4       	brne	.+6      	; 0xe90 <vfprintf+0x132>
     e8a:	f0 e4       	ldi	r31, 0x40	; 64
     e8c:	ff 2a       	or	r15, r31
     e8e:	07 c0       	rjmp	.+14     	; 0xe9e <vfprintf+0x140>
     e90:	96 36       	cpi	r25, 0x66	; 102
     e92:	19 f4       	brne	.+6      	; 0xe9a <vfprintf+0x13c>
     e94:	20 e8       	ldi	r18, 0x80	; 128
     e96:	f2 2a       	or	r15, r18
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <vfprintf+0x140>
     e9a:	91 10       	cpse	r9, r1
     e9c:	9a 94       	dec	r9
     e9e:	f7 fe       	sbrs	r15, 7
     ea0:	0a c0       	rjmp	.+20     	; 0xeb6 <vfprintf+0x158>
     ea2:	3b e3       	ldi	r19, 0x3B	; 59
     ea4:	39 15       	cp	r19, r9
     ea6:	18 f4       	brcc	.+6      	; 0xeae <vfprintf+0x150>
     ea8:	5c e3       	ldi	r21, 0x3C	; 60
     eaa:	b5 2e       	mov	r11, r21
     eac:	02 c0       	rjmp	.+4      	; 0xeb2 <vfprintf+0x154>
     eae:	b9 2c       	mov	r11, r9
     eb0:	b3 94       	inc	r11
     eb2:	27 e0       	ldi	r18, 0x07	; 7
     eb4:	09 c0       	rjmp	.+18     	; 0xec8 <vfprintf+0x16a>
     eb6:	47 e0       	ldi	r20, 0x07	; 7
     eb8:	49 15       	cp	r20, r9
     eba:	20 f4       	brcc	.+8      	; 0xec4 <vfprintf+0x166>
     ebc:	bb 24       	eor	r11, r11
     ebe:	47 e0       	ldi	r20, 0x07	; 7
     ec0:	94 2e       	mov	r9, r20
     ec2:	f7 cf       	rjmp	.-18     	; 0xeb2 <vfprintf+0x154>
     ec4:	29 2d       	mov	r18, r9
     ec6:	bb 24       	eor	r11, r11
     ec8:	c6 01       	movw	r24, r12
     eca:	04 96       	adiw	r24, 0x04	; 4
     ecc:	9d 87       	std	Y+13, r25	; 0x0d
     ece:	8c 87       	std	Y+12, r24	; 0x0c
     ed0:	f6 01       	movw	r30, r12
     ed2:	60 81       	ld	r22, Z
     ed4:	71 81       	ldd	r23, Z+1	; 0x01
     ed6:	82 81       	ldd	r24, Z+2	; 0x02
     ed8:	93 81       	ldd	r25, Z+3	; 0x03
     eda:	ae 01       	movw	r20, r28
     edc:	4f 5f       	subi	r20, 0xFF	; 255
     ede:	5f 4f       	sbci	r21, 0xFF	; 255
     ee0:	0b 2d       	mov	r16, r11
     ee2:	0e 94 6d 0a 	call	0x14da	; 0x14da <__ftoa_engine>
     ee6:	6c 01       	movw	r12, r24
     ee8:	09 81       	ldd	r16, Y+1	; 0x01
     eea:	20 2e       	mov	r2, r16
     eec:	33 24       	eor	r3, r3
     eee:	00 ff       	sbrs	r16, 0
     ef0:	04 c0       	rjmp	.+8      	; 0xefa <vfprintf+0x19c>
     ef2:	03 fd       	sbrc	r16, 3
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <vfprintf+0x19c>
     ef6:	1d e2       	ldi	r17, 0x2D	; 45
     ef8:	09 c0       	rjmp	.+18     	; 0xf0c <vfprintf+0x1ae>
     efa:	f1 fe       	sbrs	r15, 1
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <vfprintf+0x1a4>
     efe:	1b e2       	ldi	r17, 0x2B	; 43
     f00:	05 c0       	rjmp	.+10     	; 0xf0c <vfprintf+0x1ae>
     f02:	f2 fc       	sbrc	r15, 2
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <vfprintf+0x1ac>
     f06:	10 e0       	ldi	r17, 0x00	; 0
     f08:	01 c0       	rjmp	.+2      	; 0xf0c <vfprintf+0x1ae>
     f0a:	10 e2       	ldi	r17, 0x20	; 32
     f0c:	c1 01       	movw	r24, r2
     f0e:	8c 70       	andi	r24, 0x0C	; 12
     f10:	90 70       	andi	r25, 0x00	; 0
     f12:	89 2b       	or	r24, r25
     f14:	b9 f1       	breq	.+110    	; 0xf84 <vfprintf+0x226>
     f16:	11 23       	and	r17, r17
     f18:	11 f4       	brne	.+4      	; 0xf1e <vfprintf+0x1c0>
     f1a:	83 e0       	ldi	r24, 0x03	; 3
     f1c:	01 c0       	rjmp	.+2      	; 0xf20 <vfprintf+0x1c2>
     f1e:	84 e0       	ldi	r24, 0x04	; 4
     f20:	88 15       	cp	r24, r8
     f22:	10 f0       	brcs	.+4      	; 0xf28 <vfprintf+0x1ca>
     f24:	88 24       	eor	r8, r8
     f26:	0a c0       	rjmp	.+20     	; 0xf3c <vfprintf+0x1de>
     f28:	88 1a       	sub	r8, r24
     f2a:	f3 fc       	sbrc	r15, 3
     f2c:	07 c0       	rjmp	.+14     	; 0xf3c <vfprintf+0x1de>
     f2e:	80 e2       	ldi	r24, 0x20	; 32
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	b3 01       	movw	r22, r6
     f34:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
     f38:	8a 94       	dec	r8
     f3a:	c9 f7       	brne	.-14     	; 0xf2e <vfprintf+0x1d0>
     f3c:	11 23       	and	r17, r17
     f3e:	29 f0       	breq	.+10     	; 0xf4a <vfprintf+0x1ec>
     f40:	81 2f       	mov	r24, r17
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	b3 01       	movw	r22, r6
     f46:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
     f4a:	23 fe       	sbrs	r2, 3
     f4c:	03 c0       	rjmp	.+6      	; 0xf54 <vfprintf+0x1f6>
     f4e:	08 e6       	ldi	r16, 0x68	; 104
     f50:	10 e0       	ldi	r17, 0x00	; 0
     f52:	0e c0       	rjmp	.+28     	; 0xf70 <vfprintf+0x212>
     f54:	0c e6       	ldi	r16, 0x6C	; 108
     f56:	10 e0       	ldi	r17, 0x00	; 0
     f58:	0b c0       	rjmp	.+22     	; 0xf70 <vfprintf+0x212>
     f5a:	e1 14       	cp	r14, r1
     f5c:	f1 04       	cpc	r15, r1
     f5e:	09 f0       	breq	.+2      	; 0xf62 <vfprintf+0x204>
     f60:	80 52       	subi	r24, 0x20	; 32
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	b3 01       	movw	r22, r6
     f66:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
     f6a:	0f 5f       	subi	r16, 0xFF	; 255
     f6c:	1f 4f       	sbci	r17, 0xFF	; 255
     f6e:	05 c0       	rjmp	.+10     	; 0xf7a <vfprintf+0x21c>
     f70:	ef 2c       	mov	r14, r15
     f72:	ff 24       	eor	r15, r15
     f74:	f0 e1       	ldi	r31, 0x10	; 16
     f76:	ef 22       	and	r14, r31
     f78:	ff 24       	eor	r15, r15
     f7a:	f8 01       	movw	r30, r16
     f7c:	84 91       	lpm	r24, Z+
     f7e:	88 23       	and	r24, r24
     f80:	61 f7       	brne	.-40     	; 0xf5a <vfprintf+0x1fc>
     f82:	14 c1       	rjmp	.+552    	; 0x11ac <vfprintf+0x44e>
     f84:	f7 fe       	sbrs	r15, 7
     f86:	12 c0       	rjmp	.+36     	; 0xfac <vfprintf+0x24e>
     f88:	bc 0c       	add	r11, r12
     f8a:	24 fe       	sbrs	r2, 4
     f8c:	04 c0       	rjmp	.+8      	; 0xf96 <vfprintf+0x238>
     f8e:	8a 81       	ldd	r24, Y+2	; 0x02
     f90:	81 33       	cpi	r24, 0x31	; 49
     f92:	09 f4       	brne	.+2      	; 0xf96 <vfprintf+0x238>
     f94:	ba 94       	dec	r11
     f96:	1b 14       	cp	r1, r11
     f98:	1c f0       	brlt	.+6      	; 0xfa0 <vfprintf+0x242>
     f9a:	bb 24       	eor	r11, r11
     f9c:	b3 94       	inc	r11
     f9e:	2d c0       	rjmp	.+90     	; 0xffa <vfprintf+0x29c>
     fa0:	f8 e0       	ldi	r31, 0x08	; 8
     fa2:	fb 15       	cp	r31, r11
     fa4:	50 f5       	brcc	.+84     	; 0xffa <vfprintf+0x29c>
     fa6:	38 e0       	ldi	r19, 0x08	; 8
     fa8:	b3 2e       	mov	r11, r19
     faa:	27 c0       	rjmp	.+78     	; 0xffa <vfprintf+0x29c>
     fac:	f6 fc       	sbrc	r15, 6
     fae:	25 c0       	rjmp	.+74     	; 0xffa <vfprintf+0x29c>
     fb0:	89 2d       	mov	r24, r9
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	8c 15       	cp	r24, r12
     fb6:	9d 05       	cpc	r25, r13
     fb8:	4c f0       	brlt	.+18     	; 0xfcc <vfprintf+0x26e>
     fba:	2c ef       	ldi	r18, 0xFC	; 252
     fbc:	c2 16       	cp	r12, r18
     fbe:	2f ef       	ldi	r18, 0xFF	; 255
     fc0:	d2 06       	cpc	r13, r18
     fc2:	24 f0       	brlt	.+8      	; 0xfcc <vfprintf+0x26e>
     fc4:	30 e8       	ldi	r19, 0x80	; 128
     fc6:	f3 2a       	or	r15, r19
     fc8:	01 c0       	rjmp	.+2      	; 0xfcc <vfprintf+0x26e>
     fca:	9a 94       	dec	r9
     fcc:	99 20       	and	r9, r9
     fce:	49 f0       	breq	.+18     	; 0xfe2 <vfprintf+0x284>
     fd0:	e2 e0       	ldi	r30, 0x02	; 2
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	ec 0f       	add	r30, r28
     fd6:	fd 1f       	adc	r31, r29
     fd8:	e9 0d       	add	r30, r9
     fda:	f1 1d       	adc	r31, r1
     fdc:	80 81       	ld	r24, Z
     fde:	80 33       	cpi	r24, 0x30	; 48
     fe0:	a1 f3       	breq	.-24     	; 0xfca <vfprintf+0x26c>
     fe2:	f7 fe       	sbrs	r15, 7
     fe4:	0a c0       	rjmp	.+20     	; 0xffa <vfprintf+0x29c>
     fe6:	b9 2c       	mov	r11, r9
     fe8:	b3 94       	inc	r11
     fea:	89 2d       	mov	r24, r9
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	c8 16       	cp	r12, r24
     ff0:	d9 06       	cpc	r13, r25
     ff2:	14 f0       	brlt	.+4      	; 0xff8 <vfprintf+0x29a>
     ff4:	99 24       	eor	r9, r9
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <vfprintf+0x29c>
     ff8:	9c 18       	sub	r9, r12
     ffa:	f7 fc       	sbrc	r15, 7
     ffc:	03 c0       	rjmp	.+6      	; 0x1004 <vfprintf+0x2a6>
     ffe:	25 e0       	ldi	r18, 0x05	; 5
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	09 c0       	rjmp	.+18     	; 0x1016 <vfprintf+0x2b8>
    1004:	1c 14       	cp	r1, r12
    1006:	1d 04       	cpc	r1, r13
    1008:	1c f0       	brlt	.+6      	; 0x1010 <vfprintf+0x2b2>
    100a:	21 e0       	ldi	r18, 0x01	; 1
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	03 c0       	rjmp	.+6      	; 0x1016 <vfprintf+0x2b8>
    1010:	96 01       	movw	r18, r12
    1012:	2f 5f       	subi	r18, 0xFF	; 255
    1014:	3f 4f       	sbci	r19, 0xFF	; 255
    1016:	11 23       	and	r17, r17
    1018:	11 f0       	breq	.+4      	; 0x101e <vfprintf+0x2c0>
    101a:	2f 5f       	subi	r18, 0xFF	; 255
    101c:	3f 4f       	sbci	r19, 0xFF	; 255
    101e:	99 20       	and	r9, r9
    1020:	29 f0       	breq	.+10     	; 0x102c <vfprintf+0x2ce>
    1022:	89 2d       	mov	r24, r9
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	28 0f       	add	r18, r24
    102a:	39 1f       	adc	r19, r25
    102c:	88 2d       	mov	r24, r8
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	28 17       	cp	r18, r24
    1032:	39 07       	cpc	r19, r25
    1034:	14 f0       	brlt	.+4      	; 0x103a <vfprintf+0x2dc>
    1036:	88 24       	eor	r8, r8
    1038:	01 c0       	rjmp	.+2      	; 0x103c <vfprintf+0x2de>
    103a:	82 1a       	sub	r8, r18
    103c:	4f 2c       	mov	r4, r15
    103e:	55 24       	eor	r5, r5
    1040:	c2 01       	movw	r24, r4
    1042:	89 70       	andi	r24, 0x09	; 9
    1044:	90 70       	andi	r25, 0x00	; 0
    1046:	89 2b       	or	r24, r25
    1048:	39 f0       	breq	.+14     	; 0x1058 <vfprintf+0x2fa>
    104a:	08 c0       	rjmp	.+16     	; 0x105c <vfprintf+0x2fe>
    104c:	80 e2       	ldi	r24, 0x20	; 32
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	b3 01       	movw	r22, r6
    1052:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1056:	8a 94       	dec	r8
    1058:	88 20       	and	r8, r8
    105a:	c1 f7       	brne	.-16     	; 0x104c <vfprintf+0x2ee>
    105c:	11 23       	and	r17, r17
    105e:	29 f0       	breq	.+10     	; 0x106a <vfprintf+0x30c>
    1060:	81 2f       	mov	r24, r17
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	b3 01       	movw	r22, r6
    1066:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    106a:	43 fe       	sbrs	r4, 3
    106c:	07 c0       	rjmp	.+14     	; 0x107c <vfprintf+0x31e>
    106e:	08 c0       	rjmp	.+16     	; 0x1080 <vfprintf+0x322>
    1070:	80 e3       	ldi	r24, 0x30	; 48
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	b3 01       	movw	r22, r6
    1076:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    107a:	8a 94       	dec	r8
    107c:	88 20       	and	r8, r8
    107e:	c1 f7       	brne	.-16     	; 0x1070 <vfprintf+0x312>
    1080:	f7 fe       	sbrs	r15, 7
    1082:	46 c0       	rjmp	.+140    	; 0x1110 <vfprintf+0x3b2>
    1084:	86 01       	movw	r16, r12
    1086:	d7 fe       	sbrs	r13, 7
    1088:	02 c0       	rjmp	.+4      	; 0x108e <vfprintf+0x330>
    108a:	00 e0       	ldi	r16, 0x00	; 0
    108c:	10 e0       	ldi	r17, 0x00	; 0
    108e:	76 01       	movw	r14, r12
    1090:	08 94       	sec
    1092:	e1 1c       	adc	r14, r1
    1094:	f1 1c       	adc	r15, r1
    1096:	e0 1a       	sub	r14, r16
    1098:	f1 0a       	sbc	r15, r17
    109a:	41 e0       	ldi	r20, 0x01	; 1
    109c:	50 e0       	ldi	r21, 0x00	; 0
    109e:	4c 0f       	add	r20, r28
    10a0:	5d 1f       	adc	r21, r29
    10a2:	e4 0e       	add	r14, r20
    10a4:	f5 1e       	adc	r15, r21
    10a6:	26 01       	movw	r4, r12
    10a8:	4b 18       	sub	r4, r11
    10aa:	51 08       	sbc	r5, r1
    10ac:	89 2d       	mov	r24, r9
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	aa 24       	eor	r10, r10
    10b2:	bb 24       	eor	r11, r11
    10b4:	a8 1a       	sub	r10, r24
    10b6:	b9 0a       	sbc	r11, r25
    10b8:	5f ef       	ldi	r21, 0xFF	; 255
    10ba:	0f 3f       	cpi	r16, 0xFF	; 255
    10bc:	15 07       	cpc	r17, r21
    10be:	29 f4       	brne	.+10     	; 0x10ca <vfprintf+0x36c>
    10c0:	8e e2       	ldi	r24, 0x2E	; 46
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	b3 01       	movw	r22, r6
    10c6:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    10ca:	c0 16       	cp	r12, r16
    10cc:	d1 06       	cpc	r13, r17
    10ce:	34 f0       	brlt	.+12     	; 0x10dc <vfprintf+0x37e>
    10d0:	40 16       	cp	r4, r16
    10d2:	51 06       	cpc	r5, r17
    10d4:	1c f4       	brge	.+6      	; 0x10dc <vfprintf+0x37e>
    10d6:	f7 01       	movw	r30, r14
    10d8:	80 81       	ld	r24, Z
    10da:	01 c0       	rjmp	.+2      	; 0x10de <vfprintf+0x380>
    10dc:	80 e3       	ldi	r24, 0x30	; 48
    10de:	01 50       	subi	r16, 0x01	; 1
    10e0:	10 40       	sbci	r17, 0x00	; 0
    10e2:	08 94       	sec
    10e4:	e1 1c       	adc	r14, r1
    10e6:	f1 1c       	adc	r15, r1
    10e8:	0a 15       	cp	r16, r10
    10ea:	1b 05       	cpc	r17, r11
    10ec:	2c f0       	brlt	.+10     	; 0x10f8 <vfprintf+0x39a>
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	b3 01       	movw	r22, r6
    10f2:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    10f6:	e0 cf       	rjmp	.-64     	; 0x10b8 <vfprintf+0x35a>
    10f8:	0c 15       	cp	r16, r12
    10fa:	1d 05       	cpc	r17, r13
    10fc:	39 f4       	brne	.+14     	; 0x110c <vfprintf+0x3ae>
    10fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1100:	96 33       	cpi	r25, 0x36	; 54
    1102:	18 f4       	brcc	.+6      	; 0x110a <vfprintf+0x3ac>
    1104:	95 33       	cpi	r25, 0x35	; 53
    1106:	11 f4       	brne	.+4      	; 0x110c <vfprintf+0x3ae>
    1108:	24 fe       	sbrs	r2, 4
    110a:	81 e3       	ldi	r24, 0x31	; 49
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	4b c0       	rjmp	.+150    	; 0x11a6 <vfprintf+0x448>
    1110:	8a 81       	ldd	r24, Y+2	; 0x02
    1112:	81 33       	cpi	r24, 0x31	; 49
    1114:	09 f0       	breq	.+2      	; 0x1118 <vfprintf+0x3ba>
    1116:	0f 7e       	andi	r16, 0xEF	; 239
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	b3 01       	movw	r22, r6
    111c:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1120:	99 20       	and	r9, r9
    1122:	a1 f0       	breq	.+40     	; 0x114c <vfprintf+0x3ee>
    1124:	8e e2       	ldi	r24, 0x2E	; 46
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	b3 01       	movw	r22, r6
    112a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    112e:	12 e0       	ldi	r17, 0x02	; 2
    1130:	e1 e0       	ldi	r30, 0x01	; 1
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	ec 0f       	add	r30, r28
    1136:	fd 1f       	adc	r31, r29
    1138:	e1 0f       	add	r30, r17
    113a:	f1 1d       	adc	r31, r1
    113c:	1f 5f       	subi	r17, 0xFF	; 255
    113e:	80 81       	ld	r24, Z
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	b3 01       	movw	r22, r6
    1144:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1148:	9a 94       	dec	r9
    114a:	91 f7       	brne	.-28     	; 0x1130 <vfprintf+0x3d2>
    114c:	44 fc       	sbrc	r4, 4
    114e:	03 c0       	rjmp	.+6      	; 0x1156 <vfprintf+0x3f8>
    1150:	85 e6       	ldi	r24, 0x65	; 101
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	02 c0       	rjmp	.+4      	; 0x115a <vfprintf+0x3fc>
    1156:	85 e4       	ldi	r24, 0x45	; 69
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	b3 01       	movw	r22, r6
    115c:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1160:	d7 fc       	sbrc	r13, 7
    1162:	05 c0       	rjmp	.+10     	; 0x116e <vfprintf+0x410>
    1164:	c1 14       	cp	r12, r1
    1166:	d1 04       	cpc	r13, r1
    1168:	41 f4       	brne	.+16     	; 0x117a <vfprintf+0x41c>
    116a:	04 ff       	sbrs	r16, 4
    116c:	06 c0       	rjmp	.+12     	; 0x117a <vfprintf+0x41c>
    116e:	d0 94       	com	r13
    1170:	c1 94       	neg	r12
    1172:	d1 08       	sbc	r13, r1
    1174:	d3 94       	inc	r13
    1176:	8d e2       	ldi	r24, 0x2D	; 45
    1178:	01 c0       	rjmp	.+2      	; 0x117c <vfprintf+0x41e>
    117a:	8b e2       	ldi	r24, 0x2B	; 43
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	b3 01       	movw	r22, r6
    1180:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1184:	80 e3       	ldi	r24, 0x30	; 48
    1186:	05 c0       	rjmp	.+10     	; 0x1192 <vfprintf+0x434>
    1188:	8f 5f       	subi	r24, 0xFF	; 255
    118a:	26 ef       	ldi	r18, 0xF6	; 246
    118c:	3f ef       	ldi	r19, 0xFF	; 255
    118e:	c2 0e       	add	r12, r18
    1190:	d3 1e       	adc	r13, r19
    1192:	3a e0       	ldi	r19, 0x0A	; 10
    1194:	c3 16       	cp	r12, r19
    1196:	d1 04       	cpc	r13, r1
    1198:	bc f7       	brge	.-18     	; 0x1188 <vfprintf+0x42a>
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	b3 01       	movw	r22, r6
    119e:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    11a2:	c6 01       	movw	r24, r12
    11a4:	c0 96       	adiw	r24, 0x30	; 48
    11a6:	b3 01       	movw	r22, r6
    11a8:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    11ac:	cc 84       	ldd	r12, Y+12	; 0x0c
    11ae:	dd 84       	ldd	r13, Y+13	; 0x0d
    11b0:	52 c1       	rjmp	.+676    	; 0x1456 <vfprintf+0x6f8>
    11b2:	93 36       	cpi	r25, 0x63	; 99
    11b4:	31 f0       	breq	.+12     	; 0x11c2 <vfprintf+0x464>
    11b6:	93 37       	cpi	r25, 0x73	; 115
    11b8:	99 f0       	breq	.+38     	; 0x11e0 <vfprintf+0x482>
    11ba:	93 35       	cpi	r25, 0x53	; 83
    11bc:	09 f0       	breq	.+2      	; 0x11c0 <vfprintf+0x462>
    11be:	59 c0       	rjmp	.+178    	; 0x1272 <vfprintf+0x514>
    11c0:	23 c0       	rjmp	.+70     	; 0x1208 <vfprintf+0x4aa>
    11c2:	f6 01       	movw	r30, r12
    11c4:	80 81       	ld	r24, Z
    11c6:	89 83       	std	Y+1, r24	; 0x01
    11c8:	5e 01       	movw	r10, r28
    11ca:	08 94       	sec
    11cc:	a1 1c       	adc	r10, r1
    11ce:	b1 1c       	adc	r11, r1
    11d0:	22 e0       	ldi	r18, 0x02	; 2
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	c2 0e       	add	r12, r18
    11d6:	d3 1e       	adc	r13, r19
    11d8:	21 e0       	ldi	r18, 0x01	; 1
    11da:	e2 2e       	mov	r14, r18
    11dc:	f1 2c       	mov	r15, r1
    11de:	12 c0       	rjmp	.+36     	; 0x1204 <vfprintf+0x4a6>
    11e0:	f6 01       	movw	r30, r12
    11e2:	a0 80       	ld	r10, Z
    11e4:	b1 80       	ldd	r11, Z+1	; 0x01
    11e6:	16 fd       	sbrc	r17, 6
    11e8:	03 c0       	rjmp	.+6      	; 0x11f0 <vfprintf+0x492>
    11ea:	6f ef       	ldi	r22, 0xFF	; 255
    11ec:	7f ef       	ldi	r23, 0xFF	; 255
    11ee:	02 c0       	rjmp	.+4      	; 0x11f4 <vfprintf+0x496>
    11f0:	69 2d       	mov	r22, r9
    11f2:	70 e0       	ldi	r23, 0x00	; 0
    11f4:	22 e0       	ldi	r18, 0x02	; 2
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	c2 0e       	add	r12, r18
    11fa:	d3 1e       	adc	r13, r19
    11fc:	c5 01       	movw	r24, r10
    11fe:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <strnlen>
    1202:	7c 01       	movw	r14, r24
    1204:	1f 77       	andi	r17, 0x7F	; 127
    1206:	13 c0       	rjmp	.+38     	; 0x122e <vfprintf+0x4d0>
    1208:	f6 01       	movw	r30, r12
    120a:	a0 80       	ld	r10, Z
    120c:	b1 80       	ldd	r11, Z+1	; 0x01
    120e:	16 fd       	sbrc	r17, 6
    1210:	03 c0       	rjmp	.+6      	; 0x1218 <vfprintf+0x4ba>
    1212:	6f ef       	ldi	r22, 0xFF	; 255
    1214:	7f ef       	ldi	r23, 0xFF	; 255
    1216:	02 c0       	rjmp	.+4      	; 0x121c <vfprintf+0x4be>
    1218:	69 2d       	mov	r22, r9
    121a:	70 e0       	ldi	r23, 0x00	; 0
    121c:	22 e0       	ldi	r18, 0x02	; 2
    121e:	30 e0       	ldi	r19, 0x00	; 0
    1220:	c2 0e       	add	r12, r18
    1222:	d3 1e       	adc	r13, r19
    1224:	c5 01       	movw	r24, r10
    1226:	0e 94 45 0b 	call	0x168a	; 0x168a <strnlen_P>
    122a:	7c 01       	movw	r14, r24
    122c:	10 68       	ori	r17, 0x80	; 128
    122e:	13 ff       	sbrs	r17, 3
    1230:	07 c0       	rjmp	.+14     	; 0x1240 <vfprintf+0x4e2>
    1232:	1b c0       	rjmp	.+54     	; 0x126a <vfprintf+0x50c>
    1234:	80 e2       	ldi	r24, 0x20	; 32
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	b3 01       	movw	r22, r6
    123a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    123e:	8a 94       	dec	r8
    1240:	88 2d       	mov	r24, r8
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	e8 16       	cp	r14, r24
    1246:	f9 06       	cpc	r15, r25
    1248:	a8 f3       	brcs	.-22     	; 0x1234 <vfprintf+0x4d6>
    124a:	0f c0       	rjmp	.+30     	; 0x126a <vfprintf+0x50c>
    124c:	f5 01       	movw	r30, r10
    124e:	17 fd       	sbrc	r17, 7
    1250:	85 91       	lpm	r24, Z+
    1252:	17 ff       	sbrs	r17, 7
    1254:	81 91       	ld	r24, Z+
    1256:	5f 01       	movw	r10, r30
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	b3 01       	movw	r22, r6
    125c:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1260:	81 10       	cpse	r8, r1
    1262:	8a 94       	dec	r8
    1264:	08 94       	sec
    1266:	e1 08       	sbc	r14, r1
    1268:	f1 08       	sbc	r15, r1
    126a:	e1 14       	cp	r14, r1
    126c:	f1 04       	cpc	r15, r1
    126e:	71 f7       	brne	.-36     	; 0x124c <vfprintf+0x4ee>
    1270:	f2 c0       	rjmp	.+484    	; 0x1456 <vfprintf+0x6f8>
    1272:	94 36       	cpi	r25, 0x64	; 100
    1274:	11 f0       	breq	.+4      	; 0x127a <vfprintf+0x51c>
    1276:	99 36       	cpi	r25, 0x69	; 105
    1278:	89 f5       	brne	.+98     	; 0x12dc <vfprintf+0x57e>
    127a:	17 ff       	sbrs	r17, 7
    127c:	08 c0       	rjmp	.+16     	; 0x128e <vfprintf+0x530>
    127e:	f6 01       	movw	r30, r12
    1280:	20 81       	ld	r18, Z
    1282:	31 81       	ldd	r19, Z+1	; 0x01
    1284:	42 81       	ldd	r20, Z+2	; 0x02
    1286:	53 81       	ldd	r21, Z+3	; 0x03
    1288:	84 e0       	ldi	r24, 0x04	; 4
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0a c0       	rjmp	.+20     	; 0x12a2 <vfprintf+0x544>
    128e:	f6 01       	movw	r30, r12
    1290:	80 81       	ld	r24, Z
    1292:	91 81       	ldd	r25, Z+1	; 0x01
    1294:	9c 01       	movw	r18, r24
    1296:	44 27       	eor	r20, r20
    1298:	37 fd       	sbrc	r19, 7
    129a:	40 95       	com	r20
    129c:	54 2f       	mov	r21, r20
    129e:	82 e0       	ldi	r24, 0x02	; 2
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	c8 0e       	add	r12, r24
    12a4:	d9 1e       	adc	r13, r25
    12a6:	9f e6       	ldi	r25, 0x6F	; 111
    12a8:	f9 2e       	mov	r15, r25
    12aa:	f1 22       	and	r15, r17
    12ac:	57 ff       	sbrs	r21, 7
    12ae:	09 c0       	rjmp	.+18     	; 0x12c2 <vfprintf+0x564>
    12b0:	50 95       	com	r21
    12b2:	40 95       	com	r20
    12b4:	30 95       	com	r19
    12b6:	21 95       	neg	r18
    12b8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ba:	4f 4f       	sbci	r20, 0xFF	; 255
    12bc:	5f 4f       	sbci	r21, 0xFF	; 255
    12be:	90 e8       	ldi	r25, 0x80	; 128
    12c0:	f9 2a       	or	r15, r25
    12c2:	ca 01       	movw	r24, r20
    12c4:	b9 01       	movw	r22, r18
    12c6:	ae 01       	movw	r20, r28
    12c8:	4f 5f       	subi	r20, 0xFF	; 255
    12ca:	5f 4f       	sbci	r21, 0xFF	; 255
    12cc:	2a e0       	ldi	r18, 0x0A	; 10
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__ultoa_invert>
    12d4:	e8 2e       	mov	r14, r24
    12d6:	e8 89       	ldd	r30, Y+16	; 0x10
    12d8:	ee 1a       	sub	r14, r30
    12da:	41 c0       	rjmp	.+130    	; 0x135e <vfprintf+0x600>
    12dc:	95 37       	cpi	r25, 0x75	; 117
    12de:	21 f4       	brne	.+8      	; 0x12e8 <vfprintf+0x58a>
    12e0:	1f 7e       	andi	r17, 0xEF	; 239
    12e2:	2a e0       	ldi	r18, 0x0A	; 10
    12e4:	30 e0       	ldi	r19, 0x00	; 0
    12e6:	1c c0       	rjmp	.+56     	; 0x1320 <vfprintf+0x5c2>
    12e8:	19 7f       	andi	r17, 0xF9	; 249
    12ea:	9f 36       	cpi	r25, 0x6F	; 111
    12ec:	61 f0       	breq	.+24     	; 0x1306 <vfprintf+0x5a8>
    12ee:	90 37       	cpi	r25, 0x70	; 112
    12f0:	20 f4       	brcc	.+8      	; 0x12fa <vfprintf+0x59c>
    12f2:	98 35       	cpi	r25, 0x58	; 88
    12f4:	09 f0       	breq	.+2      	; 0x12f8 <vfprintf+0x59a>
    12f6:	b2 c0       	rjmp	.+356    	; 0x145c <vfprintf+0x6fe>
    12f8:	0f c0       	rjmp	.+30     	; 0x1318 <vfprintf+0x5ba>
    12fa:	90 37       	cpi	r25, 0x70	; 112
    12fc:	39 f0       	breq	.+14     	; 0x130c <vfprintf+0x5ae>
    12fe:	98 37       	cpi	r25, 0x78	; 120
    1300:	09 f0       	breq	.+2      	; 0x1304 <vfprintf+0x5a6>
    1302:	ac c0       	rjmp	.+344    	; 0x145c <vfprintf+0x6fe>
    1304:	04 c0       	rjmp	.+8      	; 0x130e <vfprintf+0x5b0>
    1306:	28 e0       	ldi	r18, 0x08	; 8
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	0a c0       	rjmp	.+20     	; 0x1320 <vfprintf+0x5c2>
    130c:	10 61       	ori	r17, 0x10	; 16
    130e:	14 fd       	sbrc	r17, 4
    1310:	14 60       	ori	r17, 0x04	; 4
    1312:	20 e1       	ldi	r18, 0x10	; 16
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	04 c0       	rjmp	.+8      	; 0x1320 <vfprintf+0x5c2>
    1318:	14 fd       	sbrc	r17, 4
    131a:	16 60       	ori	r17, 0x06	; 6
    131c:	20 e1       	ldi	r18, 0x10	; 16
    131e:	32 e0       	ldi	r19, 0x02	; 2
    1320:	17 ff       	sbrs	r17, 7
    1322:	08 c0       	rjmp	.+16     	; 0x1334 <vfprintf+0x5d6>
    1324:	f6 01       	movw	r30, r12
    1326:	60 81       	ld	r22, Z
    1328:	71 81       	ldd	r23, Z+1	; 0x01
    132a:	82 81       	ldd	r24, Z+2	; 0x02
    132c:	93 81       	ldd	r25, Z+3	; 0x03
    132e:	44 e0       	ldi	r20, 0x04	; 4
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	08 c0       	rjmp	.+16     	; 0x1344 <vfprintf+0x5e6>
    1334:	f6 01       	movw	r30, r12
    1336:	80 81       	ld	r24, Z
    1338:	91 81       	ldd	r25, Z+1	; 0x01
    133a:	bc 01       	movw	r22, r24
    133c:	80 e0       	ldi	r24, 0x00	; 0
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	42 e0       	ldi	r20, 0x02	; 2
    1342:	50 e0       	ldi	r21, 0x00	; 0
    1344:	c4 0e       	add	r12, r20
    1346:	d5 1e       	adc	r13, r21
    1348:	ae 01       	movw	r20, r28
    134a:	4f 5f       	subi	r20, 0xFF	; 255
    134c:	5f 4f       	sbci	r21, 0xFF	; 255
    134e:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__ultoa_invert>
    1352:	e8 2e       	mov	r14, r24
    1354:	58 89       	ldd	r21, Y+16	; 0x10
    1356:	e5 1a       	sub	r14, r21
    1358:	8f e7       	ldi	r24, 0x7F	; 127
    135a:	f8 2e       	mov	r15, r24
    135c:	f1 22       	and	r15, r17
    135e:	f6 fe       	sbrs	r15, 6
    1360:	0b c0       	rjmp	.+22     	; 0x1378 <vfprintf+0x61a>
    1362:	8e ef       	ldi	r24, 0xFE	; 254
    1364:	f8 22       	and	r15, r24
    1366:	e9 14       	cp	r14, r9
    1368:	38 f4       	brcc	.+14     	; 0x1378 <vfprintf+0x61a>
    136a:	f4 fe       	sbrs	r15, 4
    136c:	07 c0       	rjmp	.+14     	; 0x137c <vfprintf+0x61e>
    136e:	f2 fc       	sbrc	r15, 2
    1370:	05 c0       	rjmp	.+10     	; 0x137c <vfprintf+0x61e>
    1372:	9f ee       	ldi	r25, 0xEF	; 239
    1374:	f9 22       	and	r15, r25
    1376:	02 c0       	rjmp	.+4      	; 0x137c <vfprintf+0x61e>
    1378:	1e 2d       	mov	r17, r14
    137a:	01 c0       	rjmp	.+2      	; 0x137e <vfprintf+0x620>
    137c:	19 2d       	mov	r17, r9
    137e:	f4 fe       	sbrs	r15, 4
    1380:	0d c0       	rjmp	.+26     	; 0x139c <vfprintf+0x63e>
    1382:	fe 01       	movw	r30, r28
    1384:	ee 0d       	add	r30, r14
    1386:	f1 1d       	adc	r31, r1
    1388:	80 81       	ld	r24, Z
    138a:	80 33       	cpi	r24, 0x30	; 48
    138c:	19 f4       	brne	.+6      	; 0x1394 <vfprintf+0x636>
    138e:	e9 ee       	ldi	r30, 0xE9	; 233
    1390:	fe 22       	and	r15, r30
    1392:	08 c0       	rjmp	.+16     	; 0x13a4 <vfprintf+0x646>
    1394:	1f 5f       	subi	r17, 0xFF	; 255
    1396:	f2 fe       	sbrs	r15, 2
    1398:	05 c0       	rjmp	.+10     	; 0x13a4 <vfprintf+0x646>
    139a:	03 c0       	rjmp	.+6      	; 0x13a2 <vfprintf+0x644>
    139c:	8f 2d       	mov	r24, r15
    139e:	86 78       	andi	r24, 0x86	; 134
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <vfprintf+0x646>
    13a2:	1f 5f       	subi	r17, 0xFF	; 255
    13a4:	0f 2d       	mov	r16, r15
    13a6:	f3 fc       	sbrc	r15, 3
    13a8:	14 c0       	rjmp	.+40     	; 0x13d2 <vfprintf+0x674>
    13aa:	f0 fe       	sbrs	r15, 0
    13ac:	0f c0       	rjmp	.+30     	; 0x13cc <vfprintf+0x66e>
    13ae:	18 15       	cp	r17, r8
    13b0:	10 f0       	brcs	.+4      	; 0x13b6 <vfprintf+0x658>
    13b2:	9e 2c       	mov	r9, r14
    13b4:	0b c0       	rjmp	.+22     	; 0x13cc <vfprintf+0x66e>
    13b6:	9e 2c       	mov	r9, r14
    13b8:	98 0c       	add	r9, r8
    13ba:	91 1a       	sub	r9, r17
    13bc:	18 2d       	mov	r17, r8
    13be:	06 c0       	rjmp	.+12     	; 0x13cc <vfprintf+0x66e>
    13c0:	80 e2       	ldi	r24, 0x20	; 32
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	b3 01       	movw	r22, r6
    13c6:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    13ca:	1f 5f       	subi	r17, 0xFF	; 255
    13cc:	18 15       	cp	r17, r8
    13ce:	c0 f3       	brcs	.-16     	; 0x13c0 <vfprintf+0x662>
    13d0:	04 c0       	rjmp	.+8      	; 0x13da <vfprintf+0x67c>
    13d2:	18 15       	cp	r17, r8
    13d4:	10 f4       	brcc	.+4      	; 0x13da <vfprintf+0x67c>
    13d6:	81 1a       	sub	r8, r17
    13d8:	01 c0       	rjmp	.+2      	; 0x13dc <vfprintf+0x67e>
    13da:	88 24       	eor	r8, r8
    13dc:	04 ff       	sbrs	r16, 4
    13de:	0f c0       	rjmp	.+30     	; 0x13fe <vfprintf+0x6a0>
    13e0:	80 e3       	ldi	r24, 0x30	; 48
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	b3 01       	movw	r22, r6
    13e6:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    13ea:	02 ff       	sbrs	r16, 2
    13ec:	1d c0       	rjmp	.+58     	; 0x1428 <vfprintf+0x6ca>
    13ee:	01 fd       	sbrc	r16, 1
    13f0:	03 c0       	rjmp	.+6      	; 0x13f8 <vfprintf+0x69a>
    13f2:	88 e7       	ldi	r24, 0x78	; 120
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	0e c0       	rjmp	.+28     	; 0x1414 <vfprintf+0x6b6>
    13f8:	88 e5       	ldi	r24, 0x58	; 88
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	0b c0       	rjmp	.+22     	; 0x1414 <vfprintf+0x6b6>
    13fe:	80 2f       	mov	r24, r16
    1400:	86 78       	andi	r24, 0x86	; 134
    1402:	91 f0       	breq	.+36     	; 0x1428 <vfprintf+0x6ca>
    1404:	01 ff       	sbrs	r16, 1
    1406:	02 c0       	rjmp	.+4      	; 0x140c <vfprintf+0x6ae>
    1408:	8b e2       	ldi	r24, 0x2B	; 43
    140a:	01 c0       	rjmp	.+2      	; 0x140e <vfprintf+0x6b0>
    140c:	80 e2       	ldi	r24, 0x20	; 32
    140e:	f7 fc       	sbrc	r15, 7
    1410:	8d e2       	ldi	r24, 0x2D	; 45
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	b3 01       	movw	r22, r6
    1416:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    141a:	06 c0       	rjmp	.+12     	; 0x1428 <vfprintf+0x6ca>
    141c:	80 e3       	ldi	r24, 0x30	; 48
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	b3 01       	movw	r22, r6
    1422:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1426:	9a 94       	dec	r9
    1428:	e9 14       	cp	r14, r9
    142a:	c0 f3       	brcs	.-16     	; 0x141c <vfprintf+0x6be>
    142c:	ea 94       	dec	r14
    142e:	e1 e0       	ldi	r30, 0x01	; 1
    1430:	f0 e0       	ldi	r31, 0x00	; 0
    1432:	ec 0f       	add	r30, r28
    1434:	fd 1f       	adc	r31, r29
    1436:	ee 0d       	add	r30, r14
    1438:	f1 1d       	adc	r31, r1
    143a:	80 81       	ld	r24, Z
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	b3 01       	movw	r22, r6
    1440:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1444:	ee 20       	and	r14, r14
    1446:	91 f7       	brne	.-28     	; 0x142c <vfprintf+0x6ce>
    1448:	06 c0       	rjmp	.+12     	; 0x1456 <vfprintf+0x6f8>
    144a:	80 e2       	ldi	r24, 0x20	; 32
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	b3 01       	movw	r22, r6
    1450:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <fputc>
    1454:	8a 94       	dec	r8
    1456:	88 20       	and	r8, r8
    1458:	c1 f7       	brne	.-16     	; 0x144a <vfprintf+0x6ec>
    145a:	99 cc       	rjmp	.-1742   	; 0xd8e <vfprintf+0x30>
    145c:	f3 01       	movw	r30, r6
    145e:	66 81       	ldd	r22, Z+6	; 0x06
    1460:	77 81       	ldd	r23, Z+7	; 0x07
    1462:	cb 01       	movw	r24, r22
    1464:	61 96       	adiw	r28, 0x11	; 17
    1466:	e2 e1       	ldi	r30, 0x12	; 18
    1468:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__epilogue_restores__>

0000146c <__prologue_saves__>:
    146c:	2f 92       	push	r2
    146e:	3f 92       	push	r3
    1470:	4f 92       	push	r4
    1472:	5f 92       	push	r5
    1474:	6f 92       	push	r6
    1476:	7f 92       	push	r7
    1478:	8f 92       	push	r8
    147a:	9f 92       	push	r9
    147c:	af 92       	push	r10
    147e:	bf 92       	push	r11
    1480:	cf 92       	push	r12
    1482:	df 92       	push	r13
    1484:	ef 92       	push	r14
    1486:	ff 92       	push	r15
    1488:	0f 93       	push	r16
    148a:	1f 93       	push	r17
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	cd b7       	in	r28, 0x3d	; 61
    1492:	de b7       	in	r29, 0x3e	; 62
    1494:	ca 1b       	sub	r28, r26
    1496:	db 0b       	sbc	r29, r27
    1498:	0f b6       	in	r0, 0x3f	; 63
    149a:	f8 94       	cli
    149c:	de bf       	out	0x3e, r29	; 62
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	cd bf       	out	0x3d, r28	; 61
    14a2:	09 94       	ijmp

000014a4 <__epilogue_restores__>:
    14a4:	2a 88       	ldd	r2, Y+18	; 0x12
    14a6:	39 88       	ldd	r3, Y+17	; 0x11
    14a8:	48 88       	ldd	r4, Y+16	; 0x10
    14aa:	5f 84       	ldd	r5, Y+15	; 0x0f
    14ac:	6e 84       	ldd	r6, Y+14	; 0x0e
    14ae:	7d 84       	ldd	r7, Y+13	; 0x0d
    14b0:	8c 84       	ldd	r8, Y+12	; 0x0c
    14b2:	9b 84       	ldd	r9, Y+11	; 0x0b
    14b4:	aa 84       	ldd	r10, Y+10	; 0x0a
    14b6:	b9 84       	ldd	r11, Y+9	; 0x09
    14b8:	c8 84       	ldd	r12, Y+8	; 0x08
    14ba:	df 80       	ldd	r13, Y+7	; 0x07
    14bc:	ee 80       	ldd	r14, Y+6	; 0x06
    14be:	fd 80       	ldd	r15, Y+5	; 0x05
    14c0:	0c 81       	ldd	r16, Y+4	; 0x04
    14c2:	1b 81       	ldd	r17, Y+3	; 0x03
    14c4:	aa 81       	ldd	r26, Y+2	; 0x02
    14c6:	b9 81       	ldd	r27, Y+1	; 0x01
    14c8:	ce 0f       	add	r28, r30
    14ca:	d1 1d       	adc	r29, r1
    14cc:	0f b6       	in	r0, 0x3f	; 63
    14ce:	f8 94       	cli
    14d0:	de bf       	out	0x3e, r29	; 62
    14d2:	0f be       	out	0x3f, r0	; 63
    14d4:	cd bf       	out	0x3d, r28	; 61
    14d6:	ed 01       	movw	r28, r26
    14d8:	08 95       	ret

000014da <__ftoa_engine>:
    14da:	28 30       	cpi	r18, 0x08	; 8
    14dc:	08 f0       	brcs	.+2      	; 0x14e0 <__ftoa_engine+0x6>
    14de:	27 e0       	ldi	r18, 0x07	; 7
    14e0:	33 27       	eor	r19, r19
    14e2:	da 01       	movw	r26, r20
    14e4:	99 0f       	add	r25, r25
    14e6:	31 1d       	adc	r19, r1
    14e8:	87 fd       	sbrc	r24, 7
    14ea:	91 60       	ori	r25, 0x01	; 1
    14ec:	00 96       	adiw	r24, 0x00	; 0
    14ee:	61 05       	cpc	r22, r1
    14f0:	71 05       	cpc	r23, r1
    14f2:	39 f4       	brne	.+14     	; 0x1502 <__ftoa_engine+0x28>
    14f4:	32 60       	ori	r19, 0x02	; 2
    14f6:	2e 5f       	subi	r18, 0xFE	; 254
    14f8:	3d 93       	st	X+, r19
    14fa:	30 e3       	ldi	r19, 0x30	; 48
    14fc:	2a 95       	dec	r18
    14fe:	e1 f7       	brne	.-8      	; 0x14f8 <__ftoa_engine+0x1e>
    1500:	08 95       	ret
    1502:	9f 3f       	cpi	r25, 0xFF	; 255
    1504:	30 f0       	brcs	.+12     	; 0x1512 <__ftoa_engine+0x38>
    1506:	80 38       	cpi	r24, 0x80	; 128
    1508:	71 05       	cpc	r23, r1
    150a:	61 05       	cpc	r22, r1
    150c:	09 f0       	breq	.+2      	; 0x1510 <__ftoa_engine+0x36>
    150e:	3c 5f       	subi	r19, 0xFC	; 252
    1510:	3c 5f       	subi	r19, 0xFC	; 252
    1512:	3d 93       	st	X+, r19
    1514:	91 30       	cpi	r25, 0x01	; 1
    1516:	08 f0       	brcs	.+2      	; 0x151a <__ftoa_engine+0x40>
    1518:	80 68       	ori	r24, 0x80	; 128
    151a:	91 1d       	adc	r25, r1
    151c:	df 93       	push	r29
    151e:	cf 93       	push	r28
    1520:	1f 93       	push	r17
    1522:	0f 93       	push	r16
    1524:	ff 92       	push	r15
    1526:	ef 92       	push	r14
    1528:	19 2f       	mov	r17, r25
    152a:	98 7f       	andi	r25, 0xF8	; 248
    152c:	96 95       	lsr	r25
    152e:	e9 2f       	mov	r30, r25
    1530:	96 95       	lsr	r25
    1532:	96 95       	lsr	r25
    1534:	e9 0f       	add	r30, r25
    1536:	ff 27       	eor	r31, r31
    1538:	e6 53       	subi	r30, 0x36	; 54
    153a:	ff 4f       	sbci	r31, 0xFF	; 255
    153c:	99 27       	eor	r25, r25
    153e:	33 27       	eor	r19, r19
    1540:	ee 24       	eor	r14, r14
    1542:	ff 24       	eor	r15, r15
    1544:	a7 01       	movw	r20, r14
    1546:	e7 01       	movw	r28, r14
    1548:	05 90       	lpm	r0, Z+
    154a:	08 94       	sec
    154c:	07 94       	ror	r0
    154e:	28 f4       	brcc	.+10     	; 0x155a <__ftoa_engine+0x80>
    1550:	36 0f       	add	r19, r22
    1552:	e7 1e       	adc	r14, r23
    1554:	f8 1e       	adc	r15, r24
    1556:	49 1f       	adc	r20, r25
    1558:	51 1d       	adc	r21, r1
    155a:	66 0f       	add	r22, r22
    155c:	77 1f       	adc	r23, r23
    155e:	88 1f       	adc	r24, r24
    1560:	99 1f       	adc	r25, r25
    1562:	06 94       	lsr	r0
    1564:	a1 f7       	brne	.-24     	; 0x154e <__ftoa_engine+0x74>
    1566:	05 90       	lpm	r0, Z+
    1568:	07 94       	ror	r0
    156a:	28 f4       	brcc	.+10     	; 0x1576 <__ftoa_engine+0x9c>
    156c:	e7 0e       	add	r14, r23
    156e:	f8 1e       	adc	r15, r24
    1570:	49 1f       	adc	r20, r25
    1572:	56 1f       	adc	r21, r22
    1574:	c1 1d       	adc	r28, r1
    1576:	77 0f       	add	r23, r23
    1578:	88 1f       	adc	r24, r24
    157a:	99 1f       	adc	r25, r25
    157c:	66 1f       	adc	r22, r22
    157e:	06 94       	lsr	r0
    1580:	a1 f7       	brne	.-24     	; 0x156a <__ftoa_engine+0x90>
    1582:	05 90       	lpm	r0, Z+
    1584:	07 94       	ror	r0
    1586:	28 f4       	brcc	.+10     	; 0x1592 <__ftoa_engine+0xb8>
    1588:	f8 0e       	add	r15, r24
    158a:	49 1f       	adc	r20, r25
    158c:	56 1f       	adc	r21, r22
    158e:	c7 1f       	adc	r28, r23
    1590:	d1 1d       	adc	r29, r1
    1592:	88 0f       	add	r24, r24
    1594:	99 1f       	adc	r25, r25
    1596:	66 1f       	adc	r22, r22
    1598:	77 1f       	adc	r23, r23
    159a:	06 94       	lsr	r0
    159c:	a1 f7       	brne	.-24     	; 0x1586 <__ftoa_engine+0xac>
    159e:	05 90       	lpm	r0, Z+
    15a0:	07 94       	ror	r0
    15a2:	20 f4       	brcc	.+8      	; 0x15ac <__ftoa_engine+0xd2>
    15a4:	49 0f       	add	r20, r25
    15a6:	56 1f       	adc	r21, r22
    15a8:	c7 1f       	adc	r28, r23
    15aa:	d8 1f       	adc	r29, r24
    15ac:	99 0f       	add	r25, r25
    15ae:	66 1f       	adc	r22, r22
    15b0:	77 1f       	adc	r23, r23
    15b2:	88 1f       	adc	r24, r24
    15b4:	06 94       	lsr	r0
    15b6:	a9 f7       	brne	.-22     	; 0x15a2 <__ftoa_engine+0xc8>
    15b8:	84 91       	lpm	r24, Z+
    15ba:	10 95       	com	r17
    15bc:	17 70       	andi	r17, 0x07	; 7
    15be:	41 f0       	breq	.+16     	; 0x15d0 <__ftoa_engine+0xf6>
    15c0:	d6 95       	lsr	r29
    15c2:	c7 95       	ror	r28
    15c4:	57 95       	ror	r21
    15c6:	47 95       	ror	r20
    15c8:	f7 94       	ror	r15
    15ca:	e7 94       	ror	r14
    15cc:	1a 95       	dec	r17
    15ce:	c1 f7       	brne	.-16     	; 0x15c0 <__ftoa_engine+0xe6>
    15d0:	e0 e7       	ldi	r30, 0x70	; 112
    15d2:	f0 e0       	ldi	r31, 0x00	; 0
    15d4:	68 94       	set
    15d6:	15 90       	lpm	r1, Z+
    15d8:	15 91       	lpm	r17, Z+
    15da:	35 91       	lpm	r19, Z+
    15dc:	65 91       	lpm	r22, Z+
    15de:	95 91       	lpm	r25, Z+
    15e0:	05 90       	lpm	r0, Z+
    15e2:	7f e2       	ldi	r23, 0x2F	; 47
    15e4:	73 95       	inc	r23
    15e6:	e1 18       	sub	r14, r1
    15e8:	f1 0a       	sbc	r15, r17
    15ea:	43 0b       	sbc	r20, r19
    15ec:	56 0b       	sbc	r21, r22
    15ee:	c9 0b       	sbc	r28, r25
    15f0:	d0 09       	sbc	r29, r0
    15f2:	c0 f7       	brcc	.-16     	; 0x15e4 <__ftoa_engine+0x10a>
    15f4:	e1 0c       	add	r14, r1
    15f6:	f1 1e       	adc	r15, r17
    15f8:	43 1f       	adc	r20, r19
    15fa:	56 1f       	adc	r21, r22
    15fc:	c9 1f       	adc	r28, r25
    15fe:	d0 1d       	adc	r29, r0
    1600:	7e f4       	brtc	.+30     	; 0x1620 <__ftoa_engine+0x146>
    1602:	70 33       	cpi	r23, 0x30	; 48
    1604:	11 f4       	brne	.+4      	; 0x160a <__ftoa_engine+0x130>
    1606:	8a 95       	dec	r24
    1608:	e6 cf       	rjmp	.-52     	; 0x15d6 <__ftoa_engine+0xfc>
    160a:	e8 94       	clt
    160c:	01 50       	subi	r16, 0x01	; 1
    160e:	30 f0       	brcs	.+12     	; 0x161c <__ftoa_engine+0x142>
    1610:	08 0f       	add	r16, r24
    1612:	0a f4       	brpl	.+2      	; 0x1616 <__ftoa_engine+0x13c>
    1614:	00 27       	eor	r16, r16
    1616:	02 17       	cp	r16, r18
    1618:	08 f4       	brcc	.+2      	; 0x161c <__ftoa_engine+0x142>
    161a:	20 2f       	mov	r18, r16
    161c:	23 95       	inc	r18
    161e:	02 2f       	mov	r16, r18
    1620:	7a 33       	cpi	r23, 0x3A	; 58
    1622:	28 f0       	brcs	.+10     	; 0x162e <__ftoa_engine+0x154>
    1624:	79 e3       	ldi	r23, 0x39	; 57
    1626:	7d 93       	st	X+, r23
    1628:	2a 95       	dec	r18
    162a:	e9 f7       	brne	.-6      	; 0x1626 <__ftoa_engine+0x14c>
    162c:	10 c0       	rjmp	.+32     	; 0x164e <__ftoa_engine+0x174>
    162e:	7d 93       	st	X+, r23
    1630:	2a 95       	dec	r18
    1632:	89 f6       	brne	.-94     	; 0x15d6 <__ftoa_engine+0xfc>
    1634:	06 94       	lsr	r0
    1636:	97 95       	ror	r25
    1638:	67 95       	ror	r22
    163a:	37 95       	ror	r19
    163c:	17 95       	ror	r17
    163e:	17 94       	ror	r1
    1640:	e1 18       	sub	r14, r1
    1642:	f1 0a       	sbc	r15, r17
    1644:	43 0b       	sbc	r20, r19
    1646:	56 0b       	sbc	r21, r22
    1648:	c9 0b       	sbc	r28, r25
    164a:	d0 09       	sbc	r29, r0
    164c:	98 f0       	brcs	.+38     	; 0x1674 <__ftoa_engine+0x19a>
    164e:	23 95       	inc	r18
    1650:	7e 91       	ld	r23, -X
    1652:	73 95       	inc	r23
    1654:	7a 33       	cpi	r23, 0x3A	; 58
    1656:	08 f0       	brcs	.+2      	; 0x165a <__ftoa_engine+0x180>
    1658:	70 e3       	ldi	r23, 0x30	; 48
    165a:	7c 93       	st	X, r23
    165c:	20 13       	cpse	r18, r16
    165e:	b8 f7       	brcc	.-18     	; 0x164e <__ftoa_engine+0x174>
    1660:	7e 91       	ld	r23, -X
    1662:	70 61       	ori	r23, 0x10	; 16
    1664:	7d 93       	st	X+, r23
    1666:	30 f0       	brcs	.+12     	; 0x1674 <__ftoa_engine+0x19a>
    1668:	83 95       	inc	r24
    166a:	71 e3       	ldi	r23, 0x31	; 49
    166c:	7d 93       	st	X+, r23
    166e:	70 e3       	ldi	r23, 0x30	; 48
    1670:	2a 95       	dec	r18
    1672:	e1 f7       	brne	.-8      	; 0x166c <__ftoa_engine+0x192>
    1674:	11 24       	eor	r1, r1
    1676:	ef 90       	pop	r14
    1678:	ff 90       	pop	r15
    167a:	0f 91       	pop	r16
    167c:	1f 91       	pop	r17
    167e:	cf 91       	pop	r28
    1680:	df 91       	pop	r29
    1682:	99 27       	eor	r25, r25
    1684:	87 fd       	sbrc	r24, 7
    1686:	90 95       	com	r25
    1688:	08 95       	ret

0000168a <strnlen_P>:
    168a:	fc 01       	movw	r30, r24
    168c:	05 90       	lpm	r0, Z+
    168e:	61 50       	subi	r22, 0x01	; 1
    1690:	70 40       	sbci	r23, 0x00	; 0
    1692:	01 10       	cpse	r0, r1
    1694:	d8 f7       	brcc	.-10     	; 0x168c <strnlen_P+0x2>
    1696:	80 95       	com	r24
    1698:	90 95       	com	r25
    169a:	8e 0f       	add	r24, r30
    169c:	9f 1f       	adc	r25, r31
    169e:	08 95       	ret

000016a0 <strnlen>:
    16a0:	fc 01       	movw	r30, r24
    16a2:	61 50       	subi	r22, 0x01	; 1
    16a4:	70 40       	sbci	r23, 0x00	; 0
    16a6:	01 90       	ld	r0, Z+
    16a8:	01 10       	cpse	r0, r1
    16aa:	d8 f7       	brcc	.-10     	; 0x16a2 <strnlen+0x2>
    16ac:	80 95       	com	r24
    16ae:	90 95       	com	r25
    16b0:	8e 0f       	add	r24, r30
    16b2:	9f 1f       	adc	r25, r31
    16b4:	08 95       	ret

000016b6 <fputc>:
    16b6:	0f 93       	push	r16
    16b8:	1f 93       	push	r17
    16ba:	cf 93       	push	r28
    16bc:	df 93       	push	r29
    16be:	8c 01       	movw	r16, r24
    16c0:	eb 01       	movw	r28, r22
    16c2:	8b 81       	ldd	r24, Y+3	; 0x03
    16c4:	81 ff       	sbrs	r24, 1
    16c6:	1b c0       	rjmp	.+54     	; 0x16fe <fputc+0x48>
    16c8:	82 ff       	sbrs	r24, 2
    16ca:	0d c0       	rjmp	.+26     	; 0x16e6 <fputc+0x30>
    16cc:	2e 81       	ldd	r18, Y+6	; 0x06
    16ce:	3f 81       	ldd	r19, Y+7	; 0x07
    16d0:	8c 81       	ldd	r24, Y+4	; 0x04
    16d2:	9d 81       	ldd	r25, Y+5	; 0x05
    16d4:	28 17       	cp	r18, r24
    16d6:	39 07       	cpc	r19, r25
    16d8:	64 f4       	brge	.+24     	; 0x16f2 <fputc+0x3c>
    16da:	e8 81       	ld	r30, Y
    16dc:	f9 81       	ldd	r31, Y+1	; 0x01
    16de:	01 93       	st	Z+, r16
    16e0:	f9 83       	std	Y+1, r31	; 0x01
    16e2:	e8 83       	st	Y, r30
    16e4:	06 c0       	rjmp	.+12     	; 0x16f2 <fputc+0x3c>
    16e6:	e8 85       	ldd	r30, Y+8	; 0x08
    16e8:	f9 85       	ldd	r31, Y+9	; 0x09
    16ea:	80 2f       	mov	r24, r16
    16ec:	09 95       	icall
    16ee:	89 2b       	or	r24, r25
    16f0:	31 f4       	brne	.+12     	; 0x16fe <fputc+0x48>
    16f2:	8e 81       	ldd	r24, Y+6	; 0x06
    16f4:	9f 81       	ldd	r25, Y+7	; 0x07
    16f6:	01 96       	adiw	r24, 0x01	; 1
    16f8:	9f 83       	std	Y+7, r25	; 0x07
    16fa:	8e 83       	std	Y+6, r24	; 0x06
    16fc:	02 c0       	rjmp	.+4      	; 0x1702 <fputc+0x4c>
    16fe:	0f ef       	ldi	r16, 0xFF	; 255
    1700:	1f ef       	ldi	r17, 0xFF	; 255
    1702:	c8 01       	movw	r24, r16
    1704:	df 91       	pop	r29
    1706:	cf 91       	pop	r28
    1708:	1f 91       	pop	r17
    170a:	0f 91       	pop	r16
    170c:	08 95       	ret

0000170e <sprintf>:
    170e:	ae e0       	ldi	r26, 0x0E	; 14
    1710:	b0 e0       	ldi	r27, 0x00	; 0
    1712:	ed e8       	ldi	r30, 0x8D	; 141
    1714:	fb e0       	ldi	r31, 0x0B	; 11
    1716:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__prologue_saves__+0x1c>
    171a:	0d 89       	ldd	r16, Y+21	; 0x15
    171c:	1e 89       	ldd	r17, Y+22	; 0x16
    171e:	86 e0       	ldi	r24, 0x06	; 6
    1720:	8c 83       	std	Y+4, r24	; 0x04
    1722:	1a 83       	std	Y+2, r17	; 0x02
    1724:	09 83       	std	Y+1, r16	; 0x01
    1726:	8f ef       	ldi	r24, 0xFF	; 255
    1728:	9f e7       	ldi	r25, 0x7F	; 127
    172a:	9e 83       	std	Y+6, r25	; 0x06
    172c:	8d 83       	std	Y+5, r24	; 0x05
    172e:	9e 01       	movw	r18, r28
    1730:	27 5e       	subi	r18, 0xE7	; 231
    1732:	3f 4f       	sbci	r19, 0xFF	; 255
    1734:	ce 01       	movw	r24, r28
    1736:	01 96       	adiw	r24, 0x01	; 1
    1738:	6f 89       	ldd	r22, Y+23	; 0x17
    173a:	78 8d       	ldd	r23, Y+24	; 0x18
    173c:	a9 01       	movw	r20, r18
    173e:	0e 94 af 06 	call	0xd5e	; 0xd5e <vfprintf>
    1742:	2f 81       	ldd	r18, Y+7	; 0x07
    1744:	38 85       	ldd	r19, Y+8	; 0x08
    1746:	02 0f       	add	r16, r18
    1748:	13 1f       	adc	r17, r19
    174a:	f8 01       	movw	r30, r16
    174c:	10 82       	st	Z, r1
    174e:	2e 96       	adiw	r28, 0x0e	; 14
    1750:	e4 e0       	ldi	r30, 0x04	; 4
    1752:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__epilogue_restores__+0x1c>

00001756 <__ultoa_invert>:
    1756:	fa 01       	movw	r30, r20
    1758:	aa 27       	eor	r26, r26
    175a:	28 30       	cpi	r18, 0x08	; 8
    175c:	51 f1       	breq	.+84     	; 0x17b2 <__ultoa_invert+0x5c>
    175e:	20 31       	cpi	r18, 0x10	; 16
    1760:	81 f1       	breq	.+96     	; 0x17c2 <__ultoa_invert+0x6c>
    1762:	e8 94       	clt
    1764:	6f 93       	push	r22
    1766:	6e 7f       	andi	r22, 0xFE	; 254
    1768:	6e 5f       	subi	r22, 0xFE	; 254
    176a:	7f 4f       	sbci	r23, 0xFF	; 255
    176c:	8f 4f       	sbci	r24, 0xFF	; 255
    176e:	9f 4f       	sbci	r25, 0xFF	; 255
    1770:	af 4f       	sbci	r26, 0xFF	; 255
    1772:	b1 e0       	ldi	r27, 0x01	; 1
    1774:	3e d0       	rcall	.+124    	; 0x17f2 <__ultoa_invert+0x9c>
    1776:	b4 e0       	ldi	r27, 0x04	; 4
    1778:	3c d0       	rcall	.+120    	; 0x17f2 <__ultoa_invert+0x9c>
    177a:	67 0f       	add	r22, r23
    177c:	78 1f       	adc	r23, r24
    177e:	89 1f       	adc	r24, r25
    1780:	9a 1f       	adc	r25, r26
    1782:	a1 1d       	adc	r26, r1
    1784:	68 0f       	add	r22, r24
    1786:	79 1f       	adc	r23, r25
    1788:	8a 1f       	adc	r24, r26
    178a:	91 1d       	adc	r25, r1
    178c:	a1 1d       	adc	r26, r1
    178e:	6a 0f       	add	r22, r26
    1790:	71 1d       	adc	r23, r1
    1792:	81 1d       	adc	r24, r1
    1794:	91 1d       	adc	r25, r1
    1796:	a1 1d       	adc	r26, r1
    1798:	20 d0       	rcall	.+64     	; 0x17da <__ultoa_invert+0x84>
    179a:	09 f4       	brne	.+2      	; 0x179e <__ultoa_invert+0x48>
    179c:	68 94       	set
    179e:	3f 91       	pop	r19
    17a0:	2a e0       	ldi	r18, 0x0A	; 10
    17a2:	26 9f       	mul	r18, r22
    17a4:	11 24       	eor	r1, r1
    17a6:	30 19       	sub	r19, r0
    17a8:	30 5d       	subi	r19, 0xD0	; 208
    17aa:	31 93       	st	Z+, r19
    17ac:	de f6       	brtc	.-74     	; 0x1764 <__ultoa_invert+0xe>
    17ae:	cf 01       	movw	r24, r30
    17b0:	08 95       	ret
    17b2:	46 2f       	mov	r20, r22
    17b4:	47 70       	andi	r20, 0x07	; 7
    17b6:	40 5d       	subi	r20, 0xD0	; 208
    17b8:	41 93       	st	Z+, r20
    17ba:	b3 e0       	ldi	r27, 0x03	; 3
    17bc:	0f d0       	rcall	.+30     	; 0x17dc <__ultoa_invert+0x86>
    17be:	c9 f7       	brne	.-14     	; 0x17b2 <__ultoa_invert+0x5c>
    17c0:	f6 cf       	rjmp	.-20     	; 0x17ae <__ultoa_invert+0x58>
    17c2:	46 2f       	mov	r20, r22
    17c4:	4f 70       	andi	r20, 0x0F	; 15
    17c6:	40 5d       	subi	r20, 0xD0	; 208
    17c8:	4a 33       	cpi	r20, 0x3A	; 58
    17ca:	18 f0       	brcs	.+6      	; 0x17d2 <__ultoa_invert+0x7c>
    17cc:	49 5d       	subi	r20, 0xD9	; 217
    17ce:	31 fd       	sbrc	r19, 1
    17d0:	40 52       	subi	r20, 0x20	; 32
    17d2:	41 93       	st	Z+, r20
    17d4:	02 d0       	rcall	.+4      	; 0x17da <__ultoa_invert+0x84>
    17d6:	a9 f7       	brne	.-22     	; 0x17c2 <__ultoa_invert+0x6c>
    17d8:	ea cf       	rjmp	.-44     	; 0x17ae <__ultoa_invert+0x58>
    17da:	b4 e0       	ldi	r27, 0x04	; 4
    17dc:	a6 95       	lsr	r26
    17de:	97 95       	ror	r25
    17e0:	87 95       	ror	r24
    17e2:	77 95       	ror	r23
    17e4:	67 95       	ror	r22
    17e6:	ba 95       	dec	r27
    17e8:	c9 f7       	brne	.-14     	; 0x17dc <__ultoa_invert+0x86>
    17ea:	00 97       	sbiw	r24, 0x00	; 0
    17ec:	61 05       	cpc	r22, r1
    17ee:	71 05       	cpc	r23, r1
    17f0:	08 95       	ret
    17f2:	9b 01       	movw	r18, r22
    17f4:	ac 01       	movw	r20, r24
    17f6:	0a 2e       	mov	r0, r26
    17f8:	06 94       	lsr	r0
    17fa:	57 95       	ror	r21
    17fc:	47 95       	ror	r20
    17fe:	37 95       	ror	r19
    1800:	27 95       	ror	r18
    1802:	ba 95       	dec	r27
    1804:	c9 f7       	brne	.-14     	; 0x17f8 <__ultoa_invert+0xa2>
    1806:	62 0f       	add	r22, r18
    1808:	73 1f       	adc	r23, r19
    180a:	84 1f       	adc	r24, r20
    180c:	95 1f       	adc	r25, r21
    180e:	a0 1d       	adc	r26, r0
    1810:	08 95       	ret

00001812 <_exit>:
    1812:	f8 94       	cli

00001814 <__stop_program>:
    1814:	ff cf       	rjmp	.-2      	; 0x1814 <__stop_program>
